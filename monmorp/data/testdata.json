{"_id":{"$oid":"51dcf3b9ee126e2fca110b21"},"body":"Apache HTTP Server\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\n「Apache」はこの項目へ転送されています。そのほかの用法については「アパッチ (曖昧さ回避)」をご覧ください。\\nApache HTTP Server\\n開発元\\nApacheソフトウェア財団\\n初版\\n1995年（18年前） （1995）[1]\\n最新版\\n2.4.4 - 2013年2月25日（4か月前） （2013-02-25）\\n2.2.24 - 2013年2月26日（4か月前） （2013-02-26）\\n2.0.64 - 2010年10月19日（2年前） （2010-10-19）\\n[±]\\n最新評価版\\n[±]\\nプラットフォーム\\nクロスプラットフォーム\\n種別\\nWebサーバ\\nライセンス\\nApache License\\n公式サイト\\nhttps://httpd.apache.org/\\nテンプレートを表示\\nApache HTTP Server（アパッチ エイチティーティーピー サーバ）は、世界中でもっとも使われているWebサーバソフトウェアであり、大規模な商用サイトから自宅サーバまで幅広く利用されている。単にApacheとも称されている。\\n開発は、Apacheソフトウェア財団のApache HTTPサーバプロジェクトで行われている。Apache Licenseの下でソースコードが公開および配布されており、代表的なオープンソース・ソフトウェアの一つである。\\n目次\\n1 特徴\\n1.1 複数のバージョンのサポート\\n1.2 複数のOSに最適化 (MPM)\\n1.3 モジュールによる機能追加\\n1.4 プロセスの挙動\\n2 利用形態\\n2.1 特殊な形態\\n3 歴史\\n4 関連項目\\n5 脚注\\n6 外部リンク\\n特徴[編集]\\n複数のバージョンのサポート[編集]\\n2012年2月現在、Apacheは以下の3バージョンをサポートしている。\\n2.0系 \\nほぼセキュリティ関係の修正のみであり、2.2系への移行が推奨されている。\\n2.2系 \\n安定志向のユーザーに利用されている。\\n2.4系 \\n最新の機能を搭載している。\\n複数のOSに最適化 (MPM)[編集]\\nApacheは数多くのOSをサポートするために、MPM（マルチ プロセッシング モジュール）という仕組みをとっている。これにより、利用するOSに最適化されたApacheを容易に組み込むことができる。\\nモジュールによる機能追加[編集]\\nApacheの機能はモジュールを追加することで拡張できる。Apacheの核となる「Core」がまずあり、そこへモジュールを追加して機能を拡張する。モジュール名は慣習的に「mod_XXX」と付けられる。XXXは機能の概要名である。例えば「mod_dir」「mod_alias」「mod_setenvif」などとなる。\\nモジュールは「静的リンク」または「動的リンク」により追加できる。静的リンクとは、Apacheの実行ファイルそのものにモジュールを組み込む方式である。つまりApacheとモジュールはバイナリ的に一体化して動作する。動的リンクとは、モジュールを別ファイルとして作成し、必要に応じてモジュールのファイルから機能を呼び出す方式である。この機能を「DSO（Dynamic Shared Object＝動的共有オブジェクト）」と呼ぶ。動的リンクの機能を利用するためには、あらかじめ「mod_so」モジュールを静的リンクしておく必要がある。\\n動的リンクはモジュール機能の呼び出しで静的リンクよりも負荷が高くなる（オーバーヘッドがかかる）デメリットがあるが、再起動のみでモジュールを組み入れたり外したりできるメリットがある。 逆に静的リンクは高速にモジュール機能を呼び出せるが、モジュールを入れたり外すためにはApache本体を再コンパイルする必要がある。\\nプロセスの挙動[編集]\\nApacheはプロセスの挙動として3つの方式を持っている。\\nprefork\\npreforkは「スレッドを使わず、先行して fork を行なうウェブサーバ」である。Apacheは伝統的に親プロセスを1つ持ち、クライアントからリクエストが来ると自分自身をコピーして子プロセスを起動する（これをforkという）。実際の通信は子プロセスが受け持つ。そのため、通信している数だけ子プロセスが起動することになる。この時、クライアントからリクエストを受けたあとでforkするとfork完了までに待ち時間が出来て通信のパフォーマンスが遅くなる。そのため、あらかじめいくつかの子プロセスをforkしておき、forkの待ち時間をなくす方式をとっている。この方式が「prefork」である。すなわち“pre（＝前もって・先行して）”forkしておく、という意味である。\\npreforkのメリットは、forkされた子プロセス1つ1つが対応する通信を受け持つため、ある子プロセスが何らかの原因でフリーズしたとしても、他の子プロセスには影響を及ぼすことが無く通信を継続できる。このため安定した通信を行うことが出来る。一方、クライアントが多くなればなるほど子プロセスの数も増えるため、使用メモリ量やCPU負荷が比例的に増大していく。preforkで多数のクライアントをさばくには、それに応じた大量のメモリと高速なCPUが必要となる。\\nworker\\nworkerは「マルチスレッドとマルチプロセスのハイブリッド型サーバ」である。Apacheの子プロセス1つ1つがマルチスレッドで動作し、スレッド1つが1つのクライアントを受け持つ方式である。すなわち、1つのプロセスがマルチスレッドを利用して複数の通信の面倒を見る。この点で1つのプロセスが1つの通信をみるpreforkとは異なる。また多くの子プロセスを起動せずに済むため、メモリの使用量も減らすことが出来る。\\nevent\\neventはworkerの一種でマルチスレッドで動作する。workerとの違いはKeep-Alive（持続的接続）の処理方法である。workerやpreforkは、Keep-Aliveの持続性を保つために一度利用したスレッド・プロセスをそのまま待機させている。しかしクライアントからの接続が持続的に行われる可能性は保証されているわけではないから、待機していること自体が無駄になる可能性もある。そこで、Keep-Aliveの処理を別のスレッドに割り振って通信を処理する。\\nこの方式は長らく実験的サポートであったが、2.4.1にて正式に採用された[2]。\\n利用形態[編集]\\nApacheは、主にワールドワイドウェブ上で静的または動的なコンテンツを公開するために使われる。多くのウェブアプリケーションは、Apacheが提供する環境と機能を想定して設計されている。また、ApacheはLAMP (Linux、Apache、MySQL、PHP/Perl/Python) や LAPP (Linux、Apache、PostgreSQL、PHP/Perl/Python) と呼ばれる非常に人気のあるウェブサーバコンポーネントの一つでもある。さらに、Apacheはいろいろな商用パッケージ、例えばOracle DatabaseやIBM WebSphere Application Serverに組み込まれており、Mac OS XやNetWare 6.5の標準Webサーバにもなっている。\\nYahooは1996年よりApacheを利用しており、現在ではカスタマイズしたApacheを数千台のWebサーバに導入して、一日数十億のアクセスを処理していることでもその信頼性の高さがわかる。\\n特殊な形態[編集]\\nApacheでは、FreeBSDのカーネルと連動し、最高の性能を引き出す特殊な動作形態をサポートしている[3]。 これはFreeBSDをHTTPサーバに特化するという運用形態を想定したもので、FreeBSD及びApacheの両者に設定が必要であり、共にインストール直後の標準設定ではサポートされない。\\n基本的な動作は、LinuxのTUX web serverやWindowsのInternet Information Servicesなどに近い実装であり、通信バッファのカーネルからの直接的な読込やkqueueなど多岐にわたり、一部のみ利用ということも可能になっている。\\n同形態はLinuxにおけるサポートも検討されたが、あまりに特殊であるため未実装となっている。[独自研究?]\\n歴史[編集]\\n1995年当時Webサーバソフトウェアは欧州原子核研究機構(CERN)のティム・バーナーズ＝リーが開発したCERN HTTPdと米国立スーパーコンピュータ応用研究所(NCSA)が開発したNCSA HTTPdの2種類があった。NCSA HTTPdは初めてCGIを採用するなど、非常に普及していたが、その後ほとんどメンテナンスが行われなくなり、放置されていた。そこで、何人かの有志が改良とサポートを行うためのグループを作り、自分たちをApache Groupと名付けた。しかし、彼等もその後プロジェクトに興味を失ってしまい、再度放置されかけた。そのため、1999年にユーザーの一人だったBrian Behlendorfが自分のサーバを使ってユーザーのためのメーリングリストを立ち上げた。これが現在のApacheソフトウェア財団の母体になっている。ただし、現在のApacheのソースコードはApacheソフトウェア財団によって完全に書き換えられており、NCSA HTTPdのコードは残っていない。\\n関連項目[編集]\\nWebサーバ\\nIBM HTTP Server\\nnginx\\n脚注[編集]\\n[ヘルプ]\\n^ “About the Apache HTTP Server Project”.  Apacheソフトウェア財団. 2013年5月30日閲覧。\\n^ “Apache HTTP Server、6年ぶりのメジャーアップデート版「2.4.1」リリース”.  SourceForge.JP (2012年2月22日). 2012年2月23日閲覧。\\n^ “accf_http”. 2013年6月5日閲覧。\\n外部リンク[編集]\\nポータル FLOSS\\nウィキメディア・コモンズには、Apache HTTP Serverに関連するカテゴリがあります。\\n公式サイト（英語）\\n日本Apacheユーザ会（日本語）\\nApache News Online（英語）\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n表・話・編・歴\\nWebインターフェイス（Web API（英語版））\\nサーバーサイド（英語版）\\nプロトコル\\nCGI\\nSCGI（英語版）\\nFCGI\\nAJP（英語版）\\nAPIs\\nC NSAPI（英語版）\\nC ASAPI\\nC ISAPI（英語版）\\nJava Servlet\\nCIL System.Web.IHttpHandler（英語版）\\nPython WSGI\\nRuby Rack（英語版）\\nJavaScript JSGI（英語版）\\nPerl PSGI\\nLua WSAPI（英語版）\\nApacheモジュール\\nmod_jk（英語版）\\nmod_lisp（英語版）\\nmod_mono（英語版）\\nmod_parrot（英語版）\\nmod_perl（英語版）\\nmod_php\\nmod_python\\nmod_wsgi\\nmod_ruby（英語版）\\nPhusion Passenger\\nトピックス\\nWeb resource（英語版） vs. Web service（英語版）\\nApplication server（英語版）\\ncomparison（英語版）\\nクライアントサイド\\nW3C\\nAudio（英語版）\\nCanvas\\nCORS（英語版）\\nFile API（英語版）\\nGeolocation（英語版）\\nIndexedDB\\nMicrodata（英語版）\\nSVG\\nVideo（英語版）\\nWebSocket\\nWeb messaging（英語版）\\nWeb storage（英語版）\\nWeb worker（英語版）\\nXMLHttpRequest\\nクロノス（英語版）\\nWebCL\\nWebGL\\nウェブユーザーインターフェース\\n「http://ja.wikipedia.org/w/index.php?title=Apache_HTTP_Server&oldid=48283809」から取得 \\nカテゴリ: オープンソースWebサーバApacheソフトウェア財団隠しカテゴリ: 独自研究の除去が必要な記述のある記事/2013年\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nAzərbaycanca\\nБългарски\\nBosanski\\nCatalà\\nکوردی\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEsperanto\\nEspañol\\nEesti\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nGalego\\nעברית\\nहिन्दी\\nHrvatski\\nMagyar\\nInterlingua\\nBahasa Indonesia\\nItaliano\\nქართული\\nTaqbaylit\\n한국어\\nKurdî\\nLietuvių\\nLatviešu\\nമലയാളം\\nBahasa Melayu\\nNederlands\\nNorsk nynorsk\\nNorsk bokmål\\nOccitan\\nPolski\\nPortuguês\\nRomână\\nРусский\\nSrpskohrvatski / српскохрватски\\nSimple English\\nSlovenčina\\nSlovenščina\\nСрпски / srpski\\nBasa Sunda\\nSvenska\\nதமிழ்\\nไทย\\nTürkçe\\nУкраїнська\\nOʻzbekcha\\nTiếng Việt\\nWinaray\\n中文\\nリンクを編集\\n最終更新 2013年6月25日 (火) 01:45 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b22"},"body":"Hypertable\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nHypertable\\nファイル:Hypertable Logo.png\\n最新版\\n0.9.6.4 / 2012年9月19日（9か月前） （2012-09-19）\\nプログラミング言語\\nC++\\n対応OS\\nCross-platform\\nサポート状況\\nActive\\n種別\\nColumn oriented database\\nライセンス\\nGNU General Public License 2.0\\n公式サイト\\nhttp://www.hypertable.org/\\nテンプレートを表示\\nHypertableはオープンソースのBigTable互換プロジェクトである。このプロジェクトはGoogle社のBigTable論文に記載されている概念、及び数年およぶおよび大規模データ処理タスクに取り組んだエンジニアの経験に基づいている。\\nスポンサー[編集]\\nHypertableはZvents社において社内ソフトウェアとして開発され、最近百度社が新規スポンサーとなった。\\n関連項目[編集]\\nBigTable\\nHBase\\n外部リンク[編集]\\n公式プロジェクトページ\\nGoogle Codeプロジェクトページ\\nこの項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。\\n「http://ja.wikipedia.org/w/index.php?title=Hypertable&oldid=47270388」から取得 \\nカテゴリ: NoSQLデータベースオープンソースデータベース管理システム隠しカテゴリ: 壊れたファイルへのリンクがあるページソフトウェア関連のスタブ\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い���わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nEnglish\\nリンクを編集\\n最終更新 2013年4月9日 (火) 10:15 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b24"},"body":"BigTable\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nBigTable（ビッグテーブル）とは、Googleの大規模なサーバ上の大量のデータを管理する為に設計されたデータベースシステムである。Googleの分散ストレージ・システムを支えている。\\n目次\\n1 特徴\\n2 技術\\n3 他の実装\\n4 関連事項\\n5 参考文献\\n6 外部リンク\\n特徴[編集]\\nBigTableは、データ圧縮された高パフォーマンスのプロプライエタリなデータベースシステムである。Google File System（GFS）やChubby Lock Service、その他のいくつかのGoogleのプログラムで構築されている。今のところGoogle以外には供給されていない。2004年から作成され[1]、現在はMapReduce（BigTableに格納されたデータの生成や修正にしばしば使われている）[2]やGoogle Reader[3]、Google マップ[4]、Google Print、「My Search History」、Google Earth、Blogger、Google Code hosting, Orkut[4] 、YouTube[5]のようないくつものGoogleのアプリケーションで使用されている。Googleが自社のデータベースを開発する理由はコスト、スケーラビリティ、パフォーマンス特性のより良いコントロールなどである[6]。\\n技術[編集]\\nBigTableは高速で超大規模な列指向DBMSである。行ではなく、列からの高速な読み込みに焦点を当てている。BigTableは数百から数千台のサーバのペタバイトまでのデータを扱い、システムにサーバを簡単に増設して、再設定なしにそれらのリソースを自動的に利用し始めるように設計されている[7] 。\\n各テーブルは多次元である。1つ1つのフィールドはその時点のスナップショットを持ち、バージョニングを行う事が出来る。テーブルはGFSに最適化されており、大きなテーブルは複数のTablet segment（タブレットセグメント）に自動的に分割される。分割はタブレットが200メガバイトのサイズになるように行の境界で行われる。サイズが特定の限界を超える兆候が見られた場合、テーブルはBMDiffとZippyアルゴリズムを使用して圧縮される。これらはLZWより圧縮率で劣るが、計算量で勝っている。\\nタブレットのGFS内の位置（サーバのIPとPort）は、「META1」タブレットと呼ばれる複数の特別なタブレットにデータベースエントリとして記録されている。META1タブレットは1つだけある「META0」タブレットを照会する事で作成される。「META0」タブレットは通常は１つのマシンを占有している。「META1」タブレットの位置に関してクライアントから頻繁に問い合わせを受けるからである。「META1」タブレットはそれ自体が、実際のデータの位置についての答えを持っている。GFSマスターサーバのように、META0は通常はボトルネックにはならない。META1の位置を発見・送信する為に必要なプロセッサ時間と帯域はごく僅かである。クライアントは積極的に位置をキャッシュして、照会を必要最低限にするからである。\\n他の実装[編集]\\nHadoopプロジェクトは、BigTableの現在の実装を目指して改良を加えられている。HBaseと呼ばれている。\\n\\\"Just as Bigtable leverages the distributed data storage provided by the Google File System, Hbase will provide Bigtable-like capabilities on top of Hadoop.\\\"\\nHypertable\\n関連事項[編集]\\nGoogle App Engine\\nMapReduce\\n列指向データベースマネジメントシステム\\nエラー忘却型コンピューティング\\n参考文献[編集]\\n^ \\\"First an overview. BigTable has been in development since early 2004 and has been in active use for about eight months (about February 2005).\\\" Google's BigTable\\n^ \\\"Bigtable can be used with MapReduce, a framework for running large-scale parallel computations developed at Google. We have written a set of wrappers that allow a Bigtable to be used both as an input source and as an output target for MapReduce job\\\". pg 3 of \\\"Bigtable: A Distributed Storage System for Structured Data\\\", 2006\\n^ \\\"Reader is using Google's BigTable in order to create a haven for what is likely to be a massive trove of items.\\\" Official Google Reader blog.\\n^ a b \\\"There are currently around 100 cells for services such as Print, Search History, Maps, and Orkut.\\\" Google's BigTable\\n^ \\\"Their new solution for thumbnails is to use Google’s BigTable, which provides high performance for a large number of rows, fault tolerance, caching, etc. This is a nice (and rare?) example of actual synergy in an acquisition.\\\" YouTube Scalability Talk\\n^ \\\"We have described Bigtable, a distributed system for storing structured data at Google....Our users like the performance and high availability provided by the Bigtable implementation, and that they can scale the capacity of their clusters by simply adding more machines to the system as their resource demands change over time...Finally, we have found that there are significant advantages to building our own storage solution at Google. We have gotten a substantial amount of flexibility from designing our own data model for Bigtable.\\\" from the Conclusion of \\\"Bigtable: A Distributed Storage System for Structured Data\\\", 2006\\n^ *\\\"Database War Stories #7: Google File System and BigTable\\\"\\n外部リンク[編集]\\n丸山先生レクチャーシリーズ第3回リポート：クラウドのデータサービスを掘り下げる（ITmedia）\\n講演資料\\n表・話・編・歴\\n人物\\n会長\\nエリック・シュミット\\n取締役/技術部門担当社長\\nセルゲイ・ブリン\\n取締役/製品部門担当社長/CEO\\nラリー・ペイジ\\nCFO\\nパトリック・ピシェット（英語版）\\n取締役\\nジョン・ドーア - ラム・シュリラム（英語版） - ジョン・ヘネシー - アーサー・レビンソン（英語版） - ポール・オッテリーニ - シャーリー・ティルマン（英語版） - アン・メイザー（英語版）\\nサービス\\n検索サービス （ページランク）\\nブックス - ソースコード検索 - デスクトップ検索 - Finance - ショッピング - 画像検索 - マップ（ストリートビュー） - ニュース - News Archive Search - Patents - Scholar - Trends - ビデオ - ウェブ検索 - GOOG-411\\n広告\\nAdSense - AdWords - Analytics - Checkout\\nコミュニケーション & パブリッシング\\nアラート - Blogger - カレンダー - ドキュメント - Gmail - Music - Google+ - グループ - iGoogle - JotSpot - Knol - ノートブック - Orkut - Page Creator - Panoramio - リーダー - Voice - YouTube\\nアプリケーション\\nデスクトップ検索 - Earth - パック - Picasa - SketchUp - トーク - ツールバー - Chrome - 日本語入力\\n開発ツール\\nCode - グーグルボット - Guava - Guice - KML - MapReduce - Summer of Code - Web Toolkit\\nプラットフォーム\\nApp Engine - Apps - BigTable - Dart - Gears - GFS - Go - Health - OpenSocial\\nオペレーティングシステム\\nAndroid - Chrome OS\\nファイルフォーマット\\nWebM - WebP\\n企業情報\\n概要\\n買収 - 歴史 - 批判 - 中国版 - Google.org - Googleplex\\n銘柄記号\\n(NASDAQ: GOOG)、(LSE: GGEA)\\n歳入: 106億USドル （2006年）\\n従業員数\\n13,748名（2007年6月30日）\\nウェブサイト\\nwww.google.com\\n「http://ja.wikipedia.org/w/index.php?title=BigTable&oldid=46753653」から取得 \\nカテゴリ: Googleデータベース\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nDeutsch\\nEnglish\\nEspañol\\nفارسی\\nFrançais\\nItaliano\\nPolski\\nPortuguês\\nРусский\\n中文\\nリンクを編集\\n最終更新 2013年3月19日 (火) 22:45 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b25"},"body":"Ruby\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの項目では、プログラミング言語について記述しています。「ルビー」・「ルビ」の他の使い方については「ルビー (曖昧さ回避)」をご覧ください。\\nRuby\\nパラダイム\\n構造化、命令型、オブジェクト指向\\n登場時期\\n1995年\\n設計者\\nまつもとゆきひろ\\n最新リリース\\n2.0.0-p247 / 2013年6月27日（12日前） （2013-06-27）\\n型付け\\n強い動的型付け, ダック・タイピング\\n主な処理系\\nRuby MRI, YARV, JRuby, IronRuby, MacRuby\\n影響を受けた言語\\nSmalltalk, LISP, Perl, Python, CLU\\n影響を与えた言語\\nGroovy\\nプラットフォーム\\nクロスプラットフォーム\\nライセンス\\nBSDライセンス、Rubyライセンスのデュアル[1]\\n（1.9.2まではGPLとRubyのデュアル）\\nウェブサイト\\nwww.ruby-lang.org\\nテンプレートを表示\\nプログラミング言語\\n>>他のプログラミング言語\\n■カテゴリ / ■テンプレート\\nRuby（ルビー）は、まつもとゆきひろ（通称 Matz）により開発されたオブジェクト指向スクリプト言語であり、スクリプト言語が用いられてきた領域でのオブジェクト指向プログラミングを実現する。\\n目次\\n1 概要\\n2 設計思想\\n3 実装\\n3.1 公式な実装\\n3.2 その他の実装\\n4 競合言語\\n5 例\\n5.1 コレクション\\n5.2 制御構造\\n5.3 ブロック付きメソッド呼び出し\\n5.3.1 繰り返し処理\\n5.3.2 後処理の省力化\\n5.3.3 本処理を後から指定\\n5.3.4 クロージャ\\n5.4 クラス\\n5.5 例外処理\\n6 Rubyの周辺技術\\n7 Ruby で開発されたアプリケーション\\n8 Rubyを組み込んだアプリケーション\\n9 エピソード\\n10 参考文献\\n11 脚注\\n12 関連項目\\n13 外部リンク\\n概要[編集]\\nRuby は当初1993年2月24日に生まれ、1995年12月にfj上で発表された。名称の Ruby は、プログラミング言語 Perl が6月の誕生石である Pearl（真珠）と同じ発音をすることから、まつもとの同僚の誕生石（7月）のルビーを取って名付けられた。\\n機能として、クラス定義、ガベージコレクション、強力な正規表現処理、マルチスレッド、例外処理、イテレータ、クロージャ、Mixin、演算子オーバーロードなどがある。Perl を代替可能であることが初期の段階から重視されている。Perlと同様にグルー言語としての使い方が可能で、C言語プログラムやライブラリを呼び出す拡張モジュールを組み込むことができる。\\nRuby 処理系は、主にインタプリタとして実装されている（詳しくは#実装を参照）。\\n可読性を重視した構文となっている。Ruby においては整数や文字列なども含めデータ型はすべてがオブジェクトであり、純粋なオブジェクト指向言語といえる。\\n長らく言語仕様が明文化されず、まつもとによる実装が言語仕様に準ずるものとして扱われて来たが、2010年6月現在、JRuby や Rubinius といった互換実装の作者を中心に機械実行可能な形で明文化する RubySpec という試みが行われている。公的規格としては2011年3月22日にJIS規格（JIS X 3017）が制定され、その後2012年4月1日に日本発のプログラム言語では初めてISO/IEC規格（ISO/IEC 30170）として承認された [2]。\\nフリーソフトウェアとして Ruby ライセンス（Ruby License や Ruby'sと表記されることもある。GPLかArtisticに似た独自ライセンスを選択するデュアルライセンス。）で配布されている。\\n設計思想[編集]\\n開発者のまつもとゆきひろは、「Rubyの言語仕様策定において最も重視しているのはストレスなくプログラミングを楽しむことである (enjoy programming)」と述べている。（ただし、まつもとによる明文化された言語仕様は存在しない。）Perlのモットー「やり方はいろいろある (There's More Than One Way To Do It; TMTOWTDI)」は「多様性は善 (Diversity is Good)」というスローガンで Ruby に引き継がれてはいるものの最重要なものではないとも述べており、非推奨な手法も可能にするとともに、そのような手法を言語仕様により使いにくくすることによって自粛を促している。これは言語仕様が「望ましい」習慣の押し付けを行うということであり、洗脳言語（Babel-17）と言われる一面でもある。\\n実装[編集]\\n公式な実装[編集]\\nRubyの公式な実装には、以下の二種類が存在する。\\nMRI（Matz' Ruby Implementation）\\n1.8.x以前の公式実装。まつもとゆきひろによって開発されはじめたC言語による実装であり、最も広く使われている。JRuby などに対して CRuby と呼ばれることもある。また、JRuby などに対しては、広義の意味で後述の YARV を取り込んだ 1.9.x も含んで MRI と言うこともある。\\nYARV\\n1.9で採用された、MRIを拡張した公式な処理系。これはソースコードをバイトコードへコンパイルした後、バイトコードを仮想機械上で実行するインタプリタである。もともとは開発中におけるその仮想機械の名前。\\nその他の実装[編集]\\nJRuby\\nJava 言語による実装。純粋な Java で行われているため、プラットフォーム非依存の利用が可能。ほとんどの Ruby クラスが組み込みで提供されている。インタープリタ・実行時コンパイラ・事前コンパイラの3種類が用意されている。事前コンパイラでは、Java バイトコードへ変換し、JRuby が無くても他の Java プラットフォーム上で動作させることが可能となる。\\nIronRuby\\n.NET Framework 上で Ruby を動作させる実装であり、.NET Framework のライブラリと連携させることができる。JIT方式のバイトコードインタプリタ。共通言語基盤に準拠した実装（Monoなど）で動作するため、プラットフォーム非依存の利用も可能（ただし、ソースコードが .NET Framework のライブラリに依存している場合は Mono での動作は不可能）。\\nMacRuby\\nMac OS X 上で動作する Ruby 実装。Cocoa を含む様々なフレームワークとの連携が可能。RubyCocoa の問題点を解決するために開発されている。\\nRubinius\\n仮想機械上で Ruby を実行するJIT方式のバイトコードインタプリタ。大部分が Ruby で実装されている。\\nMagLev\\nsmalltalk仮想マシン上で動作する実装[1]。\\nmruby\\n組み込みシステム向けの軽量版。家電製品の他、スマートフォン、ゲームなどでの使用を想定している。\\nその他\\nParrot 上で Ruby を動作させるための実装なども開発されている。\\n競合言語[編集]\\nこの節は検証可能な参考文献や出典が全く示されていないか、不十分です。出典を追加して記事の信頼性向上にご協力ください。（2013年2月）\\nプログラミング言語としての Ruby は、オブジェクト指向の動的型付け言語のインタプリタ言語として人気のある言語のひとつであり、多くの分野で Perl や Python と競合する。特に Python とは共通する点が多く、このことがそれぞれの言語のユーザ同士の間で「どちらの言語が優れているか」といった論争を生んできた。しかしその論争は技術的な細部にとらわれた不毛な議論になることも多かった。\\nここであえて両者の細部を比較はしないが、ユーザ数や書かれたシステムの数量・質、同等な機能を持つプログラムの実行速度などを現時点で比べると世界的には Python の方が人気が高い。一方、日本では開発者が日本人であることもあり、Ruby の人気は高く書籍も多く出版されている。とはいえ2004年前後まで圧倒的なキラーアプリがなく、tDiary やバグトラッキングシステム「影舞」程度しか知られていなかったため、大きな普及には至らなかった。ところが2004年末に発表され2005年に一躍脚光を浴びた Ruby on Rails により注目を集め始めた。\\n例[編集]\\n基本的なコード\\n# 文字列、数値を含め、全てがオブジェクトである\\n-199.abs # 199\\n\\\"ruby is cool\\\".length                          # 12\\n\\\"Rick\\\".index(\\\"c\\\") # 2\\n\\\"Nice Day Isn't It?\\\".split(//).uniq.sort.join  # \\\" '?DINaceinsty\\\"\\nコレクション[編集]\\n配列の作成と使用法\\na = [1, 'hi', 3.14, 1, 2, [4, 5]]\\na[2] # 3.14\\na.reverse # [[4, 5], 2, 1, 3.14, 'hi', 1]\\na.flatten.uniq # [1, 'hi', 3.14, 2, 4, 5]\\nハッシュの作成と使用法\\nhash = {'water' => 'wet', 'fire' => 'hot'}\\nhash = {water: 'wet', fire: 'hot'} # シンボルリテラルをキーとする場合、Ruby 1.9 からはこのような Javascript 風の表記ができる。\\nputs hash['fire']       # 表示:  hot\\nhash.each do |key, value|\\nputs \\\"#{key} is #{value}\\\"\\nend\\n# 表示:               water is wet\\n# fire is hot\\nhash.delete_if {|key, value| key == 'water'}   # Deletes 'water' => 'wet'\\n制御構造[編集]\\nほかの言語でもよくみられるような制御構造を用いることができる。\\nif \\\"fablic\\\".length > 3\\nputs 'ya'\\nelse\\nputs 'nop'\\nend\\n# 表示:         ya\\nlist = [1, 2, 5, 13, 21]\\nfor item in list\\nputs item\\nend\\n# 表示:         1\\n# 2\\n# 5\\n# 13\\n# 21\\nn = 0\\nwhile n < 3\\nputs 'foobar'\\nn += 1\\nend\\n# 表示:         foobar\\n# foobar\\n# foobar\\n一部の制御構造は後述するイテレータで代替することができる。\\nブロック付きメソッド呼び出し[編集]\\nRuby ではブロック付きメソッド呼び出しを用いるコードが好まれることが多い。これを用いると、ユーザー定義の制御構造やコールバックなど様々な処理を簡潔に記述できるからである。\\nブロックとは波括弧（{、}）または do、end によって囲まれたコード列のことである。メソッド呼び出しの末尾に記述することが出来る。\\n# { ... }\\nmethod1 { puts \\\"Hello, World!\\\" }\\n# do ... end\\nmethod2 do\\nputs \\\"Hello, world!\\\"\\nend\\nブロック付きメソッド呼び出しが繰り返し処理を主な役割としていたことから、イテレータと呼ばれていた時期がある。しかし、実際には繰り返し処理にとどまらず、様々な使われ方をしているので、最近はブロック付きメソッド呼び出し全体の総称としてイテレータという名称を用いるのは適切でないと考えられている。[3]\\n繰り返し処理[編集]\\n配列の各要素への繰り返し処理\\nlist = [1, 2, 5, 13, 21]\\nlist.map! {|item| item * 2} # listの各要素を2倍する処理\\n以下はブロックを使わずに同じことを行う場合\\nlist = [1, 2, 5, 13, 21]\\nn = 0\\nwhile n < list.length\\nlist[n] *= 2\\nn += 1\\nend\\n指定した回数の繰り返し処理\\n3.times { puts 'foobar' }       # 制御構造の項のwhileの例と同じ\\n後処理の省力化[編集]\\nブロックの内容を実行してから、決められた後処理を行うメソッドもある\\nFile.open('file.txt', 'w+b') do |file|\\nfile.puts 'Wrote some text.'\\nend # Fileはここで自動的にcloseされる\\nこれは次の例と同様の処理を行う（ensure については例外処理の項を参照）\\nbegin\\nfile = File.open('file.txt', 'w+b')\\nfile.puts 'Wrote some text.'\\nensure\\nfile.close\\nend\\n本処理を後から指定[編集]\\n実際に行いたい処理をブロックで記述する。前項の後処理の省力化もこれの一例といえる。\\ndef bfs(list)       #配列をツリーに見立てた処理\\nuntil list.empty?\\nunit = list.shift\\nyield unit      #ブロックの内容を実行\\nunit.each{|v| list.push v} if defined? unit.push\\nend\\nend\\nbfs([0,1,[2,3],4,[5,[6,7,8]],9]) {|v| p v}\\nこの例は、ツリーから要素と分枝をつぎつぎと取り出して取り出したものになんらかの処理を行うものである。メソッドの利用者は、なんらかの処理のみを記述すればよく、取り出しのアルゴリズムなど、本質的でない内容に意識を向ける必要がなくなる。\\nクロージャ[編集]\\nクロージャとなるようなブロックの引数渡し\\n# オブジェクトのインスタンス変数（変数名の頭に@が付く）でブロックを記憶。\\ndef remember(&p)\\n@block = p\\nend\\n# nameを受け取るブロックを引数に、上記のメソッドを呼び出す。\\nremember {|name| puts \\\"Hello, \\\" + name + \\\"!\\\"}\\n# 後に必要になった時点でクロージャを呼び出す。\\n@block.call(\\\"John\\\")\\n# 表示:\\\"Hello, John!\\\"\\nメソッドからクロージャを返す例\\ndef create_set_and_get(value = 0)\\nreturn proc {|x| value = x}, proc { value }\\nend\\nsetter, getter = create_set_and_get\\nsetter.call(21)\\ngetter.call # => 21\\nクラス[編集]\\n次のコードはPersonという名前のクラスである。その中、まずinitializeはオブジェクトを初期化するコンストラクタである。ほかに2つのメソッドがあり、1つは比較演算子である<=>をオーバーライドしておりArray#sortによりプロパティageでソートすることができる。もう1つのオーバーライド箇所のto_sメソッドは Kernel#puts での表示の形式を整える。attr_readerは Ruby におけるメタプログラミングの例であり、attr はインスタンス変数の入出力を司る、いわゆる値を取得する getter メソッドや値を設定する setter メソッド（アクセサ）を定義する。attr_readerは getter メソッドのみの定義である。なおメソッド中では最後に評価された式が返り値となり、明示的なreturnは省略できる。\\nclass Person\\ndef initialize(name, age)\\n@name, @age = name, age\\nend\\ndef <=>(person)\\n@age <=> person.age\\nend\\ndef to_s\\n\\\"#{@name} (#{@age})\\\"\\nend\\nattr_reader :name, :age\\nend\\ngroup = [ Person.new(\\\"John\\\", 20),\\nPerson.new(\\\"Markus\\\", 63),\\nPerson.new(\\\"Ash\\\", 16)\\n]\\nputs group.sort.reverse\\n結果は3つの名前が年の大きい順に表示される\\nMarkus (63)\\nJohn (20)\\nAsh (16)\\n例外処理[編集]\\n例外はなにか不具合が起こったときraiseの呼び出しで発生させることができる。Ruby での例外は Exception クラスか、そのサブクラスのインスタンスである。\\n例外にはメッセージを追加することもできる\\nraise \\\"This is a message\\\"\\nさらに例外のタイプも指定できる\\nraise ArgumentError, \\\"Illegal arguments!\\\"\\n例外はrescue節で処理することができ、次のようにコードにrescueを付加するだけである\\nbegin\\n# 通常処理\\nrescue\\n# 例外処理。引数を省略すると、StandardErrorのサブクラスの例外のみ処理する\\nrescue SomeError\\n# 例外処理。SomeErrorの例外のみ処理する。\\nensure\\n# 例外の発生に関わらず必ず実行される処理\\nelse\\n# 例外が発生しなかったときに実行される処理\\nend\\nRubyの周辺技術[編集]\\n分散オブジェクトを実現する dRuby\\nRuby スクリプトに埋め込むことができる文書形式RD\\nRuby によるRDを採用したウィキ、RWiki\\nRuby からSDLライブラリを扱えるようにするRuby/SDL\\nRuby から Delphi を扱えるようにする Apollo\\nRuby によるウェブアプリケーションフレームワーク Ruby on Rails\\nRuby の別の処理系である YARV\\nRuby の統合開発環境 RDE\\nRuby のコードを Windows の実行形式ファイルに変換する Exerb\\nRuby 用のライブラリ管理システムである RubyGems\\nApache HTTP Server に組み込むための mod ruby\\nサーバサイドでHTMLへの埋め込み Ruby 文を実現する eRuby\\nMicrosoft Windows の ActiveX 環境で Ruby インタープリターを呼び出す ActiveScriptRuby（Internet Explorer 限定だがHTMLに埋めこんでクライアント上で動かすスクリプト言語として Rubyを指定できるようになる）\\nRuby から Win32API やCOMコンポーネントを呼び出すためのライブラリー WIN32OLE\\nJavaScript や Flash 上で動く Ruby の処理系 HotRuby\\nRuby によるビヘイビア駆動開発のためのフレームワーク RSpec\\nRuby で書かれたビルドツール Rake\\nRuby で開発されたアプリケーション[編集]\\ntDiary\\n影舞\\nHiki\\nRuby on Rails\\nGitHub\\nRedmine\\nBasecamp\\nRadiantCMS\\nqwikWeb\\nWEBrick\\nMongrel\\nPhusion Passenger\\nPuppet\\nChef\\nRubyを組み込んだアプリケーション[編集]\\nRPGツクールXP・RPGツクールVX\\n株式会社エンターブレインから発売されているRPG制作ソフトシリーズのうち、RPGツクールXPとRPGツクールVXでは、Ruby をツクール専用にカスタマイズした RGSSを搭載している。同シリーズの従来ソフトではあらかじめ用意された機能しか使えなかったが、RGSSにより戦闘などのシステムを一から構築する事が出来るようになった。\\nエピソード[編集]\\nRuby ではブロック構造を end で終える構文が採用されているが、開発者のまつもとゆきひろは他の構文が採用される可能性があったことを述べている。当時、Emacs 上で end で終える構文をオートインデントさせた例はあまりなく、Ruby 言語用の編集モードにオートインデント機能を持たせられるかどうかが問題になっていたためである[注釈 1]。実際には数日の試行でオートインデント可能であることがわかり、現在の構文になった。C言語のような{～}を使った構文も検討されていたが、結局これは採用されなかった[4]。\\n参考文献[編集]\\n高橋征義・後藤裕蔵 『たのしい Ruby　Rubyではじめる気軽なプログラミング』 まつもとゆきひろ監修、ソフトバンクパブリッシング、2002年4月。ISBN 4-7973-1408-7。 - プログラム未経験者向けの入門書。\\n高橋征義・後藤裕蔵 『たのしいRuby　Rubyではじめる気軽なプログラミング』 まつもとゆきひろ監修、ソフトバンクパブリッシング、2006年8月、第2版。ISBN 4-7973-3661-7。\\n高橋征義・後藤裕蔵 『たのしい Ruby』 まつもとゆきひろ監修、ソフトバンクパブリッシング、2010年3月、第3版。ISBN 978-4-7973-5740-0。\\nデビット・トーマス・アンドリュー・ハント 『プログラミングRuby　達人プログラマーガイド』 田和勝訳、まつもとゆきひろ監修、ピアソン・エデュケーション、2001年9月。ISBN 4-89471-453-1。\\nDave Thomas・Chad Fowler・Andy Hunt 『プログラミング Ruby 言語編』 田和勝訳、まつもとゆきひろ監修、オーム社、2006年8月、第2版。ISBN 4-274-06642-8。\\nDave Thomas・Chad Fowler・Andy Hunt 『プログラミング Ruby ライブラリ編』 田和勝訳、まつもとゆきひろ監修、オーム社、2006年8月、第2版。ISBN 4-274-06643-6。\\nDave Thomas・Chad Fowler・Andy Hunt 『プログラミング Ruby 1.9　言語編』 田和勝訳、まつもとゆきひろ監修、オーム社、2010年5月。ISBN 978-4-274-06809-6。\\nDave Thomas・Chad Fowler・Andy Hunt 『プログラミング Ruby 1.9　ライブラリ編』 田和勝訳、まつもとゆきひろ監修、オーム社、2010年5月。ISBN 978-4-274-06810-2。\\nDavid Flanagan・まつもとゆきひろ 『プログラミング言語 Ruby』 卜部昌平監訳、長尾高弘訳、オライリー・ジャパン、2009年1月。ISBN 978-4-87311-394-4。\\nまつもとゆきひろ・石塚圭樹 『オブジェクト指向スクリプト言語 Ruby』 アスキー〈ASCII software science : Language 11〉、1999年11月。ISBN 4-7561-3254-5。\\nまつもとゆきひろ 『まつもとゆきひろ　コードの世界～スーパー・プログラマになる14の思考法』 日経Linux編集、日経BP社、2009年5月。ISBN 978-4-8222-3431-7。\\n脚注[編集]\\n^ “Ruby'sライセンスの、BSDLとのデュアルライセンスへの変更” (日本語). ruby-dev mailing list.. (2010年9月24日). http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-dev/42294 2011年4月20日閲覧。 \\n^ http://www.ipa.go.jp/about/press/20120402_2.html\\n^ http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/39878\\n^ まつもとゆきひろ 「探訪 Ruby 第6回」『Linux Magazine』56号、株式会社アスキー、2004年。\\n^ まつもとゆきひろは1988年に Emacs に触れて以来、Emacsを使い続けている。（大竹智也 「本書に寄せて」『Emacs実践入門 思考を直感的にコード化し、開発を加速する』 技術評論社、2012年4月5日、初版第1刷、iiiからivページ。ISBN 978-4-7741-5002-4。、まつもとによる記述より）\\n関連項目[編集]\\nRubyアソシエーション\\n外部リンク[編集]\\nポータル FLOSS\\nウィキメディア・コモンズには、Rubyに関連するカテゴリがあります。\\nRuby 公式ウェブサイト\\nスラッシュドット・ジャパンでの まつもとゆきひろ へのインタビュー\\nOpen Directory — Ruby カテゴリ\\nRuby Application Archive\\nRubyForge\\nRuby Tutorial\\nRubyWorldConference\\nRubySpec - The Standard You Trust\\n中高生国際 Ruby プログラミングコンテスト\\n情報処理推進機構：プレス発表：プログラム言語 Ruby のJIS規格（JIS X 3017）制定について\\n表・話・編・歴\\nフリーソフトウェアとオープンソースソフトウェア\\n全般\\nコピーレフト\\nフリーソフトウェア\\nフリーソフトウェアの定義\\n無料と自由（英語版）\\nオープンソースソフトウェアパッケージの一覧（英語版）\\nオープンソースのアンドロイドアプリケーションの一覧（英語版）\\nフリーのウェブアプリケーションの一覧（英語版）\\nフリーソフトウェアプロジェクトの一覧（英語版）/OSSホスティングサービスの比較\\n以前はプロプライエタリだったソフトの一覧（英語版）\\nオープンソースソフトウェア\\nOS（英語版）\\nAROS\\nBSD\\nDarwin\\neCos\\nFreeDOS\\nGNU\\nHaiku\\nInferno\\nLinux\\nMach\\nMINIX\\nOpenSolaris\\nSymbian\\nPlan 9\\nReactOS\\n開発（英語版）\\nBasic For Qt（英語版）\\nEclipse\\nFreeBASIC\\nFree Pascal\\nGCC\\nGambas\\nJava\\nLLVM\\nLua\\nNetBeans\\nOpen64（英語版）\\nPerl\\nPHP\\nPython\\nROSE（英語版）\\nRuby\\nTcl/Tk\\n歴史（英語版）\\nGNU\\nHaiku（英語版）\\nLinux（英語版）\\nMozilla\\nApplication Suite（英語版）\\nFirefox（英語版）\\nThunderbird（英語版）\\n団体\\nApacheソフトウェア財団\\nAndroid Open Source Project\\nBlender Foundation（英語版）\\nEclipse Foundation\\nfreedesktop.org\\nフリーソフトウェア財団\\nヨーロッパ\\nインド\\nラテンアメリカ\\nFSMI（英語版）\\nGNOME Foundation\\nGNU Project（英語版）\\nGoogle Code\\nKDE e.V.（英語版）\\nLinux Foundation\\nMozilla Foundation\\nOpen Source Geospatial Foundation（英語版）\\nOpen Source Initiative\\nSoftware Freedom Conservancy\\nSourceForge\\nSymbian Foundation\\nThe Document Foundation\\nXiph.Org Foundation\\nXMPP Standards Foundation（英語版）\\nX.Org Foundation\\nライセンス\\nApache\\nArtistic\\nBeerware（英語版）\\nBoost（英語版）\\nBSD\\nGNU GPL\\nGNU LGPL\\nISC\\nMIT\\nMPL\\nMs-PL/RL\\nzlib\\nパブリックドメイン/CC0（英語版）\\nWTFPL\\nフリーソフトウェア財団が承認したライセンス（英語版）\\nライセンス標準\\nオープンソースの定義\\nフリーソフトウェアの定義\\nDebianフリーソフトウェアガイドライン\\n課題\\nバイナリ・ブロブ\\nデジタル著作権管理 (DRM)\\nグラフィックハードウェアとの互換性（英語版）\\nライセンスの氾濫\\nMozilla関連ソフトウェアのブランド変更\\nプロプライエタリ・ソフトウェア\\nSCO-Linux論争（英語版）\\nセキュリティ（英語版）\\nソフトウェア特許\\nハードウェア制限（英語版）\\nTrusted Computing（英語版）\\nウィルス性ライセンス\\nTiVo化\\nその他\\n代替用語（英語版）\\nコミュニティ（英語版）\\nLinuxディストリビューション\\nフォーキング\\n運動\\nMicrosoft Open Specification Promise（英語版）\\nRevolution OS\\nオープンソースとクローズドソースの比較（英語版）\\nPortal:FLOSS\\n表・話・編・歴\\nRuby\\nIDE\\nNetBeans ·  RubyForge ·  RadRails ·  RubyMine ·  ActiveState_Komodo\\n実装\\nRuby MRI ·  YARV ·  JRuby ·  IronRuby ·  Rubinius ·  XRuby ·  MacRuby ·  RubyJS ·  HotRuby ·  mruby\\nアプリケーション\\nCapistrano ·  Chef ·  Hackety Hack ·  Interactive Ruby Shell ·  Rake ·  RubyGems\\nライブラリー ·\\nフレームワーク\\nAdhearsion ·  Camping ·  eRuby ·  Hobo ·  Merb ·  NArray  ·  Nitro ·  RubyCocoa ·  Ruby on Rails ·  Ramaze ·  Sinatra ·  Padrino · QtRuby\\nサーバーソフトウェア\\nMongrel ·  Phusion Passenger (mod_rails/mod_rack) ·  WEBrick ·  mod_ruby\\nその他\\nApplication Archives ·  Document format ·  Book Guides ·  Ruby Central ·  日本Ruby会議\\nカテゴリ\\n「http://ja.wikipedia.org/w/index.php?title=Ruby&oldid=48326271」から取得 \\nカテゴリ: プログラミング言語オブジェクト指向言語オープンソーススクリプト言語Ruby隠しカテゴリ: 出典を必要とする節のある記事/2013年1月-2月\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nAzərbaycanca\\nŽemaitėška\\nБългарски\\nবাংলা\\nBosanski\\nCatalà\\nکوردی\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEsperanto\\nEspañol\\nEesti\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nGalego\\nעברית\\nHrvatski\\nMagyar\\nInterlingua\\nBahasa Indonesia\\nItaliano\\nქართული\\n한국어\\nLietuvių\\nമലയാളം\\nमराठी\\nBahasa Melayu\\nမြန်မာဘာသာ\\nNederlands\\nNorsk nynorsk\\nNorsk bokmål\\nPolski\\nPortuguês\\nRomână\\nРусский\\nSimple English\\nSlovenčina\\nСрпски / srpski\\nSvenska\\nதமிழ்\\nТоҷикӣ\\nไทย\\nTürkçe\\nУкраїнська\\nTiếng Việt\\n中文\\n粵語\\nリンクを編集\\n最終更新 2013年6月29日 (土) 06:51 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b26"},"body":"Apache Cassandra\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache Cassandra\\n作者\\nAvinash Lakshman, Prashant Malik\\n開発元\\nApache Software Foundation\\n初版\\n2008\\n最新版\\n1.1.0 / 2012年4月24日（14か月前） （2012-04-24）\\nプログラミング言語\\nJava\\n対応OS\\nCross-platform\\n対応言語\\n英語\\nサポート状況\\nActive\\n種別\\nkey-value store\\nライセンス\\nApache License 2\\n公式サイト\\ncassandra.apache.org\\nテンプレートを表示\\nApache Cassandra（アパッチ カサンドラ）は、オープンソースの分散データベース管理システムである。元はFacebook社において大規模データの格納のために開発されたものである。Facebookのデータチームを率いるJeff HammerbacherはCassandraをAmazon DynamoDBのようなインフラストラクチャ上で動作するBigTableデータモデルであると表現している。\\nCassandraはイベンチュアル・コンシステンシーにより構造化されたキー・バリュー型データストアを提供する。キーは複数の値にマッピングされ、これらはcolumn familyとしてグルーピングされる。column familyはCassandraデータベースが作成される際は固定されているが、後にfamilyに対し列を追加することは可能である。さらに、列は特定のキーにのみ追加されるので、どのfamilyにおいても異なるキーは任意の列数を持つことができる。各キーに対応するcolumn familyの値は連続して記録され、このことによりCassandraは列指向データベースマネジメントシステムと行指向データベースシステムの複合型であると言える。\\nFacebook社は2008年7月にCassandraをオープンソースソフトウェアとして公開した。2009年3月からApache Incubatorプロジェクトとなり、2010年2月にはトップレベルプロジェクトに引き上げられた。\\n外部リンク[編集]\\n公式ウェブサイト\\n日本語訳(あしたのオープンソース研究所)\\nCassandra Project Wiki\\nPresentation on Cassandra at SIGMOD 2008\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_Cassandra&oldid=47262636」から取得 \\nカテゴリ: NoSQLデータベースデータベース管理システムApacheソフトウェア財団\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nDeutsch\\nEnglish\\nEspañol\\nFrançais\\nעברית\\nItaliano\\nPolski\\nPortuguês\\nРусский\\nУкраїнська\\n中文\\nリンクを編集\\n最終更新 2013年4月9日 (火) 03:41 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b23"},"body":"Python\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの項目では、プログラミング言語について記述しています。その他の用法については「パイソン」をご覧ください。\\nPython\\nパラダイム\\nマルチパラダイム\\n登場時期\\n1990年\\n設計者\\nグイド・ヴァンロッサム\\n開発者\\nパイソンソフトウェア財団\\n最新リリース\\n3.3.2 / 2013年5月16日\\n2.7.5 / 2013年5月16日\\n型付け\\n強い動的型付け\\n主な処理系\\nCPython, Jython, IronPython, PyPy, Unladen Swallow\\n影響を受けた言語\\nABC, C, Haskell, Icon, Lisp, Modula-3, Perl, Smalltalk, Tcl\\n影響を与えた言語\\nRuby, Boo, Perl, JavaScript\\nプラットフォーム\\nクロスプラットフォーム\\nライセンス\\nPython Software Foundation License\\nウェブサイト\\nhttp://www.python.org\\nテンプレートを表示\\nプログラミング言語\\n>>他のプログラミング言語\\n■カテゴリ / ■テンプレート\\nPython（パイソン）は、オランダ人のグイド・ヴァンロッサムによって開発されたオープンソースのオブジェクト指向スクリプト言語。イギリスのテレビ局 BBC が製作したコメディ番組『空飛ぶモンティ・パイソン』にちなんで名付けられた。Pythonという英単語は爬虫類のニシキヘビを意味し、Python言語のマスコットやアイコンとして使われることがある。\\nPerlとともに欧米で広く普及している[要出典]。\\n目次\\n1 概要\\n1.1 特徴\\n1.2 動作するプラットフォーム\\n1.3 実装\\n1.4 ライセンス\\n2 歴史\\n2.1 0.9x\\n2.2 1.x\\n2.3 2.x\\n2.4 3.x\\n2.5 Python の時系列\\n2.6 Pythonに影響を与えた言語\\n3 言語の機能\\n3.1 文法\\n3.2 データ型\\n3.3 オブジェクト指向プログラミング\\n3.4 ライブラリ\\n3.5 多言語の扱い\\n4 利用\\n4.1 教育用\\n5 脚注\\n6 関連項目\\n7 外部リンク\\n概要[編集]\\nPythonは汎用の高水準言語である。プログラマの生産性とコードの信頼性を重視して設計されており、核となるシンタックスおよびセマンティクスは必要最小限に抑えられている反面、利便性の高い大規模な標準ライブラリを備えている。\\nUnicodeによる文字列操作をサポートしており、日本語処理も標準で可能である。 多くのプラットフォームをサポートしており（動作するプラットフォーム）、また、豊富なドキュメント、豊富なライブラリがあることから、産業界でも利用が増えつつある。\\n特徴[編集]\\nPythonはインタプリタ上で実行されることを前提に設計されており、以下のような特徴をもっている:\\n動的な型付け\\nガベージコレクション\\nマルチパラダイム\\nモジュール、クラス、オブジェクト等の言語の要素が内部からアクセス可能であり、リフレクションを利用した記述が可能。\\n動作するプラットフォーム[編集]\\nPythonの最初のバージョンはAmoeba上で開発されたが、のちに多くのプラットフォーム上で動作するようになっている。\\nWindows, Windows CE（9x系およびNT系は最新版、Windows 3.1およびMS-DOSは旧版のみ）\\nMacintosh（OS 9以前およびOS X以降ともに）\\n各種UNIX\\nLinux（Linux Standard Base3.2で標準仕様となった）\\nPlan 9（Python 3.xは未移植）\\nPalmOS\\nS60\\nJavaプラットフォーム (Jython)\\n.NET Frameworkプラットフォーム (IronPython)\\n実装[編集]\\nPythonには複数の実装が存在する。\\nCPython - 作者によってC言語で書かれたバージョン。通常「Python」といえばこのCPythonを指す。\\nStackless Python - Cスタックを使わずに独自のスタック（Pythonスタック）で実装したもの。\\nUnladen Swallow - GoogleのチームによるPythonの実装\\nJython - Java仮想マシン上に移植したもの。PythonからJavaのライブラリを使うことができる。\\nIronPython - .NET Framework/Monoで動作するPython。C#で実装されている。.NET Frameworkのライブラリを使うことができる。動的言語ランタイム上に構築されているため、既存の.NETアプリケーションへマクロ言語として搭載することも可能となっている。\\nPyPy - PythonによるPythonインタプリタの実装\\nPsyco - CPython向けのJITコンパイラ\\nPyMite - 組み込み向けの実装、AVRなどに対応。\\ntinypy - 同じく組み込み向けの実装。ソースコードが64kb未満と非常に軽量なことが謳われている。\\nライセンス[編集]\\nPython のリリースは全てオープンソースであり、PSF(Python Software Foundationライセンス)として配布されている。これはGPL互換であるが、GPLと異なり、変更したバージョンを配布する際に変更をオープンソースにしなくてもよい。\\n歴史[編集]\\n元々はAmoebaの使用言語であるABC言語に例外処理やオブジェクト指向を対応させるために作られた言語である[1]。\\n0.9x[編集]\\n1991年にヴァンロッサムによってPython.0.90のソースコードが公開された。この時点ですでにオブジェクト指向言語の特徴である継承、クラス、例外処理、メソッドやさらに抽象データ型である文字列、リストの概念が導入されている。これはModula-3のモジュールを参考にしていた。\\n1.x[編集]\\n1994年1月、Python1.0がリリースした。主な特徴として関数型言語の基本であるラムダ計算を実装、map関数、reduce関数などが組み込まれている。\\nバージョン1.4ではCommon Lispにある機能とよく似たキーワード引数が導入された。また簡易ながら名前修飾を用いたカプセル化も実装された。\\n2.x[編集]\\n2000年に公開。ガベージコレクションやUnicode、リストが導入され一躍メジャーな言語となった。多くの機能をHaskellから参考している。\\n3.x[編集]\\n2008年、長いテスト期間を経てPython3.0がリリースされた。 開発初期には、西暦3000年にリリース予定の理想のPythonとして、Python 3000と呼ばれていたため、Py3Kと略されることもある。\\nしかし2.xとの後方互換性が損なわれており、2.xから3.xへの片方向の変換スクリプトが用意されているものの使用者がまだまだ少ないのが現状である[要出典]。\\nPython の時系列[編集]\\n1990年代始め - オランダにあるStichting Mathematisch Centrum(CWI)で、グイド・ヴァンロッサムによってPythonの初期バージョンが作成される。\\n1995年 - ヴァンロッサムは米国ヴァージニア州レストンにあるCorporation for National Research Initiatives(CNRI) に移動。ここでPythonの開発に携わり、いくつかのバージョンをリリースする。\\n2000年3月 - ヴァンロッサムとPythonのコア開発チームは BeOpen.com に移り、BeOpen PythonLabs チームを結成する。同年10月、PythonLabsチームはDigital Creations(現在のZope Corporation) に移る。\\n2001年 - Pythonに関する知的財産を保有するための非営利組織Python Software Foundation(PSF) が立ち上がる。このときZope CorporationはPSFの賛助会員となる。\\nPythonに影響を与えた言語[編集]\\nABC（インデントによる構文）\\nModula-2, -3（モジュール機能、オブジェクト指向）\\nIcon（辞書、スライス演算子など）\\nSETL（リストの内包表現）\\nC, C++（基本的な構文）\\nSmalltalk（仮想マシン機構、動的性）\\nLisp, Scheme（関数型言語の機能）\\n言語の機能[編集]\\nPythonは言語自身の機能をできるだけ小さくおさえ、ユーザがいつも必要とする最小限の機能のみを提供するように作られている。これはPerlのTIMTOWTDI（there's more than one way to do it - あることをするのにいくつものやり方がある）という哲学とは対照的であり、Pythonでは多くのユーザによって書かれた同一の仕事をするプログラムは、だいたいどれも同じようなコードに収束する。基本機能にないものの多くはライブラリによって提供されている。\\nまた、Pythonではプログラムの文書化（ソフトウェアドキュメンテーション）が重視されており、言語の基本機能の一部となっている。\\nグイド・ヴァンロッサムはPython設計以前に教育用言語であるABCの開発にかかわっているが、Pythonは教育を目的として設計されたわけではない[2]。\\nPythonには、読みやすく、それでいて効率もよいコードをなるべく簡単に書けるようにするという思想がすみずみまで浸透しており、Pythonコミュニティでもわかりやすいコードをよしとする傾向が強い[3]。\\n文法[編集]\\n決してPython独自の特徴ではないが、しばしば代表的な文法的特徴として挙げられるのが、「インデント（字下げ）」である。Pythonではブロック構造を記述するためにインデントを用いる。\\nブロック構造は、他のメジャーなプログラミング言語（たとえばC言語など）においては、カーリーブラケット（\\\"{ }\\\"。「中括弧」と呼ばれる）を用いて表記されることが多い。しかし、Pythonではこれを行頭からの空白（インデント）によって表記する。これは、「見た目のブロック構造」と「実際の論理的な制御構造」を結びつける手法であり、視覚に訴えるコードの使用を強制する、という意義をもつ。\\n以下に、C言語とPythonで再帰呼び出しを用いて階乗を計算する例を示す。\\nPythonのコード:\\ndef factorial(x):\\nif x == 0:\\nreturn 1\\nelse:\\nreturn x * factorial(x - 1)\\nわかりやすく整形されたC言語のコード:\\nint factorial(int x)\\n{\\nif (x == 0) {\\nreturn 1;\\n} else {\\nreturn x * factorial(x - 1);\\n}\\n}\\nこの例では、Pythonと整形されたC言語とでは、プログラムコードの間に違いがほとんど見られない。しかし、C言語のコードに施されたインデントは（言語仕様においては）単なるコーディングスタイルのひとつにすぎないため、C言語では（言語仕様においては）全く同じプログラムを以下のように書くこともできる。\\nわかりにくいC:\\nint factorial(int x) {\\nif(x == 0) {return 1;} else\\n{return x * factorial(x - 1); } }\\nPythonではインデントは単なるスタイルではなく、必須の文法であるため、こうした書き方は不可能である。Pythonではこのような強制を課すことによって、プログラムのスタイルがその書き手にかかわらずほぼ統一したものになり、その結果読みやすくなるという考え方が取り入れられている。これについては賛否両論があり、批判的立場の人々からは、これはプログラマがスタイルを選ぶ自由を制限するものだ、という意見も出されている。\\nインデントによる整形は、単に「見かけ」だけではなく品質そのものにも関係する。例として次のコードを示す。\\n間違えたC:\\nif (x > 10)\\nx = 10;\\ny = 0;\\nこのコードは文法的には正しいが、言語仕様上のブロックの範囲と、インデントが表現するそれとが異なっているため、プログラマの意図が曖昧になる。この曖昧さは、検知しにくい不具合を生む原因になり得る。\\nソースコードを読む際、多くの人はインデントのような空白によって明確に整列されたコードを目安として読み、コンパイラのように構文解析しながらソースを読むものではない。その結果、文法は正しく、見た目も一見正しく見えるような不具合を作成してしまう危険性がある。\\nPythonでは、インデントを文法の一部に組み入れることにより、人間が目視するソースコードの理解と、コンパイラの構文解析の間の誤差を少なくすることで、より正確に意図した通りにコーディングすることができるようになっている。\\nデータ型[編集]\\nPythonのデータは動的に型付けされる。値自身が型を持っており、変数はすべて値への参照である。\\n基本的なデータ型として、整数型・多倍長整数型・浮動小数点数型・複素数型・文字列型・Unicode文字列型・論理型、そして関数型がある。多倍長整数型は（メモリの許す限り）無制限の桁数で整数計算が可能である。\\nさらに組み込みのコンテナ型として、リスト型、タプル型、辞書型（連想配列）のほか、値の重複を許さない集合型（Python 2.3以降）がある。\\nPython 3.x以降では、整数型が多倍長整数型と統合され、従来の文字列型とUnicode文字列型に代わり、バイト列型と文字列型が導入された。\\nリスト型および辞書型は内部の値をあとから変えられる（mutable、変更可能）が、タプル型は一度構築したら内部の値は変わらない（immutable、変更不能）。タプル型とリスト型は、多くのプログラミング言語では配列と呼ばれるものに類似している。しかし、Pythonではタプル型は辞書のキーとして使うことができるが、リスト型は内容が変わるため辞書のキーとして使うことはできないという理由から、これら 2つの型を区別している。集合型には変更可能なものと変更不能なものの 2種類がある。\\n多くのオブジェクト指向プログラミング言語と同様、Pythonではユーザが新しく自分の型を定義することも可能である。この場合、組み込み型を含む既存の型を継承して新たな型（クラス）を定義する事も、ゼロから全く新しい型を作り出す事も出来る。\\nPythonは基本的にメソッドや関数の引数に型を指定する必要がないので、内部で必要とする演算子やメソッドに対応していれば、関数やオブジェクトの設計時点で意図していなかったオブジェクトを引き渡すことも可能である（いわゆるダック・タイピングが可能）\\nPythonはガベージコレクションを内蔵しており、参照されなくなったオブジェクトは自動的にメモリから破棄される。CPythonでは、ガベージコレクションの方式として参照カウント方式とマーク・アンド・スイープ方式を併用している。マーク・アンド・スイープ方式のみに頼っている言語では、オブジェクトがいつ回収されるか保証されないので、ファイルのクローズなどをデストラクタに任せることができない。CPythonは参照カウント方式を併用することで、循環参照が発生しない限り、オブジェクトはスコープアウトした時点で必ずデストラクトされることを保証している。 JythonおよびIronPythonではマーク・アンド・スイープ方式を採用しているためスコープアウトした時点で必ずデストラクトされることが前提のコードだとJythonやIronPythonでは正しく動かない。\\nイテレータを実装するためのジェネレータが言語仕様に組み込まれており、Pythonでは多くの場面でイテレータを使うように設計されている。イテレータの使用はPython全体に普及していて、プログラミングスタイルの統一性をもたらしている。\\nオブジェクト指向プログラミング[編集]\\nPythonでは扱えるデータの全てがオブジェクトである。単純な数値といった基本的なデータ型をはじめ、組み込みのコンテナ型、組み込み関数など、これらは全て統一的な継承関係をもつオブジェクトであり「型」をもっている。これらの組み込み型とユーザ定義型は区別されず、組み込み型を継承したクラスを定義できる。上の「データ型」の項で述べたように Pythonは静的な型チェックを持たないため、Javaのようなインターフェイスという言語上の仕組みは必要とされない。\\nクラスの継承 (inheritance) メカニズムでは、複数の基底クラスを持つことができ（多重継承）、導出されたクラスでは基底クラスの任意のメソッドをオーバライド（override、上書き）することが可能である。\\nまた、オブジェクトには任意のデータを入れることができる。これらのメソッドやデータは、基本的に、すべてpublicであり、virtual（仮想）である。ただし、先頭にアンダースコアをもつメンバをprivateとすることができる。これは単なるマナーであるが、アンダースコアを2つもつ場合は、クラスの外部からメンバの名前を隠された状態（難号化（mangle））とすることでカプセル化を実現できる。また、ほとんどの組み込み演算子（算術演算子（arithmetic operator）や添字表記）はクラスインスタンスで使うために再定義することが可能となっている。\\nライブラリ[編集]\\nPythonには「電池が付属しています（\\\"Battery Included\\\"）」の思想があり、プログラマがすぐに使えるようなライブラリや統合環境をあらかじめディストリビューションに含めるようにしている。このため標準ライブラリは非常に充実しており、これには、正規表現、OSのシステムコール、XML処理系、シリアライゼーション、HTTP、FTP等の各種通信プロトコル、電子メールやCSVファイルの処理、データベース接続 (SQLiteを標準で扱える)、GUIフレームワーク (Tkinter)、そしてHTMLやPython自身のコードの構文解析ツールなどが含まれる。\\nサードパーティによるライブラリも豊富に存在する。行列演算パッケージのNumPy、画像処理のためのPython Imaging Library、SDLのラッパであるPygameなどがよく知られている。マイナーなものまで含めると多すぎて収拾がつかなくなったため、Python Package Index (PyPI) と呼ばれる公式のパッケージリポジトリが導入された。\\n多言語の扱い[編集]\\nPythonは当初1バイト単位での文字列型のみ扱い、かな漢字のようなマルチバイト文字をサポートしていなかったが、Python 2.0からUnicode文字型が新たに導入された。\\nPython 3.0では、文字列型がバイト列型に、Unicode文字列型が文字列型に変更された。 従来は文字列の表現方法として2通り（旧文字列型と旧Unicode文字列型）があったが、これを1通り（新文字列型=旧Unicode型）に統一し、旧文字列型は単なるバイト列型として再定義された。 これにより、Python 3.0では、文字列を扱う際には後述の変換処理を必ず行う必要がある。 ファイル入出力など、エンコードを明示しなければ標準エンコードを用いて暗黙に行われる場合も多い。 これにより、多言語の扱いを一貫したものにしている。\\nPythonでは文字のバイト列表現（エンコーディング）とUnicodeの内部表現を明確に区別している。Unicode文字はメモリ中に保持される抽象的なオブジェクトであり、画面表示やファイルへの入出力のさいには、変換ルーチン（コーデック）を介して特定のエンコーディングのバイト列表現と相互変換する。また、ソースコード中の文字コードを認識する機能があり、これによって異なる文字コードで書かれたプログラムの動きが異なるという危険を解消している。\\nPythonでは変換ルーチンをモジュールとして追加することで、さまざまなエンコーディングに対応できるようになっている。日本語の文字コード (EUC-JP, Shift_JIS, MS932, ISO-2022-JP) に対応したコーデックも作成されている。Python 2.4からは、日中韓国語用のコーデックが標準でディストリビューションに含まれるようになったため、現在では日本語の処理に問題はほとんどなくなった。ただしGUIライブラリであるTkinterや統合開発環境のIDLEは、プラットフォームにもよるが、まだきちんと日本語に対応していないものもある。\\nUTF-8で記述した日本語を含むCGIプログラムを実行すると、「Internal Server Error 500」が発生することがある。そのときはソース先頭部に、次のようにUTF-8によるコーディングであることを明示する。\\n#!/usr/bin/python\\n# coding: utf-8\\nimport cgi\\n利用[編集]\\nPythonを使っている製品あるいはソフトウェアの一覧も参照。\\nPythonはおもに欧米の企業でよく使われている。大企業ではマイクロソフトやアップルなどのパッケージソフトウェア企業をはじめ、Google、Yahoo!、YouTube などの企業も利用している[4]。また携帯電話メーカーのNokiaでは、S60シリーズで Python アプリケーションが動く[5]。研究機関では、NASA[4]や日本の高エネルギー加速器研究機構[6]でPythonが使われている。\\n適応範囲はWebプログラミング、GUIベースのアプリケーション、CAD、3Dモデリング、数式処理など幅広い分野に及ぶ。さらにスクリプト言語としての特性から、従来Perlやシェルスクリプトが用いられることの多かったシステム管理用のスクリプトとして採用しているOSも複数ある。また、多くの異なる言語で書かれたモジュールをまとめるグルー言語としての利用例も多い。実際、多くの商用アプリケーションで Python は組み込みのスクリプト言語として採用されている。\\n教育用[編集]\\nPythonは汎用言語として設計されているがプログラミングの教育にも使用されている。また方針として非技術者向けといった利用を視野に入れながら開発され続けており[7]、作者も教育用として利用されていることについて期待感を示している。\\n私の大好きなPython利用法は、騒ぎ立てずに、言語教育でプログラミングの原理を教えること。それを考えてくれ――次の世代の話だね。-- スラッシュドット・ジャパン『 Guido van Rossum へのインタビュー』\\n脚注[編集]\\n[ヘルプ]\\n^ Why was Python created in the first place?\\n^ http://www.rakunet.org/tsnet/TSpython/35/1067.html\\n^ “The Zen of Python”.  import this. 2011年8月5日閲覧。\\n^ a b “Quotes about Python”. 2007年1月15日閲覧。\\n^ “Python for S60”. 2007年1月17日閲覧。\\n^ “KEKB: An Asymmetric Electron-Positron Collider for B-Factory in KEK”. 2007年1月17日閲覧。\\n^ “EDU-SIG: Python in Education”. 2011年5月16日閲覧。\\n関連項目[編集]\\nMyHDL - Python言語ベースのハードウェア記述言語\\n外部リンク[編集]\\nポータル FLOSS\\nPython 公式サイト (英語) - ソフトウェアおよびマニュアルのダウンロード。\\n日本Pythonユーザ会 - マニュアルの日本語訳を配布している。\\n表・話・編・歴\\nPython\\n実装\\nChinesePython ·  CLPython ·  CPython ·  Jython ·  IronPython ·  PyPy ·  Python for S60 ·  Psyco ·  Stackless Python ·  Unladen Swallow\\nフレームワーク\\nCherryPy ·  Web2py ·  Django ·  Pylons ·  TurboGears ·  Quixote ·  PIDA ·  PyDev ·  Spyder ·  Wing IDE\\n統合開発環境（専用）\\nBoa ·  IDLE ·  Stani's Python Editor\\n総合開発環境（汎用）\\nVisual Python IDE ·  PIDA ·  PyDev ·  Spyder ·  Wing IDE ·  Eric Python IDE ·  Geany ·  ActiveState  ·  omodo ·  MonoDevelop ·  NetBeans ·  wxGlade\\n表・話・編・歴\\nフリーソフトウェアとオープンソースソフトウェア\\n全般\\nコピーレフト\\nフリーソフトウェア\\nフリーソフトウェアの定義\\n無料と自由（英語版）\\nオープンソースソフトウェアパッケージの一覧（英語版）\\nオープンソースのアンドロイドアプリケーションの一覧（英語版）\\nフリーのウェブアプリケーションの一覧（英語版）\\nフリーソフトウェアプロジェクトの一覧（英語版）/OSSホスティングサービスの比較\\n以前はプロプライエタリだったソフトの一覧（英語版）\\nオープンソースソフトウェア\\nOS（英語版）\\nAROS\\nBSD\\nDarwin\\neCos\\nFreeDOS\\nGNU\\nHaiku\\nInferno\\nLinux\\nMach\\nMINIX\\nOpenSolaris\\nSymbian\\nPlan 9\\nReactOS\\n開発（英語版）\\nBasic For Qt（英語版）\\nEclipse\\nFreeBASIC\\nFree Pascal\\nGCC\\nGambas\\nJava\\nLLVM\\nLua\\nNetBeans\\nOpen64（英語版）\\nPerl\\nPHP\\nPython\\nROSE（英語版）\\nRuby\\nTcl/Tk\\n歴史（英語版）\\nGNU\\nHaiku（英語版）\\nLinux（英語版）\\nMozilla\\nApplication Suite（英語版）\\nFirefox（英語版）\\nThunderbird（英語版）\\n団体\\nApacheソフトウェア財団\\nAndroid Open Source Project\\nBlender Foundation（英語版）\\nEclipse Foundation\\nfreedesktop.org\\nフリーソフトウェア財団\\nヨーロッパ\\nインド\\nラテンアメリカ\\nFSMI（英語版）\\nGNOME Foundation\\nGNU Project（英語版）\\nGoogle Code\\nKDE e.V.（英語版）\\nLinux Foundation\\nMozilla Foundation\\nOpen Source Geospatial Foundation（英語版）\\nOpen Source Initiative\\nSoftware Freedom Conservancy\\nSourceForge\\nSymbian Foundation\\nThe Document Foundation\\nXiph.Org Foundation\\nXMPP Standards Foundation（英語版）\\nX.Org Foundation\\nライセンス\\nApache\\nArtistic\\nBeerware（英語版）\\nBoost（英語版）\\nBSD\\nGNU GPL\\nGNU LGPL\\nISC\\nMIT\\nMPL\\nMs-PL/RL\\nzlib\\nパブリックドメイン/CC0（英語版）\\nWTFPL\\nフリーソフトウェア財団が承認したライセンス（英語版）\\nライセンス標準\\nオープンソースの定義\\nフリーソフトウェアの定義\\nDebianフリーソフトウェアガイドライン\\n課題\\nバイナリ・ブロブ\\nデジタル著作権管理 (DRM)\\nグラフィックハードウェアとの互換性（英語版）\\nライセンスの氾濫\\nMozilla関連ソフトウェアのブランド変更\\nプロプライエタリ・ソフトウェア\\nSCO-Linux論争（英語版）\\nセキュリティ（英語版）\\nソフトウェア特許\\nハードウェア制限（英語版）\\nTrusted Computing（英語版）\\nウィルス性ライセンス\\nTiVo化\\nその他\\n代替用語（英語版）\\nコミュニティ（英語版）\\nLinuxディストリビューション\\nフォーキング\\n運動\\nMicrosoft Open Specification Promise（英語版）\\nRevolution OS\\nオープンソースとクローズドソースの比較（英語版）\\nPortal:FLOSS\\n「http://ja.wikipedia.org/w/index.php?title=Python&oldid=48280400」から取得 \\nカテゴリ: プログラミング言語オブジェクト指向言語スクリプト言語オープンソースPython隠しカテゴリ: 出典を必要とする記述のある記事/2013年6月\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nAfrikaans\\nAlemannisch\\nAragonés\\nالعربية\\nAzərbaycanca\\nБеларуская\\nБългарски\\nবাংলা\\nBosanski\\nᨅᨔ ᨕᨘᨁᨗ\\nCatalà\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEsperanto\\nEspañol\\nEesti\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nGalego\\nગુજરાતી\\nעברית\\nहिन्दी\\nHrvatski\\nMagyar\\nՀայերեն\\nInterlingua\\nBahasa Indonesia\\nÍslenska\\nItaliano\\nLojban\\nქართული\\nҚазақша\\n한국어\\nLatina\\nLietuvių\\nLatviešu\\nМакедонски\\nമലയാളം\\nमराठी\\nBahasa Melayu\\nမြန်မာဘာသာ\\nनेपाली\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nRomână\\nРусский\\nSrpskohrvatski / српскохрватски\\nසිංහල\\nSimple English\\nSlovenčina\\nSlovenščina\\nShqip\\nСрпски / srpski\\nSvenska\\nதமிழ்\\nతెలుగు\\nТоҷикӣ\\nไทย\\nTagalog\\nTürkçe\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年6月24日 (月) 14:33 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b27"},"body":"Apache Maven\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache Maven\\n開発元\\nApacheソフトウェア財団\\n最新版\\n3.0.4 / 2012年1月20日（17か月前） （2012-01-20）\\n対応OS\\nクロスプラットフォーム\\nプラットフォーム\\nJava\\n種別\\nプロジェクト管理ツール\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttp://maven.apache.org\\nテンプレートを表示\\nApache Maven（アパッチ メイヴァン／メイヴィン）は、Java用プロジェクト管理ツールである。Apache Antに代わるものとして作られた。Apacheライセンスにて配布されているオープンソースソフトウェアである。\\n目次\\n1 特徴\\n2 Maven 2\\n3 外部ツール\\n4 外部リンク\\n特徴[編集]\\nこのツールの大きな特徴はプラグイン拡張により様々な使い方ができることである。ソースコードのコンパイル、テスト、Javadoc生成、テストレポート生成、プロジェクトサイト生成、JAR生成、サーバへのデプロイ、WAR, EARファイル生成など様々な機能が用意されており、Antの場合にはbuild.xmlという設定ファイルに細かい指示を記述して行っていた各処理を、Mavenでは指示をコマンドラインに記述するだけで一度に実現が可能である。\\npom.xml（Maven1ではproject.xml）の<dependency>タグにプロジェクトで使用したいJARライブラリを指定することで、外部JARのアップデートが容易となる。従来はJARを手動でダウンロードして、手動でインストールする必要があった。この機能によってJakarta JJarというPerlのCPANやPHPのPEARに似た技術により、WindowsUpdateなどのLiveUpdate（英語版）のように容易にライブラリをアップデートできる。そのほかCVSやSubversionなどのバージョン管理システムにも対応している。\\n開発チームでプロジェクトを共有したいとき、JARファイルをわざわざ他者に手動でダウンロード、インストール、アップデートさせる手間も省くことができ、pom.xmlファイルと必要なソースコード、リポジトリに登録されていないJARファイルを配布するだけで済むようになる。\\nMavenはプラグインによって拡張することも可能である。\\nMaven 2[編集]\\nMaven 2はJavaで書き直されて多くの点で改良されているため、Maven 1と互換性がかなり低いものの、Maven 1とMaven 2で使われるMavenのファイル名が異なることから、ひとつのMavenプロジェクトディレクトリでMaven 1とMaven 2の設定ファイル（project.xml,pom.xmlなど）を共有し、併用することができる。Apache Jelly（英語版）及びAntに対する依存性はなくなっている。また、スクリプト言語であるGroovyに対応している。Maven 2ではproject.xmlがpom.xmlになり文法が変わっている。project.propertiesはsettings.xmlに変わった。Maven 1で使用していたmaven.xmlはpom.xmlに統合されている。\\n外部ツール[編集]\\nMaven 1,Maven 2にはEclipse (統合開発環境)から利用可能なプラグインMevenide, Maven workshop, Maven Repo Search Plugin, m2eclipseなど、Mavenの作業を容易にするGUIベースの外部ツールが存在する。（今のところMaven2に対応しているのはMaven Repo Search Plugin, m2eclipse,IAM(q4e) のみ）\\n外部リンク[編集]\\nポータル FLOSS\\nMaven ホームページ\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\nこの「Apache Maven」はFLOSSに関連した書きかけ項目です。この記事を加筆して下さる協力者を求めています（Portal:FLOSS）。\\n「http://ja.wikipedia.org/w/index.php?title=Apache_Maven&oldid=47464400」から取得 \\nカテゴリ: Apacheソフトウェア財団ソフトウェア開発ツールJavaJavaツール隠しカテゴリ: FLOSS関連のスタブ項目\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nČesky\\nDeutsch\\nEnglish\\nEspañol\\nEuskara\\nفارسی\\nFrançais\\nעברית\\nMagyar\\nItaliano\\nҚазақша\\nLietuvių\\nNederlands\\nPolski\\nPortuguês\\nRomână\\nРусский\\nSvenska\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年4月15日 (月) 21:55 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2b"},"body":"MySQL\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nMySQL\\nLinux上で実行中のGUIフロントエンド MySQL Administrator\\n開発元\\nオラクル(サン・マイクロシステムズ)\\n初版\\n1995年05月23日 (1995-05-23)\\n最新版\\n5.6.12\\n- 2013年6月3日（30日前） （2013-06-03）[1][±]\\n最新評価版\\n5.7.1 m11\\n- 2013年4月23日（2か月前） （2013-04-23）[±]\\nプログラミング言語\\nC, C++\\n対応OS\\nクロスプラットフォーム\\n種別\\nRDBMS\\nライセンス\\nGPL または Commercial License\\n公式サイト\\nwww-jp.mysql.com\\ndev.mysql.com\\nテンプレートを表示\\nMySQL（マイエスキューエル）は、オラクルが開発するRDBMS（リレーショナルデータベースを管理、運用するためのシステム）の実装の一つである。\\n目次\\n1 概要\\n2 シェア\\n3 ストレージエンジン\\n4 トランザクション\\n5 その他の機能\\n6 ライセンス\\n7 歴史\\n8 利用状況\\n9 プラットフォーム\\n10 開発言語\\n11 日本語処理\\n12 MySQLの管理ツール\\n13 脚注\\n14 関連項目\\n15 リンク\\n概要[編集]\\nオープンソースで開発されており、GNU GPLと商用ライセンスのデュアルライセンスとなっている。\\n他の多くのオープンソースプロジェクトと異なり、スウェーデンの単一の営利企業「MySQL AB」によって保持されていた。2008年2月26日にMySQL ABがサン・マイクロシステムズに買収されたことによってサン・マイクロシステムズの所有となった。またトレードマークおよび著作権もサン・マイクロシステムズが所有していた。2010年1月27日、サン・マイクロシステムズはオラクルに買収された。\\nシェア[編集]\\n世界でもっとも普及しているオープンソース・データベースとして知られており[2]、市場シェアではPostgreSQLなどの他のオープンソース・データベースを圧倒している[3]。日本でも2009年になってPostgreSQLを超えるシェアを獲得している[4]。初期のMySQLで文字コードのサポートが悪かったのが影響したが、現在はEUC、SJIS、多言語面を含むUTF-8などをサポートしている。\\n利用企業数の割合\\n地域\\nMySQL\\nPostgreSQL\\n調査機関\\n世界\\n82.1%\\n27.1%\\n451 Group (2009年)[5]\\n日本\\n60.5%\\n51.9%\\nIPA (2009年)[4]\\nストレージエンジン[編集]\\nデータの保存とアクセスを行うストレージエンジンがSQLパーサとは分離独立しており、用途に応じたストレージエンジンを選択できる「マルチストレージエンジン」方式を採用している。\\nバージョン3.23.34以降で組み込まれているInnoDBストレージエンジンは、オープンソースソフトウェア企業のInnobase社が開発したストレージエンジンであり、高い堅牢性とMVCCによる高い並列性を兼ね備えており、あらゆるアプリケーションに対応出来る人気のストレージエンジンとなっている。InnoDBはメディア障害時の更新ログによるリカバリもサポートしている。\\nまた、InnoDB登場以前から搭載されているMyISAMストレージエンジンも検索が高速であり、更新よりも参照の頻度の高いWebアプリケーションなどで活用されている。全文検索が利用できるのも、MyISAMの利点である。\\n以前はMyISAMの方が高速であると言われることが多かったが、InnoDBの性能改善が進んだことから、高速性を求めるためにMyISAMを利用するということも減ってきている。\\nトランザクション[編集]\\nMySQLでは、トランザクション管理はストレージエンジンの役割であり、トランザクションを利用したければ対応したストレージエンジンを使用すればよい。\\nInnoDBは、ACIDに準拠したトランザクションをサポートしている。一方MyISAMでは、トランザクションをサポートしていない。トランザクションが必要でないシーンは徐々に減ってきているので、最近MyISAMの出番も減りつつあるようである。\\nその他の機能[編集]\\n副次問い合わせ（サブクエリ）は、バージョン4.1以降でサポートされている。バージョン5.0以降では、SQL99にストアドプロシージャ、ビュー、トリガーが実装され、機能の面でも他のRDBMSに追いつきつつある。\\nその他、標準でマスタスレーブ方式のレプリケーション機能を備えており、堅牢なデータストレージの構築が比較的容易である。\\nライセンス[編集]\\nMySQLは GPL とコマーシャルライセンスのデュアルライセンス方式で提供されている[6]。\\n基本的に、MySQLのサーバ本体とクライアントライブラリはGPLで提供される。このため、MySQLを改造し、それを再頒布する場合は、GPLに従う必要がある。また、GPLのクライアントライブラリを利用してMySQLに接続するアプリケーションを開発した場合、そのアプリケーションもGPLライセンスとしなければならない可能性がある。\\nただし、クライアントライブラリに関しては、アプリケーションが既定のオープンソースライセンスで公開されるのであれば、GPL以外のオープンソースライセンスで再頒布することも可能である[7]。\\nサポートやツールが提供される有料サブスクリプションのMySQL Standard Edition, Enterprise Editionでは、コマーシャルライセンス版のバイナリが提供される。[8]。コマーシャルライセンス版では、GPLによる制約は受けない。\\n歴史[編集]\\n1995年5月23日 - 内部的に MySQL の最初のバージョンがリリース。\\n1998年1月8日 - 最初の Windows 版がリリース。Windows 95 や NT 向け。\\n2001年1月 - Version 3.23 プロダクションリリース。ベータ版は2000年6月にリリース。\\n2003年3月 - Version 4.0 プロダクションリリース。ベータ版は2002年8月にリリース。union搭載。\\n2004年10月 - Version 4.1 プロダクションリリース。ベータ版は2004年6月にリリース。R木、B木、サブクエリー、prepared statements搭載。\\n2005年10月 - Version 5.0 プロダクションリリース。ベータ版は2005年3月にリリース。cursors, stored procedures, triggers, views, XA transactions搭載。\\n2008年2月6日 - サンマイクロシステムズがMySQL ABを買収。\\n2008年7月1日 - サン・マイクロシステムズ株式会社がMySQL株式会社（MySQLの日本法人）を吸収合併。\\n2008年11月 - Version 5.1 プロダクションリリース。ベータ版は2005年11月にリリース。event scheduler, partitioning, plugin API, row-based replication, server log tables搭載。\\n2010年6月1日 - 日本オラクル株式会社がサン・マイクロシステムズ株式会社を統合。\\n2010年12月15日 - Version 5.5 プロダクションリリース(5.5.8よりGA)。デフォルトのストレージエンジンが InnoDB になり、マルチコアCPUでのパフォーマンスが改善した[9]。ベータ版(Version 5.4)は2009年4月にリリース。\\n2013年2月5日 - Version 5.6 プロダクションリリース。InnoDB、NoSQLの機能を強化[10][11]。\\n利用状況[編集]\\n世界的にはこのMySQLの方が、ライバルであるFirebirdやPostgreSQLよりも多く使用されており、ウェブサイトの構築に用いるソフトウェア環境として、LAMP (Linux, Apache, MySQL, Perl・PHP・Python) の略称が知られている。Yahoo!、Facebook、Twitterなどの巨大なウェブサイトでの適用例も多く、WebアプリケーションのXOOPS、WordPress、SugarCRMなどもバックエンドのデータベースとしてMySQLを利用している。また、ウィキペディアのためのソフトウェアであるMediaWikiでもこのソフトウェアを使用している。他にも、社内用WebアプリケーションのサイボウズもMySQLを利用しており、MySQLを改造するため、有償契約をしている。\\n世界的な傾向に反し、以前日本ではPostgreSQLの適用例がMySQLを上回っていた。2003年の時点で、オープンソース系のデータベースとして、日本では8割以上がPostgreSQLだった。\\nその理由として、以下の理由が指摘されている。\\n欧米において、MySQLの広報が積極的だった。\\nMySQLの日本ユーザ会の立ち上げが遅れた。\\n日本でのPHPのバイブル本である「PHP徹底攻略」と「PHP4徹底攻略」がPostgreSQLとの接続を想定して記述されていた。\\nPostgreSQLの開発に日本人であるSRAの石井達夫が関わっていた。彼は上記二冊の執筆も一部担当している。\\nJavaを開発するSun Microsystemsが、MySQLよりもPostgreSQLを推していた。\\nただしSun MicrosystemsがMySQLを買収したことにより、今後はMySQLをより重視していく可能性が高い。\\nかつてのMySQLでUnicodeのサポートが不十分だった。\\nアプリケーションの頒布形態によってはGPLではなく商用ライセンスを選択しなければならないケースがある。\\nだが、そのような状況は徐々に変遷し、2009年の段階ではMySQLのほうがPostgreSQLよりも多く利用されているという報告がある。[12][13]\\nプラットフォーム[編集]\\nMySQL 5.5は次のプラットフォームでサポートされている。[14]\\nSolaris 10 以降(SPARC (64 bit), x86_64, x86)\\nFreeBSD 7 以降\\nLinux\\nMac OS X 10.5 以降\\nMicrosoft Windows XP 以降\\nMySQL 5.0は以下のプラットフォームでサポートされている。\\nAIX\\nHP-UX\\nSolaris 8 以降\\nSCO OpenServer\\nSCO UnixWare\\nTru64 UNIX\\nBSD/OS\\nFreeBSD\\nNetBSD\\nOpenBSD\\nLinux\\nMac OS X 10.3 以降\\nMicrosoft Windows 2000 以降\\n開発言語[編集]\\nC, C++, Eiffel, Smalltalk, Java(JNI), Lisp, Perl, PHP, Python, Ruby, TclはMySQLのAPIを介してデータベースにアクセスできる。またODBCインターフェース (MyODBC) もサポートされている。MySQL自体はCおよびC++で開発されている。埋め込みSQLによる開発はサポートされていないため、オープンソースプロジェクトのOpen ESQL等が利用される[15]。\\n日本語処理[編集]\\nMySQL5は、sjis (Shift_JIS)、cp932（Microsoftコードページ932）、utf8（UTF-8（3バイトまで））、utf8mb4（UTF-8（4バイトまで/MySQL5.5以降でサポート））、ujis (EUC-JP) といった文字セットを指定することで、日本語の文字を含む入出力を正しく扱うことができる。\\nsjisは、JIS X 0201およびJIS X 0208に準じたものであるが、同じ「Shift_JIS」でも、Windows環境で使用される文字の一部を正しく扱えない場合がある。これは、Windowsでは、前記の規格以外の拡張文字を含む、拡張されたShift_JISを使用しているためである。これらの文字をMySQLで正しく扱うには、sjisではなくcp932を指定する。\\nたとえば、Microsoft AccessからUTF-8で格納するテーブルにODBCリンク経由でアクセスする場合は、MyODBCの文字セット設定をcp932にしておけば、正しく入出力できる。\\ncp932がMySQLでサポートされたのは4.1.12からであり、それまでは、「sjisで格納し、sjisで入出力」するという設定を行い、入出力時の文字コード変換を避けることで、Windowsの拡張シフトJISで問題が起きないようにする、というのが、日本国内における「常識」であった。cp932のサポートの前にはすでにUnicodeがサポートされていたが、それらを積極的に使用する人はあまりいなかった。なぜなら、Unicodeで格納するテーブルに対してsjisで入出力を行うと、Windows環境において拡張文字が適切に変換されず文字化けが発生するため、それが「Unicode対応が不完全」「Unicodeはまだ使いものにならない」という評価を生む一因となっていたからである。\\nRuby on Rails、CakePHPのデフォルトはutf8だが、データベース接続設定でencodingをutf8と明示的に使用宣言しておく必要がある。\\nMySQLの管理ツール[編集]\\nMySQL Workbench(5.2以降)\\nphpMyAdmin\\nphpMyBackupPro\\nNavicat for MySQL\\nMySQL Administrator\\nDatabase Master\\nSequel Pro\\nAdminer\\n脚注[編集]\\n[ヘルプ]\\n^ “D.1. Changes in Release 5.6.x (Production)” (英語). MySQL 5.6 Release Notes.  MySQL.com (2013年6月3日). 2013年6月3日閲覧。\\n^ http://db-engines.com/en/ranking\\n^ http://www-jp.mysql.com/why-mysql/marketshare/\\n^ a b http://www.ipa.go.jp/software/open/ossc/seika_1004.html\\n^ 451 Group survey highlights user concerns over Oracle’s proposed ownership of MySQL\\n^ MySQLのライセンスポリシー\\n^ FOSS License Exception\\n^ MySQL Editions\\n^ 1.5. What Is New in MySQL 5.5\\n^ Oracle>About>Press Room>Oracle Announces General Availability of MySQL 5.6\\n^ Oracle Japan>Media centre home>ニュースリリース>MySQL5.6の一般提供開始を発表\\n^ http://ossipedia.ipa.go.jp/doc/201\\n^ http://www.itmedia.co.jp/enterprise/articles/1005/12/news011.html\\n^ http://www-jp.mysql.com/support/supportedplatforms/database.html\\n^ Open ESQL\\n関連項目[編集]\\nポータル FLOSS\\nMySQL Cluster (en:MySQL Cluster)\\nMySQL Workbench (en:MySQL Workbench)\\nストレージエンジン\\nMyISAM (en:MyISAM)\\nInnoDB\\nAria(以前の名称はMaria)\\nMySQL Archive (en:MySQL Archive)\\nMySQL Federated (en:MySQL Federated)\\nアプリケーションとパッケージ\\nMediaWiki - MySQLをバックエンドに用いることが可能である。\\nXAMPP\\nMySQLからフォークしたプロジェクト\\nMariaDB\\nDrizzle (en:Drizzle)\\nリンク[編集]\\nウィキメディア・コモンズには、MySQLに関連するカテゴリがあります。\\nMySQL.com\\n日本MySQLユーザ会\\nMySQL リファレンスマニュアル\\nPlanet MySQL 日本語版（ブログ集約サイト）\\nMySQL development\\nMySQL Weblogs\\nMySQL Performance Blog\\nFree MySQL 5 provider\\nMarkus Popp's blog\\nAndrew Gilfrin's blog\\nRoland Bouman's blog\\nBeat Vontobel's blog\\nGiuseppe Maxia's blog\\nJay Pipe's blog\\nMike Kruckenberg's blog\\nSheeri Kritzer's blog\\nMySQL Database Administration Blog\\nライセンスに関する FAQ\\nどのようにデータベースのMySQL Workbenchを使用して作成する - このチュートリアルではデータベースのMySQL Workbenchを使用して作成する方法について説明.\\n表・話・編・歴\\nサン・マイクロシステムズ\\nソフトウェア\\nSolaris - OpenSolaris - SunOS - Java - JDS - JES - StarOffice（日本ではStarSuite）/OpenOffice.org - NIS/NIS+ - Sun ONE - NFS - ZFS - DTrace - Sun Grid Engine - MySQL - VirtualBox - Sun Java Directory Server - Sun Java System Web Server/Open Web Server - GlassFish\\nハードウェア\\nSun-1 - Sun-2 - Sun-3 - Sun386i - Sun-4 - SPARCstation - Sun Ultra series - Sun Enterprise - Sun Blade - Sun Fire - UltraSPARC T1 - SPARC - JavaStation - Sun Ray - Sun Modular Datacenter - Sun SPOT - SPARC Enterprise\\n教育・研究\\nFortress - SCP - Sun COE\\n関連人物\\nジョナサン・シュワルツ - アンディ・ベクトルシャイム - スコット・マクネリ - ビル・ジョイ - ビノッド・コースラ - ジェームズ・ゴスリン\\n「http://ja.wikipedia.org/w/index.php?title=MySQL&oldid=48316025」から取得 \\nカテゴリ: MySQLデータベース管理システムオープンソースサン・マイクロシステムズオラクル\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nAfrikaans\\nالعربية\\nAzərbaycanca\\nБългарски\\nBosanski\\nCatalà\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEsperanto\\nEspañol\\nEesti\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nGaeilge\\nGalego\\nעברית\\nHrvatski\\nMagyar\\nՀայերեն\\nBahasa Indonesia\\nItaliano\\nTaqbaylit\\nҚазақша\\nភាសាខ្មែរ\\n한국어\\nKurdî\\nLietuvių\\nLatviešu\\nMalagasy\\nМакедонски\\nമലയാളം\\nМонгол\\nBahasa Melayu\\nမြန်မာဘာသာ\\nNederlands\\nNorsk bokmål\\nOccitan\\nPolski\\nPortuguês\\nRomână\\nРусский\\nසිංහල\\nSimple English\\nSlovenčina\\nSlovenščina\\nСрпски / srpski\\nSvenska\\nதமிழ்\\nไทย\\nTürkmençe\\nTürkçe\\nУкраїнська\\nOʻzbekcha\\nTiếng Việt\\nWinaray\\n中文\\nリンクを編集\\n最終更新 2013年6月28日 (金) 07:18 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b29"},"body":"Erlang\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの項目では、プログラミング言語のErlangについて記述しています。通信トラフィック量を表す同名の単位については「アーラン」をご覧ください。\\nErlang\\nパラダイム\\nマルチパラダイム、並行処理指向 (アクターモデル) 、関数型言語\\n登場時期\\n1986年\\n開発者\\nエリクソン\\n最新リリース\\nR15B03\\n型付け\\n動的型付け、強い型付け\\n主な処理系\\nErlang\\n影響を受けた言語\\nProlog\\n影響を与えた言語\\nClojure、Scala\\nプラットフォーム\\nUNIXに似たオペレーティングシステム、Windows、Mac OS X\\nライセンス\\n修正 Mozilla Public License (修正MPL)\\nErlang Programming - ウィキブックス\\nテンプレートを表示\\nプログラミング言語\\n>>他のプログラミング言語\\n■カテゴリ / ■テンプレート\\nErlang（アーラン）は、コンピュータにおいて汎用的な用途に使うことができる並行処理指向のプログラミング言語および実行環境。\\n目次\\n1 概要\\n2 命名\\n3 関数型言語\\n4 並行処理指向で分散処理指向の言語\\n5 配布\\n6 関連項目\\n7 脚注\\n8 参考文献\\n9 外部リンク\\n概要[編集]\\nErlangの直列処理のサブセットの言語は、関数型言語であり、先行評価を行い、変数への代入は1回限りであり、動的型付けである。 Erlangはエリクソンにより次の条件のシステムを構築できるよう設計された。\\n分散化された環境\\n障害に耐性をもつ (フォルトトレラント)\\nある程度のリアルタイム性を備える\\n無停止で稼働する\\nホットスワップが可能であり、稼働中のシステムを停止すること無くErlangのプログラムを変更することができる。 Erlangは、当初はエリクソン社内部だけで使われる非公開の技術であったが、1998年にオープンソースとして公開された。 エリクソンによるErlangの実装は基本的にはインタプリタであるが、HiPEというコンパイラも同社の実装に含まれている。 ただしHiPEはErlangが動作する全てのプラットフォームで使えるわけではない。\\nErlangにおいては、マルチスレッドの処理の並行性はプログラム開発者（プログラマ）にとって明瞭である。 これに対し、ほとんどのプログラミング言語においては、マルチスレッドは複雑で誤りを犯しがちな分野である。 Erlangで「プロセス」(スレッド) を生成し管理する手法はごく平凡な方法である。\\n命名[編集]\\nErlangは数学者のアグナー・アーラン（デンマーク語: Agner Krarup Erlang）から名前をとって命名された。 一方で、エリクソン社内で非常によく使われたためEricsson languageにちなんで命名されたと一部の人々は思っている。 当時エリクソンのコンピュータ科学研究所の所長であったビャーネ・デッカーによれば、この名前に関する2重性については意図的なものだとのことである。\\n関数型言語[編集]\\nErlangのソースコードの例を示す。\\n-module(fact).\\n-export([fac/1]).\\nfac(0) -> 1;\\nfac(N) when N > 0 -> N * fac(N-1).\\n次のソースコードはErlangによるクイックソートのアルゴリズムの実装である。\\n%% quicksort:qsort(List)\\n%% Sort a list of items\\n-module(quicksort).\\n-export([qsort/1]).\\nqsort([]) -> [];\\nqsort([Pivot|Rest]) ->\\nqsort([ X || X <- Rest, X < Pivot]) ++ [Pivot] ++ qsort([ Y || Y <- Rest, Y >= Pivot]).\\nこの例では関数qsortの再帰呼び出しを行っている。 再帰呼び出しはソート処理の対象が無くなった時点で終了する。 式[ X || X <- Rest、X < Pivot]は「 XをRestの要素として、XがPivotより小さい全てのXを選択する。」と読むことができる。 このようにErlangではリストを非常に簡単に扱うことができる。 Erlangでは異なる2つのデータ型の値の間であらゆる論理式を評価できるため、式の評価は単純である。 例えば、1 < aはtrueを返す。\\nただしErlangにおける戻り値（trueあるいはfalse）を返す基礎的なしくみを変更する必要がある場合には、比較関数を使うことができる。 例えば、a < 1がtrueと評価される比較順序により順序付けられたリストが必要な場合などである。\\n次のソースコードではリストをリスト要素の長さを基準にしてソートする。\\n-module(listsort).\\n-export([by_length/1]).\\nby_length(Lists) ->\\nF = fun(A,B) when is_list(A), is_list(B) ->\\nlength(A) < length(B)\\nend,\\nqsort(Lists, F).\\nqsort([], _) -> [];\\nqsort([Pivot|Rest], Smaller) ->\\nqsort([ X || X <- Rest, Smaller(X, Pivot)], Smaller)\\n++ [Pivot] ++\\nqsort([ Y || Y <- Rest, not(Smaller(Y, Pivot))], Smaller).\\n並行処理指向で分散処理指向の言語[編集]\\nErlangの主な特長は、並行処理のサポートである。 並行処理のサポートは、複数の「プロセス」を生成しそれらのプロセス間通信を行う基本的な機能群の簡潔で強力なセットである。 Erlangにおける「プロセス」は、Erlangのアプリケーションソフトウェアを構成する最も主要な要素である。 Erlangの「プロセス」は、OS (オペレーティングシステム) のプロセスともOSのスレッドとも異なる (それらは軽量なスレッドであり、Javaでいう「グリーンスレッド」とある程度似ている) 。 Erlangを学ぶ際はこのことに注意する必要がある。 結果としてErlangの「プロセス」は非常に軽量となっている。 Erlangの「プロセス」は約309ワードのオーバーヘッドである。 かなり多量の「プロセス」を性能を低減すること無く生成することが可能である。 2000万個の「プロセス」を使ってのベンチマークが行われたことがある[1]。\\nこれ以降の記述ではErlangにおける「プロセス」を括弧無しで言及する。\\nErlangにおけるプロセス間の通信は、それらプロセスの間で何も共有することなく非同期のメッセージ転送システムによって、行われる。 Erlangのプロセスは全てそれぞれの「メールボックス」をもつ。 メールボックスには他のプロセスから受信したメッセージが格納される。 その後、メールボックスに格納されたメッセージがメールボックスを所有するプロセスによって処理される。 そのときErlangのプロセスはメッセージを得るために receive という基本操作を行う。 メッセージを得る過程ではパターンマッチングが行われる。 まずメッセージ制御ルーティンが1番目のメッセージに対して各パターンがマッチするかどうか調べる。 2番目以降のメッセージに対しても同様のことを行う。 マッチングは、マッチするメッセージに出会うまで行われる。 メッセージが処理されると、メッセージはメールボックスキューから除去され、プロセスは復帰して続きの処理を行う。 Erlangの構成要素は何であれメッセージとして使うことができる。 Erlangの基本要素である整数 (integer) 、浮動小数点数 (float) 、文字 (character) 、atomも、またタプル、リスト、さらには関数さえも、メッセージとして扱うことができる。\\nソースコードの例を示す。\\nPid = spawn(Mod, Func, Args)       % execute function Func as new process\\nPid = spawn(Node, Mod, Func, Args) % execute function Func in remote node Node\\nPid ! a_message      % send message to the process (asynchronously)\\nreceive % receive message sent to this process\\na_message -> do_something;\\n{data, Data_content} -> do_something_else(); % This is a tuple of a type atom and some data\\n{hello, Text} -> io:format(\\\"Got hello message: ~s\\\", [Text]);\\n{goodbye, Text} -> io:format(\\\"Got goodbye message: ~s\\\", [Text])\\nend.\\nErlangでは異なるノード (コンピュータ) に分散した複数のプロセスを互いに連携させて動作させるためのサポートも組み込みで備えている (分散処理) 。 プロセスは遠隔のノードに生成することができ、遠隔ノード上のプロセスとのプロセス間通信は透過的である。 すなわち、遠隔ノード上のプロセスとのプロセス間通信は、同じノード上のプロセスとのプロセス間通信と全く同じように行われる。\\nErlangでの並行処理では、エラー処理の基本的な方法をサポートしている。 あるプロセスが異常をきたすと、プロセスは手際良く終了し、そのプロセスを制御しているプロセス (何らかのアクションをとることができるプロセス) にメッセージを送信する。 このエラー処理の方法により、ソースコードの保守性を高め複雑性を低減することができる。\\n配布[編集]\\nエリクソンはErlangをオープンソースとして、1998年に公開した。 その意図は、特定企業からの独立性を確保することと、Erlangに対する人々の認知を高めることであった。 ライブラリとリアルタイムデータベース (Mnesia) と共に配布される Erlangプログラミング言語の配布形式は、Open Telecom Platform (OTP) と呼ばれている。 エリクソンおよび数社の企業は、Erlang技術に対する商用サポートを提供している。\\nErlangをオープンソースとして公開する方針を採ってからは、世界中のいくつもの企業によって採用されている。 Nortel Networks、T-Mobile などの企業がErlangを採用している[2]。 ただし2008年現在の時点では、まだ広く普及し主流のプログラミング言語となる段階には至っていない。\\n2008年現在、Erlangは活発に開発が続けられており、定期的に新リリースを公開している。 Erlangは、いくつかのUNIXに似たオペレーティングシステムおよびWindows上で使うことができる。\\n関連項目[編集]\\n並行計算\\nアクターモデル\\nガード\\nConcurrency and Coordination Runtime\\nejabberd - Erlangを使って開発された XMPP/Jabber インスタントメッセージングサーバ\\nYet another web server (YAWS) - Erlangで開発された十分な機能を備え高い性能を発揮するウェブサーバ\\nTsung - 高性能なベンチマークツール\\nWings 3D - Erlang で開発された3Dモデラ\\n脚注[編集]\\n[ヘルプ]\\n^ Ulf Wiger (2005年11月14日). “Stress-testing erlang”. comp.lang.functional.misc. 2006年8月25日閲覧。\\n^ \\\"Who uses Erlang for product development?\\\" Erlangに関してよく尋ねられる質問集。この資料によるとErlangを最も大規模に採用している組織はエリクソン社である。エリクソン社は電気通信システムの開発にErlangを使っている。同社ではこれまで何十ものプロジェクトでErlangを採用してきた。とりわけ大規模なものは非常にスケーラブルな AXD301 ATM スイッチのプロジェクトである。Erlangを採用しているエリクソン以外の組織としては、Nortel、Deutsche Flugsicherung（航空管制を担うドイツの政府組織）、T-Mobile などが挙げられている。\\n参考文献[編集]\\nJoe Armstrong (2003). \\\"Making reliable distributed systems in the presence of hardware errors\\\". 博士論文 (Ph.D.) 、スウェーデン王立ストックホルム工科大学\\n外部リンク[編集]\\nErlang - 公式サイト\\nErlang - オープンディレクトリプロジェクト\\n日本の Erlang ユーザのためのハブサイト\\nErlang World - 日本語によるErlangの解説サイト\\n「http://ja.wikipedia.org/w/index.php?title=Erlang&oldid=48425339」から取得 \\nカテゴリ: プログラミング言語関数型言語オープンソース並行計算\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nБългарски\\nCatalà\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEspañol\\nEesti\\nفارسی\\nFrançais\\nGalego\\nItaliano\\nქართული\\n한국어\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nРусский\\nSlovenščina\\nSvenska\\nТоҷикӣ\\nไทย\\nУкраїнська\\n中文\\nリンクを編集\\n最終更新 2013年7月8日 (月) 06:29 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2c"},"body":"R言語\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nR言語(アールげんご)は、オープンソースでフリーソフトウェアの統計解析向けプログラミング言語、及びその開発実行環境である。\\nR言語は、ニュージーランドのオークランド大学のRoss IhakaとRobert Gentlemanにより作られた。現在では、R Development Core Team（S言語開発者であるJohn M. Chambersも参画。 R Project Contributors）によって、メンテナンスと拡張がなされている。\\nなお、R言語仕様を実装した処理系の呼称名はプロジェクトを支援するフリーソフトウェア財団によれば GNU R（GNU R - Free Software Directory）だが、他の実装形態が存在しないため当記事では日本での慣用的呼称にならい仕様・実装をまとめて適宜 “R言語” や “R” 等と呼ぶ。\\nR言語\\nパラダイム\\nマルチパラダイム、関数型、オブジェクト指向、命令型\\n登場時期\\n1996年\\n設計者\\nRoss Ihaka、Robert Gentleman（S言語に基づく）\\n開発者\\nR Development Core Team\\n最新リリース\\n3.0.1 / 2013年5月16日（47日前） （2013-05-16）\\n型付け\\n動的型付け\\n主な処理系\\nGNU R\\n影響を受けた言語\\nS言語、Scheme\\nプラットフォーム\\nクロスプラットフォーム\\nライセンス\\nGNU GPL\\nウェブサイト\\nwww.r-project.org\\nテンプレートを表示\\n目次\\n1 特徴\\n1.1 ベクトル処理言語\\n1.2 統計に適した解析環境\\n1.3 高速な組込み関数群\\n1.4 視覚化に優れたグラフ機能\\n1.5 データ互換性\\n1.6 ユーザープログラムを配信・利用できるCRANネットワーク機能\\n1.7 教育現場から実務・研究現場へ永続的に利用可能\\n2 言語仕様\\n2.1 制御構造、サブルーチン\\n2.2 オブジェクト指向\\n2.3 データ型\\n2.3.1 ベクトルとリスト\\n2.3.2 データフレーム\\n3 機能\\n3.1 データ入出力\\n3.2 データのプロット\\n3.3 ワークスペースの保存\\n4 その他\\n4.1 日本語対応\\n4.2 プログラムの入手\\n4.3 パッケージ\\n4.4 CUIとGUI\\n4.5 処理速度\\n4.6 持続可能な統計環境\\n4.7 最近の展開\\n5 外部リンク\\n特徴[編集]\\nR言語は文法的には、統計解析部分はAT&Tベル研究所が開発したS言語を参考としており、またデータ処理部分はSchemeの影響を受けている。（S言語は1998年にACMのソフトウェアシステム賞を獲得した。）\\nベクトル処理言語[編集]\\nR言語は「ベクトル処理」と呼ばれる実行機構により、柔軟な処理を簡便な記法で実現する。R言語で言う「ベクトル」とは数学的用語のベクトルとはやや異なり「構造を持ったデータ集合」という「リスト」に近い意味を持つ。数学的ベクトル・行列のみならず、配列、リスト、テーブル（データフレーム）、集合、時系列、などといった複雑な構造を持ったデータも宣言無く変数に納める事ができる。\\nベクトルは複数の要素を持ち得るが、例えばリストの要素がさらにテーブルや時系列の配列などであるといった「入れ子構造」であってよい。このおかげで複雑なデータ構造が他愛もなく構築・管理できる。\\n予約語としてRに組込まれた演算も関数もベクトルを扱える。ユーザー定義関数をベクトル対応にするための関数もある。\\nまたベクトル処理によって、演算も関数も特別な制御を要さずベクトルの全要素に作用するため、プログラム全体の制御構造が単純化して意味が明瞭になるという効用が期待できる。うまく使えば、通常他の言語で複数要素を処理する時の「目的とする計算の本質とかけ離れたアルゴリズム（例えばカウンタを使ったループや条件分岐等）」から解放され得る場合も多い。\\n例として『円周率をモンテカルロ法で近似する計算』を挙げる。（簡約のため第一象限のみ計算して４倍する）\\ns <-100000\\nx <-runif(s)\\ny <-runif(s)\\nsum(x^2+y^2<=1)*4/s\\n『<-』は代入（この場合『=』とも書けるが推奨はされていない）、『runif(a)』は一様乱数をa個作りベクトルで返す関数、『a^2』はaの二乗、『sum(a<=b)』は関係式a<=bが真であるようなベクトル要素の個数、を意味する。ここで、ごく普通の数式によって、条件分け計算を複数回行なう指示が暗黙のうちになされることに注目されたい。プログラム全体を読めば 「サンプル数１０万個として、一様乱数でxyのサンプルをつくり、半径１の円弧内に入ったサンプルだけを数える」という計算の本質を反映した記述ができる事が見て取れる。このままRに入力すれば計算が実行できる。代入『<-』は「付値」と呼ばれる関数でもあり、以下のように一行に書き換えても意味は同じ。\\nsum(runif(s<-100000)^2+runif(s)^2<=1)*4/s\\nまた、付値記号に矢印を用いると代入の向きを左右に使い分けることが出来る。\\nベクトルは「論理添字（元のベクトルと要素数が等しい論理値ベクトルを用いた添字指定）」で要素の絞り込みができ、その結果をそのまま付値対象として利用出来る。\\n以下はFizzBuzz問題の解答例。\\n1:100 ->n ->Ans　　　　# 1〜100の整数ベクトル生成。nは加工前の数列、Ansは加工後の結果用。\\nAns[n %% 3==0 ->FizzSet]<-\\\"Fizz\\\"　　　　# ３の倍数FizzSet相当のAns要素を文字列Fizzに置き換える。\\nAns[n %% 5==0 ->BuzzSet]<-\\\"Buzz\\\"　　　　# ５の倍数BuzzSet相当のAns要素を文字列Buzzに置き換える。\\nAns[FizzSet & BuzzSet]<-\\\"FizzBuzz\\\"　　　　# 両者の共通集合相当のAns要素を文字列FizzBizzに置き換える。\\nprint(noquote(Ans)) # 引用符を除いてプリントする。\\nイテレータとしてのforはじめ各種制御命令も充実しているので、ベクトル記述とは適材適所の使い分けができる。\\n統計に適した解析環境[編集]\\n最小限の労力で見通しよく解析するために工夫された命令体系を備えている。\\nベクトル、配列、行列、データフレーム(テーブルに相当)、リスト、時系列、などの動的型付けデータ型。（後出「データ型」参照）\\n高階関数(データとして関数を操作する関数)を、ベクトル処理として記述可能。\\n『モデル式』の導入により、複雑な統計モデル記述と曲線あてはめ等のモデルフィット指示を、簡潔で統一的に表現可能。\\n無限大・非数・欠損値定数。集合計算や複素数計算の実装。\\nd(確率密度) p(累積確率) q(分位点) r(乱数生成) の4機能と分布名を組合せる命名規則を持つ、多次元確率分布機能関数。　RjpWiki/Rにおける確率分布\\nsample関数による数値・複素数・文字列などの標本抽出(サンプリング)記述。\\nオブジェクト指向。関数・代入式もオブジェクト。（後出「オブジェクト指向」参照）\\n単純な構文、データ型宣言不要、名前空間。（後出「仕様」参照）\\n文字列・式の相互変換やパターンマッチング検索・編集などの文字列操作。\\n対話的処理だけでなくバッチ処理も可能。\\n解析手法の比較検証には欠かせない「定番の検証用データ集」\\n画像処理・音声合成・GIS・テキストマイニングなどCRAN（後述）によって日々強化される拡張機能。\\n擬似乱数生成法としてメルセンヌ・ツイスタがデフォルト設定され、ほか多種の生成法が選択可能。\\n高速な組込み関数群[編集]\\nインタープリタながら、行列など複雑なデータ構造に最適化された高速な組込み関数群。（後出「処理速度」参照）\\nさらに高速計算が要求される場合、C、C++、FORTRANなどの外部プログラムと動的リンクしての拡張が可能。\\n視覚化に優れたグラフ機能[編集]\\nデータのグラフ・図解化機能が柔軟で、インフォグラフィック環境とでも呼べるほど高度なグラフ作成ソフト機能を持つ。ユーザー独自の図解定義もプログラムが容易。\\nR graphical manual Rの全てのパッケージのマニュアルを例示用グラフィックス3万以上とともに紹介\\nグラフ画像は、多くの画像フォーマット・商業印刷品質で出力可能。（後出「データのプロット」参照）\\nデータ互換性[編集]\\n他の統計ソフト、Excelのなどのデータ読込。 Rがインポート・エクスポートできるデータ形式（後出「データ入出力」参照）　手軽なデータソース例として、csvテキスト形式のデータを『read.csv(\\\"ファイル名\\\")』と命令する事で、Rの標準的なテーブルデータ形式であるデータフレームに自動変換して読込ませることができる。\\nODBC対応により各種データベースにアクセスできる。\\nユーザープログラムを配信・利用できるCRANネットワーク機能[編集]\\n世界中のRユーザが開発したRプログラム（パッケージ）が「CRAN」と呼ばれるネットワークで配信され、それらをR言語環境単独でオンラインのダウンロード・インストール・アップグレード管理可能。CRANはR言語にシームレス統合されているため、基本機能もオプションプログラムも、利用可能な機能は日々増加拡張している。CRANパッケージリスト（後出「パッケージ」「最近の展開」参照）\\n教育現場から実務・研究現場へ永続的に利用可能[編集]\\nマルチプラットフォーム。オープンソースで無償。誰もが同一作業環境を構築できる。\\n命令の文法が単純・高水準な統計解析と視覚化機能・永続的な利用に耐える、など教育機関において統計学教育や統計処理を必要とする講義で利用しやすく、プログラミングに手間取る事なく統計解析の教育・学習に専念でき、しかも解析のプロフェッショナルな道具であるので学習スキルは後々も実践で活かせる。（後出「プログラムの入手」「持続可能な統計環境」「最近の展開」参照）\\n言語仕様[編集]\\nR言語の構成には広義の関数型言語の一つであるSchemeの影響があり、リストを基本にした内部処理、遅延評価、静的スコープなどの特徴を持つ。表記法にはCの影響がある。ここでは、Rの特徴的な仕様について、ごく簡単に触れる。詳細はR Language Definition （日本語）を参照されたい。以下引用符は一重でも二重でもよい。\\n制御構造、サブルーチン[編集]\\nfor, if, while, repeat, switch, break といった近代的な構造化構文をサポートする。自前の関数（手続き）を定義することができ、自前の二項演算子を定義することもできる。関数はfunction関数で生成する。次に階乗を計算する自前の関数を生成し、toyfactorial として参照可能にする例を示す。\\ntoyfactorial <- function (n) {\\nif (n <= 0) return(NA)\\nf <- function(i) {\\nif (i == 1) return(1) else return(i * Recall(i - 1))}\\nreturn(f(n))}\\nこれは実用的ではないが、関数のネスト、再帰呼び出し、スコープの例として挙げる。RはPascalやModula-2のように関数のネストが可能である。この例では関数内部で更に局所的な関数を生成し、fとして参照している。スコープもPascal等と同様辞書式で関数 f の中ではその外側にある toyfactorial の変数が「見える」。str は局所変数なので、関数の外側に同じ名前の変数があっても影響を与えない。ただし、Rは呼び出しスタックを遡る動的スコープも実現可能である。f の内部では自分の名前を参照することができないので、自分自身を再帰的に呼び出すためにRecall 関数を用いている。関数型の引数を利用することもでき、その場合複数の関数が互いに呼び出しあうことができ、また無名の関数をその場で定義して関数型の引数として渡すことができる。一種の複文のような用途に用いられる。NAは統計処理においては欠くことのできない特殊なデータで、データが無効であることを示す。\\nRの関数はそれ自体がオブジェクトであり、ある関数自体を外から参照したり書き換えたりすることができる。関数の本体部分を返す body 関数、仮引数リストを返す formals 関数、関数に付随する環境を返す environment 関数などが用意されている。\\n渡された式そのものを操作することも可能で、特定の環境（名前とポインタのリスト）の下で与えられた式を評価する eval 関数、渡された式の要素を環境に応じて置き換える substitute 関数、式を文字列に分解する deparse 関数等がある。\\n関数呼び出しも一種のリストとして処理されており、次のようにcall 関数を用いて、関数名と引数のリストから関数呼び出しオブジェクトを生成することができる。\\nx <- 1:3\\ny <- 2:4\\nz <- call('plot', x, y)\\neval(z)\\n関数はファイルから読み込むこともでき、更には「パッケージ」（ライブラリ）として一まとまりにすることもできる。\\nオブジェクト指向[編集]\\nRには継承やメソッドの実行時ディスパッチといったオブジェクト指向プログラミングの手法が取り入られており、数多くの総称的な (generic) 関数を持つ。これは同じ関数名であっても、取り扱うオブジェクトが属しているクラスによって独自の方法で処理を行うものである。Rでは、クラスはオブジェクトに付随する属性として扱われるものの一つであり、リストとして保管されている。\\nデータ型[編集]\\n数値型（複素数を含む）、文字型、論理型といった基本的な型、ベクトル、リスト、行列といった統計処理や情報処理に必要な型を備えている。前述のように関数それ自体もデータである。データフレームは配列ないしリストの拡張版で、コラム毎に異なったデータ型を持つことができるため、表の形で表現されたデータを格納/操作するのに有用である。データフレームは行列から生成することもあるが、ここでは岡田昌史他『The R Book』(ISBN 4-901676-97-0) に倣ってリストとの関連で説明する。\\nベクトルとリスト[編集]\\nベクトル型は、データをある順序で並べたものである。2:5 または c(2, 3, 4, 5) は数値型データ2, 3, 4, 5をこの順序で並べたものである。変数a, bを同じ要素数をもつ数値型データのベクトルとすると、a + bは両ベクトルを要素毎に加算してできた、同じ要素数の数値型ベクトルを返す。a + 1はベクトルaの各要素に1を加算したベクトルを返す。c('猫', '猫', '犬')のように文字（列）型、論理型データを要素とするベクトルを作ることもできる。\\nリスト型は、様々な型のデータを並べたものである。ベクトルのリストやリストのリストも可能である。list 関数によって生成することができる。\\nf1 <- c('猫','猫','犬')\\nf2 <- c(1, 2, 3)\\nf <- list(field1=f1, field2=f2)\\n文字型データを要素とするベクトル f1、数値型データを要素とするベクトル f2 から、リスト f が生成される。field1, field2 はリストの要素を指す「タグ」である。LISP風のdotted pair listも実装されているので必要に応じて用いることができる。\\nデータフレーム[編集]\\nさて、上記の2つのベクトルf1, f2の要素数は等しい。このような場合、リストをデータフレームに変換することができる。\\ndf <- data.frame(f, row.names=c('たま ', 'みけ', 'ぽち'))\\ndfはデータフレーム型変数であり、各ROW（以下「行」）に「たま」「みけ」「ぽち」のラベルがつく。\\nもうすこし大きな表、例えば\\n種\\n性別\\n月齢\\n愛らしさ\\nたま\\n猫\\n♀\\n1\\n5\\nしろ\\n猫\\n♂\\n2\\n4\\nくろ\\n猫\\n♂\\n1\\n5\\nみけ\\n猫\\n♀\\n3\\n5\\nぶち\\n猫\\n♂\\n12\\n3\\nとら\\n猫\\n♂\\n18\\n2\\nみゃぁ\\n猫\\n♀\\n30\\n4\\n猫じゃ\\n猫\\n♂\\n80\\n0\\nぽち\\n犬\\n♀\\n2\\n5\\nころ\\n犬\\n♀\\n10\\n5\\nたろ\\n犬\\n♂\\n40\\n3\\nじろ\\n犬\\n♂\\n40\\n3\\nじんぺい\\n犬\\n♂\\n50\\n2\\nわん\\n犬\\n♀\\n60\\n4\\nのらくろ\\n犬\\n♂\\n100\\n5\\nを例えば「犬猫」という名前の変数にデータフレームとして付値（手続型言語の代入に相当する）すると、その内容は\\n> 犬猫\\n種 性別 月齢 愛らしさ\\nたま 猫 ♀ 1 5\\nしろ 猫 ♂ 2 4\\nくろ 猫 ♂ 1 5\\nみけ 猫 ♀ 3 5\\nぶち 猫 ♂ 12 3\\nとら 猫 ♂ 18 2\\nみゃぁ 猫 ♀ 30 4\\n猫じゃ 猫 ♂ 80 0\\nぽち 犬 ♀ 2 5\\nころ 犬 ♀ 10 5\\nたろ 犬 ♂ 40 3\\nじろ 犬 ♂ 40 3\\nじんぺい 犬 ♂ 50 2\\nわん 犬 ♀ 60 4\\nのらくろ 犬 ♂ 100 5\\nのように、本来のデータをよく表現するものとなっている。それだけでなく、「猫」「犬」「♀」「♂」などの文字データは内部的に因子ないしカテゴリに変換されている。データフレームから特定のデータコラムを抽出するには 変数名$タグ名、例えば 犬猫$月齢 とする。特定のデータ行だけを抽出するには subset 関数または要素の指定 [ ] を用いる。例えば\\n猫 <- subset(犬猫, 犬猫['種'] == '猫')\\n犬 <- 犬猫[犬猫['種'] == '犬',]\\nt.test(猫$愛らしさ, 犬$愛らしさ)\\nは「愛らしさ」の平均値を猫と犬の間でt検定する（この例ではp-value = 0.6537）。\\n機能[編集]\\nRには標準状態でも統計、検定、解析向けの強力な関数が備わっており、必要に応じて新たな関数を定義することができ（CやFORTRANなどによって記述し、外部でコンパイルした関数を呼び出すこともできる）、自分でプログラムを書かなくても、多くのパッケージを利用することができる。これに加えて、便利な入出力機能、グラフ作成機能を備えている。\\nデータ入出力[編集]\\nベクトルを読み込む scan 関数、簡易にデータフレームを読み込むことのできる read.table 関数等、テキストファイル入出力用のさまざまな関数が用意されている。また、市販の統計解析パッケージSPSS、SAS等の独自形式バイナリデータを直接扱うこともできる。画像をバイナリデータとして読むこともでき、読み込み後は行列として扱うことができるので、画像処理にも用いうる。パイプやソケット（ポート番号参照）を扱う関数も用意されている。\\nデータのプロット[編集]\\nplot 関数によって多彩なプロットができる。plotは総称的な関数であり、引数として渡されたデータの種類によって、自動的に様々なグラフを描き分ける。他にヒストグラムを描画する関数、イメージを描画する関数など高レベルの描画関数がある。これらはデフォルトでも機能するが、細かなパラメタを指定することもできる。加えて、単に線を引いたり点を打ったりする低レベルの描画関数も用意されているため、好みのグラフを生成することができる。プロットは画面に対して行われるだけでなく、PDF、SVG、PS、PNGといった形式の出力を直接行うこともできる。\\nデフォルト状態でのRのプロット例\\n図に、デフォルトでのプロット例を示す。上から順にplot(犬猫$種, 犬猫$性別)、plot(sin(seq(0, 2 * pi, 0.1)))、image(x <- -50:50, x, x %*% t(x))の実行結果である。seq関数は等差級数からなるベクトルを生成する。%*%は行列の積を計算する演算子、tは転置行列を生成する関数である。最初の例では先に扱った動物種毎の性比を表示、次の例では正弦関数（自動的にベクトルの添字が横軸となり、ベクトル生成式が縦軸のラベルとなっている）を表示し、最後の例では、引数を評価する中でベクトルを生成してxに代入し、積を計算し、その各要素の値を色の濃さで表現している。\\nワークスペースの保存[編集]\\n現在の作業状況に名前を付けて保存し、後に再利用することができる。コマンドを発行するコンソールの内容も保存できるので、どのような処理を行って結果を得たかを確実に記録し、再現することができる。発見的操作を伴う研究用途では極めて重要な要素である。\\nその他[編集]\\n日本語対応[編集]\\n日本語に対応しており、関数名、変数名、コメントなどに日本語を使うことが出来る。\\nプログラムの入手[編集]\\nCRAN（例えばCRAN(筑波大学ミラーサイト)）からダウンロード・インストールすればただちに利用開始できる。動作環境はマルチプラットフォームに対応し、Windows、Mac OS X、UNIX、Linuxで動作する。 アップデートは精力的に継続され、ソースコードもCRANにて公開されている。\\n2011年9月1日時点での最新版は『R-2.13.1』。 最新版の新機能・バグフィックス等の一覧\\n具体的なインストール方法については、RjpWiki“R のインストール”（外部リンクも参照）などが参考になる。\\nパッケージ[編集]\\nRの用語で「パッケージ」とは、R言語のプログラムを配布用の形式に保存したものを言う。関数やデータセット、リファレンスマニュアルなどがひとまとめにされた、いわば出来合いのアプリケーション・関数ライブラリ・データベースなどと言える。 Rにはあらかじめいくつかの標準パッケージが添付されており、たとえば3層ニューラルネット(nnet)等がすぐに利用できる。\\nCRAN（The Comprehensive R Archive Network）という配信の仕組みを使い、インターネット越しに随時パッケージの一覧検索・ダウンロード・インストール・作業領域へのロード・アップデート、をR言語システムが管理する。パッケージ間で関数を引用しあう依存関係も自動的に処理され、ユーザーが気を配らなくて良い。（この点はaptに近い仕組みともいえる。Perlユーザーは\\\"CPAN シェル\\\"類似と思えば分かりやすい。）ユーザーから見ると、CRANはR言語とシームレスに統合された機能の一部になっている。 世界中のRユーザーが、作成したパッケージをCRANで公開しており、これらは自由に使用できる。CRANはR資産の知識共有メカニズムとも言え、CRANによってR言語の機能は日々強化されている。R言語本体のみでも機能は潤沢だが、第一線ユーザー達の実務経験が反映した豊富なパッケージ群は大きな助力となりうる。\\n2011年1月9日時点で、CRAN上のパッケージ総数は2,737と発表されている。\\nパッケージ一覧は下記参照。\\n→CRAN - Contributed Packages 最新情報を反映。個別のマニュアルを備える。(英文)\\n→CRANパッケージリスト（翻訳） RjpWiki。翻訳一覧。\\n→CRAN Task Views 膨大なパッケージをジャンル分けして紹介している。(英文)\\nCRANのミラーサイト（負荷分散のためのサイト）は世界各地にあり、日本では\\n筑波大学ミラー 筑波大学のHTTPサイト\\n兵庫教育大学ミラー 兵庫教育大学のHTTPサイト\\nが存在する。\\nパッケージのダウンロードは上記ページから自由に手動で出来るが、相互依存関係の解決やインストール・アップデート・ロード管理は人手で行なうと煩わしいので、そのための機能を備えているRのシステムに一元管理させるのが推奨される。\\nパッケージ管理をR自体が行なうためには、あらかじめいずれかのCRANサイトを手元のRシステムに登録設定しておく必要がある。設定は一度行なえば良い。→ CRAN国内ミラーの使い方\\nパッケージを用いなければ、上記設定をしなくてもR言語を使うことは出来るし、オフラインのみでRを使用しても問題は無い。パッケージが必要になった時に改めてCRANに接続するようにすれば良い。\\nちなみにユーザー自身がパッケージを作成するためのツールキットは、標準パッケージとしてR言語に添付されている。\\nCUIとGUI[編集]\\nR言語は以下の標準インタフェース画面を通じて用いる。\\nコマンド入力や出力をCUIで行う「コンソールウィンドウ」\\nコマンドやデータの文字列を編集し、それらをコンソールへ入力する「Rエディタ」\\nロードしたオブジェクトを管理する「ワークスペースブラウザ」\\nデータテーブルをスプレッドシート状の形式で編集できる「データエディタ」\\nCRANからパッケージをインストールするための「パッケージインストーラ」\\nインストール済みパッケージのロード管理をする「パッケージマネージャ」\\n各パッケージに含まれているデータセットをブラウズできる「データマネージャ」\\n基本設定を行う「環境設定」\\n厳密に言えばこの方式はマルチウインドウのGUIと言えなくはないが、R言語を操作する「コンソールウィンドウ」は「命令をテキスト入力して使うCUI」である。���の点についてユーザーの間でも商業ソフトに見られるようなマウスオペレーションを望む声は多く、それに呼応して「R Commander」というGUIがCRANからパッケージとして提供されている。\\nR以外のGUIを利用する方法として、GNUの時系列解析環境であるgretlがあり、そのGUIを通じてRを操作出来る。\\nまた、データ分析プロセスをフローチャート式に描くことでプログラムできる「R AnalyticFlow」というソフトウェアも企業から無償提供されている。（外部リンク参照）\\n処理速度[編集]\\nインタプリタ言語であることから、R言語の処理速度は不当に低く評価されることが多い。しかしS言語商用版であるS-PLUSよりも多くの場合高速であるばかりか、汎用行列系言語のスタンダードとも言えるMATLAB、その派生語GNU Octave、Scilabよりも総合的に高速であるという評価例がある。（外部リンク参照）\\nR言語の特徴にもあるとおり、「統計計算に特化した情報処理」機能を充分生かしてこそ高い生産性を発揮できる。生産性の最たる「計算速度」への効果に関しては、基本的な作法がいくつも提唱されている。\\nRプログラムの高速化を目指すときは、R言語に組み込みの関数群が充分に高速化されているので、これらを活用すべきである。組み込み関数と同じ機能を新たにコーディングすることは避けなければならない。\\nベクトルをまとめて扱える関数がある場合では、それを用いる。ベクトル要素ごとにわけて処理すると、速度は低下する。論理判断を含んだループ処理をするのは、多くの場合、間違った方法でである。それにかえて論理添字集合の操作で一挙に答えを出すといった方法が推奨される。（R言語に限らず行列系言語いずれにおいても、高速化するには「forやrepeatといったループ系の命令を無駄に使わず、極力ベクトル化（あるいは行列化）する」ことが基本である。）\\n持続可能な統計環境[編集]\\n教育課程から実務への移行や職務環境の変化が生じると、利用可能な計算資源というものは変わってしまう。\\nR言語の登場以前は、学術論文など社会的信頼性を要求される統計データの処理環境といえば高額なプロプライエタリソフトウェアばかりが前提とされた。だがこれでは継続的な予算がつかなくなれば環境のサポートやアップデートは停止してしまい、極端な話、予算がもとから無い立場に異動してしまうと在来の統計処理が何も出来なくなる事態になりかねない。\\n統計家にとっては、いままで習得し錬成した手法と蓄積したデータとその運用方法は、たとえ環境が変化しようとも継承できなくては困る。この意味から、他に多く存在するプロプライエタリの、つまり「生かすも殺すも版権保持者の都合次第」というような統計処理ツールと比べ、R言語のようなオープンソースで、それゆえCRANパッケージ等によって日々機能拡張しうる、つまり「フリーソフトウェアの精神に則り永続的で世界規模な集合知に支えられ、無償でありながら高い信頼に値する」統計環境というのは、統計家の長期的な生産性に大きく寄与する「持続可能な統計環境」と言える。\\n最近の展開[編集]\\nCRANパッケージ数の飛躍的な増大に見られるとおり、統計学を超えて学問分野や業界を問わず、金融工学・時系列分析・機械学習・データマイニング・バイオインフォマティクスなど、柔軟なデータ解析や視覚化そして知識共有の需要に応えうるR言語の普及は世界的な広がりを見せている。\\n近年、生命科学分野のためのRパッケージプロジェクト『Bioconductor』が立ち上がり、すでに多くのゲノムスケール関連パッケージが配布されている。ゲノムスケールデータの諸情報、すなわち大規模遺伝子発現プロファイル、質量分析データ、タンパク質相互作用データなどを解析するプログラムやデータをRパッケージとしてユーザーに配布する仕組みである。2008年時点で、Bioconductorの日本国内ミラーサイトは統計数理研究所にある。\\nまた現在では、かつてSAS一辺倒だったFDA(アメリカ食品医薬品局)への薬事申請や報告の際にもRが用いられている。RjpWiki / RとFDA(アメリカ食品医薬品局）への薬の申請にかかわる資料\\nSPSSでは2009年より製品名をPASW Statisticsと改め、R言語との連携強化を発表した。SPSSのインタフェースからRの機能を使える。データ分析のスタンダードツール PASW Statistics 18｜SPSS Japan\\n2009年7月、SAS InstituteはR Interface Coming to SAS/IML StudioによってSASからR言語へのインタフェースを提供することを発表した。公式ページには、新たな統計手法はたいていの場合まっさきにR言語上で実装されるという現状をふまえSASユーザーの要望に応えてインタフェースの提供を行なう、との旨が述べられている。SAS9.2ライセンス保有者ならば、無償でダウンロード可能。SAS Institute Inc. Software Downloads SAS SAS/IML Studio 3.2\\n外部リンク[編集]\\nウィキメディア・コモンズには、R言語に関連するカテゴリがあります。\\nThe R Project for Statistical Computing （英語） R言語のオープンソース実装\\nThe Comprehensive R Archive Network （英語） CRAN\\nCRAN Packages By Name （英語） CRANで公開されているR用パッケージの一覧\\nMirrors （英語） CRANのミラーサイト一覧\\nR-Forge （英語）\\nSoftware Map （英語） R-Forgeで公開されているR用パッケージの一覧\\nThe R Journal （英語）\\nR GUI Projects （英語）\\nThe R manual （英語）\\nmanuals （英語） Rの公式マニュアル 『Introduction to R』\\nR Installation and Administration An Introduction to R R Language Definition R Data Import/Export Writing R Extensions R Internals （英語）\\nR: A Language and Environment for Statistical Computing Reference Index R Installation and Administration An Introduction to R R Language Definition R Data Import/Export Writing R Extensions R Internals (PDF) （英語）\\nUsing R for Data Analysis and Graphics Introduction, Code and Commentary (PDF) （英語）\\nKuhnert+Venables-R_Course_Notes.zip (ZIP) （英語） An Introduction to R: Software for Statistical Modelling & Computing\\nQuick-R （英語）\\nR Reference Card R reference card (PDF) （英語） Rの関数早見表\\nR （英語） Free Software FoundationのRプロジェクトページ(GNU Projectのひとつ)\\nR Wiki （英語） R ProjectのWiki\\nRweb （英語） ブラウザでR言語を体験できるwebアプリケーションサイト\\nR Commander （英語） 【R用パッケージ】 Rcmdr(RをGUIで操作できる)\\n［連載]フリーソフトによるデータ解析・マイニング 第38回 Rコマンダー: Rcmdr (1) (PDF) Rコマンダー: Rcmdr (1) （日本語）\\n［連載]フリーソフトによるデータ解析・マイニング 第39回 Rコマンダー: Rcmdr (2) (PDF) Rコマンダー: Rcmdr (2) （日本語）\\n無料統計ソフトEZR (Easy R) （日本語） 【Rcmdr用プラグイン】 RをGUIで操作できる(『R Commander』を組み込んでいる)\\nRstudio （英語） R用IDE\\nTinn-R （英語） R用IDE (Windows用)\\nR User Configurationについて （日本語） Rのユーザ個別設定を行うユーティリティ (Windows用)\\nRa, the R just-in-time compiler （英語） Rのループ処理を10倍速にするJITの試み\\nBenchmark （英語） Speed comparison of various number crunching packages (R言語の処理速度評価)\\nRSeek.org R-project Search Engine （英語） R言語専門の検索エンジン (R言語に関係する内容のページに偏った検索結果を提供する)\\nseekR （日本語） 上記の日本語版\\nRjpWiki 一覧 （日本語） Rの日本語情報とキーパースンの拠点\\n統計解析フリーソフトRの備忘録 (PDF) R-Tips （日本語） 『The R Tips ―データ解析環境Rの基本技・グラフィックス活用集―』(Rの解説書)のオンライン版\\nR 統計言語 R の関連ドキュメントの和訳 manuals-jp R の日本語文章 （日本語） Rの公式マニュアル 『Introduction to R』 の和訳\\nR 基本統計関数マニュアル (PDF) （日本語）\\nRのインストールと管理 R入門 R言語定義 Rのデータ取り込み/出力 Rの拡張を書く (PDF) （日本語）\\nRのインストールと管理 R入門 R言語定義 Rのデータ取り込み/出力 Rの拡張を書く (PDF) （日本語）\\nRのインストールと管理 R入門 R言語定義 Rのデータ取り込み/出力 Rの拡張を書く (PDF) （日本語）\\nR-FAQ日本語訳 （日本語）\\nビジネス統計解析 （日本語） Rの導入方法から具体的な言語文法や事例を交えた基本操作を解説した資料が公開されている\\nR による統計処理 （日本語） 『Rによる統計解析』(Rの解説書) サポートページ\\nRの備忘録 （日本語）\\nR、R言語、R環境・・・・・・ R、R言語、R環境・・・・・・ （日本語）\\nR統計解析入門: 統計解析 テクニカルデータプレゼンテーション （日本語）\\n租界<R>の門前にて -- 統計言語「R」との極私的格闘記録 （日本語）\\nCookbook for R （英語）\\nR Graph Gallery （英語）\\nR Graphical Manual （英語）\\nGoogle's R Style Guide （英語）\\nData Analysts Captivated by R’s Power （英語） Rの紹介\\n統計解析のための専用言語R(R言語)とは （日本語） Rの概要\\n統計分析フリーソフト「R」 （日本語） Rのチュートリアル\\nRプログラム （日本語） Rのチュートリアル\\nサーバー・クリニック: データとの格闘にはRが便利 （日本語）\\nデータ解析言語Rによる統計的プログラミング 第1回 豊富な統計機能で遊ぶ 第2回 機能プログラミングとデータ操作 第3回 再利用可能なオブジェクト指向プログラミング （日本語）\\nggplot2 （英語） 【R用パッケージ】 グラフ描画用高機能関数群\\nggplot2 （英語） ggplot2 ドキュメント\\nggplot2 Quick Reference （英語）\\nR AnalyticFlow （日本語） フローチャートを描くことで高度なデータ分析を実現するR用ソフトウェア\\nBioconductor （英語） ゲノムデータ解析R用パッケージ集\\nSTATISTICA （英語） 「FDA公認のRと連動可能」を謳っている統計ソフトウェア\\nstatconn （英語） RとExcelやCalcなどの他アプリとの相互連携サービスソフトウェア\\nMeCab: Yet Another Part-of-Speech and Morphological Analyzer （日本語） オープンソース 形態素解析エンジン\\nRMeCab （日本語） データ解析・グラフィックス環境 R から日本語形態素解析ソフト和布蕪(MeCab)を呼び出して使うインターフェイス\\ncabocha - Yet Another Japanese Dependency Structure Analyzer （日本語） Support Vector Machines に基づく日本語係り受け解析器\\nRCaBoCha （日本語） 日本語の係り受け関係を R で解析できるようにする\\nR-bloggers | R news & tutorials from the web （英語）\\nRoss Ihaka's Home Page （英語） Ross Ihaka 公式ページ\\nPaul Murrell's Home Page （英語） Paul Murrell 公式ページ\\n表・話・編・歴\\n数値解析ソフトウェア\\nフリーウェア\\nADMB（英語版）\\nEuler\\nFreeFem++（英語版）\\nFreeMat\\nGenius（英語版）\\nGmsh（英語版）\\nGNU Octave\\ngretl\\nOpenFOAM（英語版）\\nR\\nSage\\nSALOME（英語版）\\nScilab\\nプロプライエタリ\\nDADiSP（英語版）\\nGAUSS（英語版）\\nLabVIEW\\nMATLAB\\nMathematica\\nSpeakeasy（英語版）\\nVisSim（英語版）\\n一覧（英語版）\\n比較（英語版）\\n数式処理システム\\n数式処理システムの一覧\\n「http://ja.wikipedia.org/w/index.php?title=R言語&oldid=48363590」から取得 \\nカテゴリ: 数値解析ソフトウェア統計処理ツールオープンソースGNUプロジェクトオブジェクト指向言語関数型言語プログラミング言語\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nCatalà\\nČesky\\nCymraeg\\nDansk\\nDeutsch\\nEnglish\\nEspañol\\nEesti\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nGalego\\nעברית\\nहिन्दी\\nMagyar\\nBahasa Indonesia\\nItaliano\\n한국어\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nРусский\\nSlovenčina\\nСрпски / srpski\\nSvenska\\nதமிழ்\\nไทย\\nTürkçe\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年7月2日 (火) 11:02 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2d"},"body":"Hadoop\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの「Hadoop」はFLOSSに関連した書きかけ項目です。この記事を加筆して下さる協力者を求めています（Portal:FLOSS）。\\nApache Hadoop\\n開発元\\nApacheソフトウェア財団\\n最新版\\n1.2.0 / 2013年5月13日（51日前） （2013-05-13）[1]\\n最新評価版\\n2.0.5-alpha / 2013年6月6日（27日前） （2013-06-06）}[1]\\nプログラミング言語\\nJava\\n対応OS\\nクロスプラットフォーム\\nサポート状況\\nActive\\n種別\\n分散ファイルシステム\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttp://hadoop.apache.org/\\nテンプレートを表示\\nApache Hadoopは大規模データの分散処理を支えるJavaソフトウェアフレームワークであり、フリーソフトウェアとして配布されている。[2]Hadoopはアプリケーションが数千ノードおよびペタバイト級のデータを処理することを可能としている。HadoopはGoogleのMapReduceおよびGoogle File System(GFS)論文に触発されたものである。\\nHadoopはApacheのトップレベルプロジェクトの1つであり、世界規模の開発貢献者コミュニティによって開発され、使用されている。[3]\\n目次\\n1 アーキテクチャ\\n1.1 Hadoop分散ファイルシステム\\n1.2 ジョブトラッカーとタスクトラッカー: MapReduceエンジン\\n1.3 他のアプリケーション\\n2 主要なユーザ\\n2.1 Yahoo!におけるHadoop\\n2.2 他のユーザ\\n3 Amazon EC2/S3サービスにおけるHadoop\\n4 Sun Grid EngineにおけるHadoop\\n5 参考文献\\n6 脚注\\n7 関連事項\\n8 外部リンク\\nアーキテクチャ[編集]\\nHadoopは、Hadoop がサポートするファイルシステムへのアクセスを提供するHadoop Commonで構成する。ここで、「Rack Awareness」とは、サーバクラスタの地理的位置を考慮した最適化の考えである。つまり、異なる地理的位置にあるサーバ間の網伝送(network traffic)を最小にするということである。[4] 2008年6月現在、下記のファイルシステムをサポートしている。\\nHDFS: Hadoop独自のファイルシステムである。HDFSは各OSが提供するファイルシステム上で動作し、 数ペタバイトの容量まで拡張するよう設計している。\\nAmazon S3: このファイルシステムは、Amazon Elastic Compute Cloud (EC2) 環境で構築したクラスタ上で動作する。なお、このAmazon S3 ファイルシステムはRack-awarenessが考慮されておらず、すべてリモートサイトで動作する。\\nCloudStore（旧 Kosmos Distributed File System）: HDFSのようなRack-Awarenessなファイルシステム。\\nFTP: すべてのデータをFTPによりアクセス可能なリモートサーバに格納する。\\nRead-only HTTP and HTTPS.\\nHadoop分散ファイルシステム[編集]\\nHadoop分散ファイルシステム(HDFS)は大きなファイル（理想的には64MBの倍数[5]）を複数の計算機にまたがり格納することができる。HDFS はデータの複製を複数のホストに格納することで信頼性を確保しているため、各ホストはRAIDを必要としない。デフォルトのレプリケーション数3のとき、データは3つのノードに保存する。この場合、2つのデータを同じラック内のノードに、残りひとつを異なるラックに保存する。\\nHDFSはデータノード (Data node) のクラスタにより構成する。データノードはそれぞれ、HDFS独自のブロック転送プロトコルによりデータブロックを転送する。データノードはまたHTTPによりデータを提供することができ、WEBブラウザ等のクライアントからのアクセスを処理できる。データノード間はお互いに通信し、データ再配置、データコピー、冗長性維持を行うことができる。\\nHDFSはネームノード (Name node) と呼ばれる唯一の特殊なノードを必要とする。ネームノードは、HDFSにおけるsingle point of failureである。ネームノードがダウンした場合、ファイルシステムはオフラインとなる。その後ネームノードが復旧した際には、ネームノードは未実行のすべてのオペレーションをリプレイする必要がある。このリプレイ処理は、クラスタの規模が大きい場合、時に30分以上を要する場合もある。[6] 一方、HDFSはセカンダリ・ネームノードと呼ばれる機能を有している。この名前は、プライマリ・ネームノードがオフラインとなった時セカンダリ・ネームノードが代替するかのように誤解を与える。しかしながら実際は、セカンダリ・ネームノードは定期的にプライマリノードに接続し、その保存されているディレクトリ情報のスナップショットをダウンロードする。セカンダリ・ネームノードはプライマリ・ネームノードの編集ログを用い、最新のディレクトリ構造を作成する。\\nHDFSは、通常のオペレーティングシステムにマウントできないことはまた制限のひとつである。ジョブ実行の前後にはしばしばHDFSとデータの入出力が必要になるが、マウントできないため不便である。LinuxなどいくつかのUNIXシステムでは、Filesystem in Userspaceによりこの問題を解決しているものもある。\\nデータの複製を3回行うことは高コストである。コスト軽減のため、HDFSの最近のバージョンではErasure符号をサポートし、同じファイルの複数のブロックを結合しパリティブロックを生成している。HDFSではこのパリティブロックを非同期で生成することにより、複製生成数を3から2に減らしている。これにより、必要とされる物理ストレージ領域が3倍から約2.2倍に減少しているとの報告がある。\\nジョブトラッカーとタスクトラッカー: MapReduceエンジン[編集]\\nファイルシステムの上にMapReduceエンジンが動作する。MapReduceエンジンはひとつのジョブトラッカーを持ち、クライアントアプリケーションはこのジョブトラッカーに向けてMapReduceジョブを投入する。ジョブが投入されると、ジョブトラッカーはクラスタ中の利用可能なタスクトラッカーに仕事を依頼する。この時、できるだけデータに近くで仕事が行われるように努力を払う。Rack awareなファイルシステムにより、ジョブトラッカーはどのノードがデータを保持しているか、そしてどのマシンが近くにあるかを知ることができる。これによりメイン・バックボーン・ネットワークの通信トラフィックを抑える。タスクトラッカーが落ちるかタイムアウトすると、その部分のタスクは再スケジュールされる。ジョブトラッカーが落ちると、実行中の仕事は失われる。\\nHadoopバージョン0.21にはチェックポイントの機能が加えられた。ジョブトラッカーはそれまでの結果をファイルシステムに記録する。ジョブトラッカーが起動した時には、そのように記録されたデータを探す。このため中断したところから仕事を再開することができる。それ以前のバージョンのHadoopでは、ジョブトラッカーが再開した時にはすべての実行中の仕事は失われる。\\nこのアプローチには以下の欠点が知られている。\\n仕事のタスクトラッカーへの割り当てはとても単純である。各タスクトラッカーはある数の利用可能なスロットを持つ(例えば4スロット)。アクティブなMapまたはReduceタスク1つはスロットを1つ使用する。ジョブトラッカーはデータに最も近い利用可能なスロットを持つタスクトラッカーに仕事を割り当てる。このとき割り当てたマシンの実際の負荷を考慮しないので、実際には利用できないかもしれない。\\nあるタスクトラッカーがとても遅い場合、特にジョブの終りでは他のすべてが1つの遅いタスクの待ちに入り、全体のMapReduceジョブの完了が遅れてしまう。しかし、投機的実行を用いると1つのタスクを複数のスレーブ・ノードで実行することができる。\\n他のアプリケーション[編集]\\n主要なユーザ[編集]\\nYahoo!におけるHadoop[編集]\\n他のユーザ[編集]\\nYahoo! 以外にも様々な組織がHadoopを使って大規模分散システムを構築している。以下に例を挙げる:[7][8]\\nA9.com\\nFacebook\\nFox Interactive Media\\nIBM\\nImageShack\\nISI\\nJoost\\nLast.fm\\nPowerset\\nニューヨーク・タイムズ\\nRackspace\\nスカイアーチネットワークス\\nVeoh\\nMetaweb\\n楽天\\nAmazon EC2/S3サービスにおけるHadoop[編集]\\nSun Grid EngineにおけるHadoop[編集]\\nHadoopにおけるSun Grid Engine ― および於分散コンピューティング/コンピュータ・クラスター環境におけるジョブ管理システム。[9]\\n参考文献[編集]\\n日経BP出版局著 「クラウド大全 サービス詳細から基盤技術まで」2009年 ISBN10 4822283887\\n脚注[編集]\\n^ a b “Hadoop Releases”.  Hadoop.apache.org. 2013年6月16日閲覧。\\n^ Hadoop Overview\\n^ Hadoop Users List\\n^ http://hadoop.apache.org/core/docs/r0.17.2/hdfs_user_guide.html#Rack+Awareness\\n^ The Hadoop Distributed File System: Architecture and Design\\n^ Improve Namenode startup performance. \\\"Default scenario for 20 million files with the max Java heap size set to 14GB : 40 minutes. Tuning various Java options such as young size, parallel garbage collection, initial Java heap size : 14 minutes\\\"\\n^ PoweredBy\\n^ Apache HadoopやApache CassandraなどをはじめとするOSS（オープンソースソフトウエア）を活用\\n^ HDFS-Aware Scheduling With Grid Engine\\n関連事項[編集]\\nNutch\\nHBase\\nAster Data Systems\\nクラウド・コンピューティング\\n外部リンク[編集]\\nHadoop公式サイト\\n日本語訳(あしたのオープンソース研究所)\\nDatabase Landscape Map – December 2012\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Hadoop&oldid=48182025」から取得 \\nカテゴリ: JavaオープンソースApacheソフトウェア財団クラウドコンピューティング隠しカテゴリ: FLOSS関連のスタブ項目\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人���ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nAzərbaycanca\\nČesky\\nDeutsch\\nEnglish\\nEspañol\\nفارسی\\nFrançais\\nעברית\\nItaliano\\n한국어\\nമലയാളം\\nМонгол\\nPolski\\nPortuguês\\nРусский\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年6月16日 (日) 04:25 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2e"},"body":"MongoDB\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの項目の参考文献は、一次資料や記事主題の関係者による情報源に頼っています。信頼できる第三者情報源とされる出典の追加が求められています。（2013年2月）\\nMongoDB\\n開発元\\n10gen\\n初版\\n2009\\n最新版\\n2.4.1 / 2013年3月23日（3か月前） （2013-03-23）\\nプログラミング言語\\nC++\\n対応OS\\nクロスプラットフォーム\\n対応言語\\n英語\\n種別\\nドキュメント指向データベース\\nライセンス\\nGNU AGPL v3.0 (ドライバはApache license）\\n公式サイト\\nhttp://www.mongodb.org/\\nテンプレートを表示\\nMongoDB は、オープンソースのドキュメント指向データベースである。C++言語で記述されており、開発とサポートは10genによって行なわれている。[1] MongoDBはRDBMSではなく、いわゆるNoSQLと呼ばれるデータベースに分類されるものである。RDBMSのようにレコードをテーブルに格納するのではなく、「ドキュメント」と呼ばれる構造的データをJSONライクな形式で表現し、そのドキュメントの集合を「コレクション」として管理する（このデータの物理的な格納はBSONと呼ばれるJSONのバイナリ版といえる形式で行われる）。コレクションはRDBMSのような固定的なスキーマを持たない。ドキュメントには複雑な階層構造を持たせることもでき、それらの構造に含まれるフィールドを指定したクエリやインデクス生成も簡単な指定によって行える。RDBMSのように高度な結合操作を効率的に行うことはできないが、データの追加・更新・削除・クエリは高速に行うことができる。また、アプリケーションは自身の構造やデータ型に合った自然な形でデータを格納することができるため、扱うデータの特性によっては、RDBMSよりも容易かつ迅速に開発を行うことができる可能性がある。\\nMongoという名前は、英語で「ばかでかい」を意味する \\\"humongous\\\" に由来する。\\nMongoDBの開発は10genによって2007年10月から開始され、最初の公開リリースは2009年2月に行われた。[2]\\n目次\\n1 特徴\\n1.1 アドホックなクエリ\\n1.2 ネストされたフィールドのクエリ\\n1.3 インデックス\\n1.4 集約\\n1.5 ファイルストレージ\\n1.6 サーバサイドJavaScript実行\\n1.7 Cappedコレクション\\n2 デプロイ\\n2.1 言語サポート\\n2.2 レプリケーション\\n2.2.1 マスタ/スレーブ\\n2.2.2 レプリカセット\\n2.3 Sharding\\n3 管理とグラフィカルフロントエンド\\n3.1 公式ツール\\n3.2 監視\\n3.3 GUI\\n4 ライセンスとサポート\\n5 批判\\n6 有名な利用者\\n7 関連項目\\n8 References\\n9 外部リンク\\n特徴[編集]\\n特徴の一部:\\n整合的なUTF-8エンコーディング。非UTF-8データも、特殊なバイナリデータ型によって保存・取得できる。\\nクロスプラットフォームのサポート: バイナリは、Windows, Linux, OS X, Solarisで利用できる。MongoDBはほとんどのリトルエンディアンシステムで利用できる。\\n豊富なデータ型: 日付、正規表現、バイナリ型、コード、など（すべてのBSONデータ型）\\nクエリ結果にカーソルが使える\\nなど\\nアドホックなクエリ[編集]\\nMongoDBでは、任意のフィールドを好きな時にクエリできる。フィールドの完全一致に加えて、範囲をもつクエリ、正規表現検索など様々な種類のクエリが使える。ユーザ定義のJavaScript関数を述語として使うこともできる（関数がtrueを返したときにドキュメントがマッチする）。\\nクエリでは、（全フィールドをとりだす代わりに）指定したフィールドだけを取り出せる。また、ソートを行ったり、結果の数を制限したり、一部をスキップすることもできる。\\nネストされたフィールドのクエリ[編集]\\n埋め込みオブジェクトおよび配列にも「たどりつく」ことができる。以下のオブジェクトが users コレクションに挿入されているとする：\\n{\\n\\\"username\\\" : \\\"bob\\\",\\n\\\"address\\\" : {\\n\\\"street\\\" : \\\"123 Main Street\\\",\\n\\\"city\\\" : \\\"Springfield\\\",\\n\\\"state\\\" : \\\"NY\\\"\\n}\\n}\\nこのドキュメント（およびNYの住所をもつすべてのドキュメント）は、以下のクエリで取得できる:\\n> db.users.find({\\\"address.state\\\" : \\\"NY\\\"})\\n配列の要素を指定することもできる：\\n> db.food.insert({\\\"fruit\\\" : [\\\"peach\\\", \\\"plum\\\", \\\"pear\\\"]})\\n> db.food.find({\\\"fruit\\\" : \\\"pear\\\"})\\nインデックス[編集]\\nMongoDBは、追加のインデックスをサポートする。インデックスは、単一キー、複合キー、ユニーク/非ユニーク、地理空間インデクス[3]をサポートする。ネストされたフィールドもインデックスできるし、配列型をインデックスすると配列内の各要素がインデックスされる。\\nMongoDBのクエリオプティマイザはクエリの実行時にいくつかのクエリ計画を試し、最速のものを選択する。定期的に再サンプリングを行う。開発者は使用されるインデックスを `explain` 関数で見ることができ、 `hint` 関数で異なるインデックスを参照できる。\\nインデックスはいつでも作成・削除できる。\\n集約[編集]\\nアドホックなクエリに加えて、MongoDBは集約のためのいくつかのツールをサポートしている。これには、SQLのGRUOP BYに似たgroup関数や、MapReduce[4]などがある。\\nファイルストレージ[編集]\\nMondoDBは、GridFS[5]と呼ばれるプロトコルを実装しており、これを使うことで大きなファイルをデータベースに格納・取得することができる。このファイルストレージ機構はnginx[6]やlighttpd [7]のプラグインからも使用できる。\\nサーバサイドJavaScript実行[編集]\\nJavaScriptはMondoDBにおけるLingua franca(共通語)であり、クエリや集約関数(MapReduce等)で使用したり、データベースに直接送信して実行できる。\\nクエリでのJavaScriptの例:\\n> db.foo.find({$where : function() { return this.x == this.y; }})\\nデータベースに送信して実行させるコードの例:\\n> db.eval(function(name) { return \\\"Hello, \\\"+name; }, [\\\"Joe\\\"])\\nこれは \\\"Hello, Joe\\\" を返す。\\nJavaScriptの変数はデータベースに格納でき、他のJavaScriptからグローバル変数として利用できる。関数を含むすべての正当なJavaScript型を格納できるため、JavaScriptを「ストアドプロシージャ」として利用できる。\\nCappedコレクション[編集]\\nMongoDBは、Cappedコレクションと呼ばれる固定サイズのコレクションもサポートしている[8]。Cappedコレクションはサイズ（オプションで要素数も使える）を指定して作成される。capped collectionsは、挿入した順にコレクションを管理する: 指定したサイズに到達したら、古いものから順に削除される。\\nCappedコレクションでは、tailable cursor[9]と呼ばれる特殊なカーソルを利用できる。このカーソルの名前は `tail -f` に由来し、結果を返し終えてもクローズせずに待機し続けて、それ以降に追加されたドキュメントを返却しつづける。\\nデプロイ[編集]\\nMongoDBはソースファイルからビルドすることもできるが、より一般的にはバイナリパッケージからインストールされる。多くのLinuxパッケージ管理システムはMongoDBのパッケージを含んでいる: CentOSとFedora,[10] DebianとUbuntu,[11] Gentoo[12], Arch Linux。[13] 公式Webサイトから入手することもできる。[14]\\nMongoDBはメモリマップトファイルを用いるため、32-bitシステムではサイズが2GBに制限される。[15] MongoDBのサーバはリトルエンディアンのシステムのみで動作する。ただし、ほとんどのドライバはビッグエンディアンのシステムでも動作する。\\n言語サポート[編集]\\nMongoDBは、以下の言語に公式ドライバを提供している:\\nC言語[16]\\nC++[17]\\nC#[18]\\nHaskell[19]\\nJava[20]\\nJavaScript[21]\\nLisp[22]\\nPerl[23]\\nPHP[24]\\nPython[25]\\nRuby[26]\\nScala[27]\\n非公式のドライバも大量に存在する: C#と.NET,[18] ColdFusion,[28] Delphi,[29] Erlang,[30][31] Factor,[32] Fantom,[33] Go,[34] JVM languages (Clojure, Groovy,[35] Scala, etc.),[36] Lua,[37] node.js,[38] HTTP REST,[39] Ruby,[40] Racket,[41] Smalltalk[42]\\nレプリケーション[編集]\\nMongoDBはマスタ/スレーブのレプリケーションをサポートする。マスタは書き込みと読み込みを実行できる。スレーブは、マスタからデータをコピーして、読み込みとバックアップのために利用できる（書き込みはできない）。\\nMondoDBは、各操作について、最低でも N 個のサーバにレプリケートされることを開発者に保証することができる。\\nマスタ/スレーブ[編集]\\n操作はマスタに対して行われ、スレーブはデータに対するすべての変更をレプリケートする。\\n例: マスタ/スレーブのペアをローカルで起動する:\\n$ mkdir -p ~/dbs/master ~/dbs/slave\\n$ ./mongod--master --port 10000 --dbpath ~/dbs/master\\n$ ./mongod--slave --port 10001 --dbpath ~/dbs/slave --source localhost:10000\\nレプリカセット[編集]\\nレプリカセットはマスタ/スレーブに似ているが、マスタがダウンしたときにスレーブ間で自動投票を行って、スレーブの1つを新たなマスタにする機能を持つ。\\nSharding[編集]\\nMongoDBは、Sharding[43]というシステムによって水平スケーリングが可能である。これはBigTableやPNUTSのスケーリングモデルに非常に良く似ている。開発者はshardキーを選択し、このキーがデータをどのように分散させるかを決める。データ中のキーを元にデータを分散させるshardが決められる。（一つのshardは1つ以上のスレーブを持つマスタである）\\nアプリケーションはいくつかの操作を行う際に、shardingされたクラスタと対話していることを認識している必要がある。例えば \\\"findAndModify\\\" クエリは、shardされたコレクションからクエリをするときにshardキーを含む必要がある。[44] アプリケーションは、`mongos`と呼ばれる特別なルーティングプロセスと対話する。このプロセスは、shardクラスタを単一のMongoDBサーバに見えるようにする。`mongos`プロセスはどのデータがどのshardにあるかを知っており、クライアントのリクエストを適切にルーティングする。すべてのリクエストはこのプロセスを通して流れる: リクエストやレスポンスを転送するだけでなく、必要に応じてマージやソートも行う。 `mongos`プロセスはいくつでも実行できるが、通常は1つのアプリケーションに対して1つが推奨される。\\n管理とグラフィカルフロントエンド[編集]\\n公式ツール[編集]\\n最もパワフルで便利な管理ツールはデータベースシェルの mongo である。このシェルは、データベースの内容を閲覧・挿入・削除・更新する機能を提供すると同時に、レプリケーション情報を取得したり、shadingを設定したり、サーバを停止したり、JavaScriptを実行したりすることができる。mongoは、SpiderMonkeyの上に構築されているため、MondoDBサーバに接続できると同時に、完全なJavaScriptシェルでもある。\\n管理情報にはWebベースのadminインタフェースを通してもアクセスできる。これは、現在のサーバ情報を送信するシンプルなHTMLのWebページである。デフォルトでは、このインタフェースにはデータベースのポートの1000番上のポート (http://localhost:28017) からアクセスできる。--norestオプションによってこの機能を無効化できる。\\nmongostat は、直近の統計情報のシンプルな一覧を表示するコマンドラインツールである。挿入された数、更新された数, 削除された数, クエリの数, 実行されたコマンドの数, データベースがロックされた時間のパーセンテージ、メモリの使用状況などを表示する。\\nmongosniff は、MongoDBのネットワークトラフィックを覗くツールである。\\n監視[編集]\\nMongoDBを監視するためのプラグインが存在する:\\nmunin[45]\\nganglia[46]\\nscout[47]\\ncacti[48]\\nGUI[編集]\\nデータの可視化を助けるいくつかのGUIが開発されている:\\nFang of Mongo[49] - DjangoとjQueryで作られたWebベースのUI\\nFuton4Mongo[50] - CouchDBのFuton Webインタフェースのクローン\\nMongo3[51] - Rubyベースのインタフェース\\nMongoHub[52] - MongoDBを管理するためのネイティブなOS Xアプリケーション\\nOpricot[53] - PHPで書かれたWebベースのMongoDBシェル\\nDatabase Master - WindowsベースのMongoDB管理ツール。RDBMSもサポートする\\nBI Studio - WindowsベースのMongoDB管理ツール。RDBMSもサポートする\\nRockMongo - PHPベース\\nライセンスとサポート[編集]\\nMongoDBは、GNU Affero General Public Licenseライセンスの下で利用できる。言語ドライバはApache Licenseライセンスの下で利用できる。[54]\\n批判[編集]\\nデータの永続性が保証されないという指摘がある[55]。\\n有名な利用者[編集]\\nMTV Networks[56]\\ncraigslist[57]\\nDisney Interactive Media Group[58]\\nWordnik[59]\\ndiaspora[60]\\nShutterfly[61]\\nfoursquare[62]\\nbit.ly[63]\\nThe New York Times[64]\\nSourceForge[65]\\nBusiness Insider[66]\\nEtsy[67]\\nCERN LHC[68]\\nThumbtack[69]\\nAppScale[70]\\nUber[71]\\n関連項目[編集]\\nポータル Free software\\nドキュメント指向データベース\\nNoSQL\\nCouchDB\\nReferences[編集]\\n^ MongoDB website\\n^ MongoDB Blog - March 2010\\n^ Geospatial indexes\\n^ MapReduce\\n^ GridFS\\n^ NGINX\\n^ lighttpd\\n^ capped collections\\n^ [1]\\n^ CentOS and Fedora\\n^ Debian and Ubuntu,\\n^ Gentoo\\n^ Arch Linux\\n^ official website\\n^ [2]\\n^ C driver\\n^ C++ driver\\n^ a b C# driver\\n^ Haskell driver\\n^ Java driver\\n^ JavaScript driver\\n^ [3]\\n^ Perl driver\\n^ PHP driver\\n^ Python driver\\n^ Ruby driver\\n^ Casbah, the officially supported Scala Driver for MongoDB\\n^ ColdFusion driver\\n^ Delphi\\n^ Emongo Erlang driver\\n^ Erlmongo Erlang driver\\n^ Factor driver\\n^ Fantom driver\\n^ gomongo Go driver\\n^ GMongo\\n^ JVM language center\\n^ LuaMongo\\n^ node.js driver\\n^ REST interface\\n^ rmongo\\n^ [4]\\n^ Smalltalk driver\\n^ sharding\\n^ [5]\\n^ Munin plugin\\n^ Ganglia plugin\\n^ Scout slow-query plugin\\n^ Cacti plugin\\n^ Fang of Mongo\\n^ Futon4Mongo\\n^ Mongo3\\n^ MongoHub\\n^ Opricot\\n^ The AGPL - MongoDB Blog: May 5, 2009\\n^ Broken by Design: MongoDB Fault Tolerance\\n^ “MongoDB Powering MTV's Web Properties” (2011年5月10日). 2011年7月6日閲覧。\\n^ “MongoDB live at craigslist” (2011年5月16日). 2011年7月6日閲覧。\\n^ “Disney Central Services Storage: Leveraging Knowledge and skillsets” (2011年5月24日). 2011年7月6日閲覧。\\n^ “12 Months with MongoDB” (2010年10月25日). 2011年5月24日閲覧。\\n^ “MongoDB - diasporatest.com” (2010年12月23日). 2010年12月23日閲覧。\\n^ “Implementing MongoDB at Shutterfly - Presentation at MongoSF” (2010年4月30日). 2010年6月28日閲覧。\\n^ “MongoDB at foursquare - Presentation at MongoNYC” (2010年5月21日). 2010年6月28日閲覧。\\n^ “bit.ly user history, auto-sharded - Presentation at MongoNYC” (2010年5月21日). 2010年6月28日閲覧。\\n^ Maher, Jacqueline (2010年5月25日). “Building a Better Submission Form”. NYTimes Open Blog. http://open.blogs.nytimes.com/2010/05/25/building-a-better-submission-form/ 2010年6月28日閲覧。 \\n^ “How Python, TurboGears, and MongoDB are Transforming SourceForge.net”.  PyCon 2010 (2010年2月20日). 2010年6月28日閲覧。\\n^ “How This Web Site Uses MongoDB”.  Business Insider (2010年11月6日). 2010年6月28日閲覧。\\n^ “MongoDB at Etsy”.  Code as Craft: Etsy Developer Blog (2010年5月19日). 2010年6月28日閲覧。 [リンク切れ]\\n^ “Holy Large Hadron Collider, Batman!”.  The MongoDB NoSQL Database Blog (2010年6月3日). 2010年8月3日閲覧。\\n^ “Building Our Own Tracking Engine With MongoDB”.  Thumbtack Blog (2011年5月3日). 2011年5月15日閲覧。\\n^ http://appscale.cs.ucsb.edu/datastores.html#mongodb\\n^ “Node.js Meetup: Distributed Web Architectures ? Curtis Chambers, Uber | JoyentCloud:”. 2011年8月12日閲覧。\\n外部リンク[編集]\\nMongoDB公式ページ「英語」\\nMongoDBドキュメンテーション公式ページ「日本語」\\nMongoDBの薄い本「入門の全訳」\\nこの項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。\\n「http://ja.wikipedia.org/w/index.php?title=MongoDB&oldid=47913961」から取得 \\nカテゴリ: NoSQLデータベースオープンソースデータベース管理システムドキュメント指向データベース分散システム隠しカテゴリ: 外部リンクがリンク切れになっている記事/2010年10月内容の精度・確度に欠けている可能性のある記事ソフトウェア関連のスタブ\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nCatalà\\nDeutsch\\nEnglish\\nEspañol\\nفارسی\\nFrançais\\nMagyar\\nՀայերեն\\nItaliano\\nNederlands\\nPolski\\nPortuguês\\nРусский\\nTürkçe\\nУкраїнська\\n中文\\nリンクを編集\\n最終更新 2013年5月21日 (火) 20:46 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2f"},"body":"Apache Tomcat\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache Tomcat\\n開発元\\nApache Software Foundation\\n最新版\\n7.0.42 / 2013年7月2日（7日前） （2013-07-02） [1]\\nプログラミング言語\\nJava\\n対応OS\\nクロスプラットフォーム\\nプラットフォーム\\nJavaプラットフォーム\\nサポート状況\\n開発中\\n種別\\nServlet container\\nHTTP webサーバー\\nライセンス\\nApache License 2.0\\n公式サイト\\ntomcat.apache.org\\nテンプレートを表示\\nApache Tomcat (アパッチ トムキャット) は、Java Servlet や JavaServer Pages (JSP) を実行するためのサーブレットコンテナ（サーブレットエンジン）である。Apache License, Version 2.0を採用したオープンソースソフトウェアであり、商用利用も多い[要出典]。バージョン 7.0 は、Java Servlet 3.0、JavaServer Pages 2.2対応で、Java 6 以降が必要[2]。\\n2005年以降、Apacheソフトウェア財団のトップレベルプロジェクトのひとつであるApache Tomcat Project 内で開発されている [3]。それ以前はかつて存在していたJakartaプロジェクト内で開発されていた。\\n目次\\n1 構成\\n2 リファレンス実装としてのApache Tomcat\\n3 HTTPサーバーとの連携\\n4 脚注\\n5 外部リンク\\n構成[編集]\\nTomcat 5.0から、Jasper2を含む。\\nCatalina - Servlet コンテナ\\nCoyote - HTTPサーバー\\nJasper, Jasper2 - JavaServer Pages\\nリファレンス実装としてのApache Tomcat[編集]\\nサーブレットやJSPのオフィシャルなリファレンス実装に使用されてはいるが、リファレンス実装そのものではない。\\nHTTPサーバーとの連携[編集]\\nApache Tomcat は安定して動作し、静的コンテンツのHTTPサーバーとしても使えるので単体で用いることもできる。また、Tomcat 以外のHTTPサーバーがHTTPリクエストを受け付け、必要に応じてサーブレットコンテナにリクエストを渡すという構成でHTTPサーバーと連携させて用いることもできる。ただし、別 HTTP サーバーとコネクタ連携をすると、Advanced IO (Comet) など一部の機能が使えなくなる。例えば、Apache HTTP Server とコネクタモジュールを用いて連携を行う場合、Apache Tomcat 側では mod_jk をコネクタとして配布している。また、Apache 2.2以降は mod_jk とは別な方法として、mod_proxy_ajp モジュールを用いる方法もある。\\n脚注[編集]\\n[ヘルプ]\\n^ “Tomcat 7.0のドキュメントのページ”. 2013年7月9日閲覧。 “Apache Tomcat 7.0.42のPGP署名”. 2013年7月9日閲覧。\\n^ “Apache Tomcat Versions”. 2013年3月28日閲覧。\\n^ “The Jakarta Site - News & Status - 2005 Oct-Dec”. 2013年7月9日閲覧。\\n外部リンク[編集]\\nApache Tomcat\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_Tomcat&oldid=48436459」から取得 \\nカテゴリ: Apacheソフトウェア財団オープンソースJavaWebサーバ隠しカテゴリ: 出典を必要とする記述のある記事/2013年3月\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nCatalà\\nČesky\\nDeutsch\\nEnglish\\nEsperanto\\nEspañol\\nFrançais\\nעברית\\nMagyar\\nItaliano\\nҚазақша\\n한국어\\nLietuvių\\nLatviešu\\nമലയാളം\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nРусский\\nSvenska\\nதமிழ்\\nతెలుగు\\nไทย\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年7月9日 (火) 08:16 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b30"},"body":"NoSQL\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nNoSQL（一般に”Not only SQL”と解釈される）とは、リレーショナルデータベース管理システム (RDBMS) 以外のデータベース管理システムを指すおおまかな分類語である。リレーショナルデータベースをやみくもに使用してきた長い歴史を打破し、それ以外のデータベースの利用・発展を促進させようとする運動の標語としての意味合いを持つ。関係モデルではないデータストアの特徴として、固定されたスキーマに縛られないこと、関係モデルの結合操作を利用しないこと（場合によっては単にそのような機能が欠落しているだけ）、水平スケーラビリティが確保しやすい事が多いこと、トランザクションを利用できないものが多いことなどが挙げられる。学術的な世界では、この種のデータベースのことを構造型ストレージ (英: structured storage) と呼ぶことが多い[1][2][3][4]。\\nNoSQL系データベース管理システムには、データの格納および取得が高度に最適化されているものが多い。その最適化のために機能性を最小限にしているものもある。「値」およびそれを取得するための「キー」だけを格納できるKey-Value型データベースは、その最たる例である。\\nNoSQL系データベース管理システムが有用な場面は、関係モデルを必要としないデータを扱う時や、大量のデータを扱う時である。用途は多様であり、数百万のkey-valueペアを格納したり、数個程度の連想配列を格納したり、数百万の構造的データを格納したりと、様々に使われる。この構造は、大規模なデータを統計的に解析したり、増えつづける情報をリアルタイムに解析するのにも便利である。\\n産業界での有名な実装として、GoogleのBigTable、アマゾンのAmazon DynamoDBなどがある。オープンソースの実装も数多く存在し、例えばMongoDB、 Redis、Apache HBase、Apache Cassandraなどがある。\\n目次\\n1 歴史\\n2 アーキテクチャ\\n3 分類\\n4 オープンソースのプロジェクト一覧\\n5 参考文献\\n6 関連項目\\n歴史[編集]\\nNoSQLという用語は1998年、SQLインターフェイスを持たない軽量な関係データベースのオープンソースソフトウェアの名前として最初に用いられた。その著者Carlo StrozziはNoSQL運動について、「関係モデル全体と一線を画すものであるから、『NoREL』などと名づけられるべきだった」と主張している[5]。この用語は、Last.fmのJohan Oskarssonの呼びかけによって2009年初頭に開催されたオープンソースの分散データベースについての会合において、Rackspace（英語版）の従業員Eric Evansによって再導入された[6]。この名前はMySQL、MS SQL、PostgreSQLなど関係データベースのシステムで広く用いられていた命名法を参照して付けられたものであり、ACID保証を提供しないような非関係型の分散データストアの勃興を表現する意図が込められていた。\\nNoSQL運動が普及するに従い、その名前のもつネガティブな印象（SQLは不要である、など）が問題となり議論が起こっている。Eric EvansはNoSQLをNot only SQLのバクロニムとして理解するのが好ましいとしている[7]。\\nアーキテクチャ[編集]\\n現代的な関係データベースは、小規模の高頻度なトランザクションか、巨大だが書き込みをほとんど伴わないトランザクションに最適化されて設計されているため、近年必要とされてきている大規模データに基づく (英: data-intensive) 応用事例では性能が劣化してしまう[8]。そのような応用の例として、検索のための文書のインデキシング、トラフィックの高いウェブサイトのサーバ、ストリーミングデータの配布などがあり、Diggのgreen badge[9]、Facebookのインボックスの検索、eBayのシステム全体などがその実例である。\\nNoSQLのアーキテクチャにおいては、結果整合性のみを保証するなどして一貫性の保証を弱く設計したり、トランザクションをひとつのデータアイテムに限るという制限を設けたりすることが多い。補助的なミドルウェアの層を付加することによって完全なACID保証を提供している場合もある[10]。\\nいくつかのNoSQLシステムは分散アーキテクチャを採用している。そのようなシステムでは、多くの場合は分散ハッシュテーブルを用いて、データを複数のサーバーに、冗長性を持たせながら配置する。これにより、サーバーを追加するだけでシステムを容易にスケールアップさせることができ、障害への耐性も強くなる[11]。\\n分類[編集]\\nNoSQL には、主要なものとして、以下のものがある[12]。\\nキー・バリュー型 (Key Value Store) - キーに対してバリュー（値）という単純な構造。Amazon DynamoDB, Basho Riak, Redisなど。大半はバリューとして単純なバイナリデータ（BLOB）のみが格納できるが、 Redisのようにリスト、マップ、ソート済みセットといったリッチなデータ構造をサポートするものもある。またバリューに加えて、タグやメタデータと呼ばれる追加情報が格納できるものも多い。日本発のものには okuyama, Hibari などがある。\\nソート済みカラム指向 - 行キーに対してカラム（名前と値の組み合わせ）の集合を持つ。行ごとに好きな名前のカラムを好きな数だけ格納できる。カラムはカラム名によってソートされるため、例えばカラム名に時刻を使うことで１行の中に時系列のデータを格納することできる。Apache Cassandra, Apache HBaseなど。\\nドキュメント指向 - XMLやJSONといった、 スキーマレスでデータ構造が柔軟なもの。MongoDB, Apache CouchDB など。XMLデータベースなどのシステムでは、XQueryを利用できるものもある。\\nオープンソースのプロジェクト一覧[編集]\\nApache Cassandra - 分散データベース、ソート済みカラム指向型\\nApache CouchDB - ドキュメント指向型\\nApache HBase - 分散データベース、ソート済みカラム指向型\\nArangoDB - multi-model database\\nBasho Riak - 分散データベース、キー・バリュー型\\nChordless\\nDb4o - オブジェクトデータベース（Javaオブジェクトなどの格納）\\nGT.M\\nHibari - 分散データベース、キー・バリュー型（日本発）\\nHypertable - 分散データベース、ソート済みカラム指向型\\nMemcachedb\\nMnesia - 分散データベース\\nMongoDB - 分散データベース、ドキュメント指向型\\nokuyama - 分散データベース、キー・バリュー型（日本発）\\nProject Voldemort - 分散データベース、キー・バリュー型\\nRedis - インメモリ・データベース、キー・バリュー型（リスト、マップ、ソート済みセットなど）\\nSimpleDB\\nNeo4j - グラフ型\\nDEX\\nBaseX\\neXist\\nAllegroGraph\\nOrientDB\\nInfiniteGraph - グラフ型\\nSones GraphDB\\nInfoGrid\\nHyperGraphDB\\n参考文献[編集]\\n^ Hamilton, James (2009年11月3日). “Perspectives: One Size Does Not Fit All”. 2009年11月13日閲覧。\\n^ Lakshman, Avinash; Malik, Prashant. Cassandra — A Decentralized Structured Storage System. Cornell University. http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf 2009年11月13日閲覧。. \\n^ Chang, Fay; Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A. Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes, and Robert E. Gruber. Bigtable: A Distributed Storage System for Structured Data. Google. http://labs.google.com/papers/bigtable-osdi06.pdf 2009年11月13日閲覧。. \\n^ Kellerman, Jim. “HBase: structured storage of sparse data for Hadoop”. 2009年11月13日閲覧。\\n^ “NoSQL Relational Database Management System: Home Page”.  Strozzi.it (2007年10月2日). 2010年3月29日閲覧。\\n^ “NOSQL 2009”.  Blog.sym-link.com (2009年5月12日). 2010年3月29日閲覧。\\n^ “NoSQL: What's in a name?”.  Eric Evans's Weblog (2009年10月30日). 2010年5月31日閲覧。\\n^ Agrawal, Rakesh et al. (2008). “The Claremont report on database research”. SIGMOD Record (ACM) 37 (3): 9--19. doi:http://doi.acm.org/10.1145/1462571.1462573. ISSN 0163-5808. \\n^ “Looking to the future with Cassandra | Digg About”.  About.digg.com (2009年9月9日). 2010年3月29日閲覧。\\n^ 例：“CloudTPS: Scalable Transactions for Web Applications in the Cloud”.  Globule.org. 2010年3月29日閲覧。\\n^ “Cassandra: Structured Storage System over a P2P Network (PDF)”. 2010年3月29日閲覧。\\n^ Database Landscape Map – December 2012\\n関連項目[編集]\\n構造型ストレージ（英語版）\\nデータベースマネジメントシステムの一覧（英語版）\\nTriplestore（英語版）\\nCAP定理\\n「http://ja.wikipedia.org/w/index.php?title=NoSQL&oldid=46776029」から取得 \\nカテゴリ: データベースデータベース管理システムNoSQLデータベースクラウドコンピューティング\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nAzərbaycanca\\nDeutsch\\nEnglish\\nEspañol\\nفارسی\\nSuomi\\nFrançais\\nMagyar\\nBahasa Indonesia\\nItaliano\\nLatina\\nമലയാളം\\nNederlands\\nOccitan\\nPortuguês\\nРусский\\nTürkçe\\n中文\\nリンクを編集\\n最終更新 2013年3月20日 (水) 03:47 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b32"},"body":"Hibari (dbms)\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nHibari\\n開発元\\nHibari developers\\n初版\\n2010年7月\\n最新版\\nv0.1.10 / 2013年2月4日（4か月前） （2013-02-04）\\nプログラミング言語\\nErlang\\n対応OS\\nクロスプラットフォーム\\n対応言語\\n日本語、英語\\nサポート状況\\n活発\\n種別\\n分散キー・バリューストア、 NoSQL\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttps://github.com/hibari/hibari\\nテンプレートを表示\\nポータル FLOSS\\nHibari（ひばり）はデータの強い整合性と高可用性を保証するスケールアウト型分散キー・バリューストア。NoSQLデータベースに分類される。東京に本社を置くクラウディアン社（旧ジェミナイ・モバイル・テクノロジーズ）が、モバイル・メッセージングに適したデータベースとして2005年から開発を始め、2010年7月27日にオープンソースソフトウェアとして公開した。[1] [2]　日本の大手Webメールのストレージとして採用された実績がある\\nHibariは漢字で「雲雀」と書き「クラウドの小鳥」を表す。クラウドコンピューティングに適し、SNS（ソーシャルネットワーク）のような、わずか１日でテラバイトもしくはペタバイト規模のデータを生み出すようなサービスで使用できる。\\n目次\\n1 特徴\\n2 クライアントインターフェイス\\n3 外部リンク\\n4 参考文献\\n特徴[編集]\\nHibariはノード間のデータ複製にチェイン・レプリケーション方式[3][4][5]を採用し、データの持続性や複製されたデータ間の強い整合性を保証する。他の多くの NoSQL と異なり、マイクロトランザクションと呼ばれる限られた範囲のキーに対するアトミックなトランザクションをサポートする。Hibariはデータ操作のレイテンシ（遅延時間）が短く、特にRead操作と200KB前後の大きなバリューの扱いにおいて、他の多くのスケールアウト型 NoSQLよりも高い性能を発揮する[6]。\\nHibariは一般的なIAサーバー（x86サーバー）だけでなく、ARMアーキテクチャのスケールアウト型サーバーなどでも動作する。サービスの稼働中にサーバーノードを追加することで、処理性能とデータ格納容量をリニアにスケールさせることができ、ある商用サービスでは1つのHibariクラスタで約60台のIAサーバーが用いられている。Hibariクラスタの上限台数ははっきりとしていないが、ノード間の通信帯域がボトルネックになるケースが多い。2013年時点の標準的なサーバーハードウエア構成では、事実上の上限は250台程度と考えられている。\\nHibariは分散システムに適したプログラミング言語Erlangで書かれており、高負荷時でも高い安定性を誇る。Hibariの各ノードは数年間無停止で稼働できることが実運用で確認されており、ソフトウェアのアップグレードもサービス無停止で行える。またJavaで書かれたNoSQLと異なり、64GB程度の大容量のRAMを搭載したサーバーでも、256MB程度の小容量のRAMを搭載した組み込み向けハードウェアでも良好に動作する。\\nクライアントインターフェイス[編集]\\nHibariはクライアントAPIとして Amazon S3、JSON-RPC、Universal Binary Protocol に対応し、Apache Thrift に対応する予定もある。またプログラミング言語 Erlang からのアクセスにも対応している。\\nHibariにアクセスできる言語には Java、C言語、C++、Python、Ruby などがある。\\n外部リンク[編集]\\nHibariプロジェクトホームページ\\nHibari アプリケーション開発者ガイド\\n講義資料：実機によるRiakとHibariのNOSQLハンズオン\\n参考文献[編集]\\n^ 日経コンピュータ ニュース：ジェミナイ、独自開発キー・バリュー型データストア「Hibari」をオープンソース化\\n^ クラウディアン プレスリリース：Big Dataに最適なデータベース、Hibari(雲雀)のオープンソース化について\\n^ クラウディアン製品情報：Hibari NoSQLデータベース\\n^ Chain Replication for Supporting. High Throughput and Availability（PDF形式）\\n^ Chain Replication in Theory and in Practice（PDF形式）\\n^ Hibari White Paper（PDF形式）\\n「http://ja.wikipedia.org/w/index.php?title=Hibari_(dbms)&oldid=46687164」から取得 \\nカテゴリ: クラウドコンピューティングデータベース管理システムNoSQLデータベース分散処理\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nリンクを編集\\n最終更新 2013年3月16日 (土) 02:26 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b33"},"body":"Apache Axis2\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache Axis2\\n開発元\\nApache Software Foundation\\n最新版\\n1.6.2(Java) / 2012年4月17日（14か月前） （2012-04-17）\\n1.6.0(C言語) / 2009年4月20日（4年前） （2009-04-20）\\nプログラミング言語\\nJava、C言語\\n対応OS\\nクロスプラットフォーム\\n種別\\nWebサービス\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttp://ws.apache.org/axis2\\nテンプレートを表示\\nApache Axis2（アパッチ・アクシス・ツー）は、JavaとXML技術に基づいたWebサービスのフレームワーク。Apacheプロダクトのひとつ。\\n概要[編集]\\nApache Axis（以下、Axis1）ではWS-ReliableMessagingやWS-Security、WS-AddressingなどのAxis1登場後に制定されたプロトコルへの対処やWSDLなどへの対応が求められていたが、Axis1では柔軟性がないため対応できず放棄された。そして1から書き直されたのがAxis2である。SOAPフレームワークを取り扱うApacheプロダクトとしてはApache SOAPから数えること3代目である。\\n基本的には内部構造が大幅にブラッシュアップされたAxis1の拡張である。\\n外部リンク[編集]\\nApache Axis2（英語）\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\nこの「Apache Axis2」はFLOSSに関連した書きかけ項目です。この記事を加筆して下さる協力者を求めています（Portal:FLOSS）。\\n「http://ja.wikipedia.org/w/index.php?title=Apache_Axis2&oldid=46752899」から取得 \\nカテゴリ: Apacheソフトウェア財団JavaXML隠しカテゴリ: FLOSS関連のスタブ項目\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nペ���ジ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nEnglish\\nEspañol\\nItaliano\\n中文\\nリンクを編集\\n最終更新 2013年3月19日 (火) 22:32 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b34"},"body":"Apache CouchDB\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache CouchDB\\nCouchDB's Futon Administration Interface, User database\\n作者\\nDamien Katz, Jan Lehnardt, Noah Slater, Christopher Lenz, J. Chris Anderson, Paul Davis, Adam Kocoloski, Jason Davies, Benoît Chesneau, Filipe Manana, Robert Newson\\n開発元\\nApache Software Foundation\\n初版\\n2005\\n最新版\\n1.2.0 / 2012年4月6日（14か月前） （2012-04-06）\\nプログラミング言語\\nErlang\\n対応OS\\nクロスプラットフォーム\\n対応言語\\nEnglish\\nサポート状況\\nActive\\n種別\\nドキュメント指向データベース\\nライセンス\\nApache License 2.0\\n公式サイト\\ncouchdb.apache.org\\nテンプレートを表示\\nApache CouchDB とは、ドキュメント指向のオープンソースデータベース。主に、Erlangで書かれている。NoSQL のグループに属し、複数台にスケールするように設計されている。Apache CouchDB は Couchbase と Cloudant によってサポートされている。\\n機能[編集]\\nドキュメントストレージ\\nACID セマンティックス\\nMap/Reduce ビューとインデックス\\n分散アーキテクチャとレプリケーション\\nREST API\\n結果整合性\\n外部リンク[編集]\\n公式ウェブサイト\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_CouchDB&oldid=46753800」から取得 \\nカテゴリ: NoSQLデータベースデータベース管理システムドキュメント指向データベースApacheソフトウェア財団\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nČesky\\nDeutsch\\nEnglish\\nEspañol\\nفارسی\\nFrançais\\nPolski\\nPortuguês\\nРусский\\nУкраїнська\\nリンクを編集\\n最終更新 2013年3月19日 (火) 22:48 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b31"},"body":"PostgreSQL\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nPostgreSQL\\n開発元\\nPostgreSQL Global Development Group\\n最新版\\n9.2.4 / 2013年4月4日（3か月前） （2013-04-04）\\n最新評価版\\n9.3 beta 2 / 2013年6月27日（9日前） （2013-06-27）\\nプログラミング言語\\nC\\n対応OS\\nクロスプラットフォーム\\n種別\\nオブジェクト関係データベース\\nライセンス\\nThe PostgreSQL License\\n公式サイト\\nwww.postgresql.org\\nテンプレートを表示\\nPostgreSQL（ぽすとぐれすきゅーえる: 発音例）は、BSDライセンスに類似するライセンス[1]により配布されているオープンソースのオブジェクト関係データベース管理システム (ORDBMS) である。その名称は Ingres の後継を意味する「Post-Ingres」に由来している。単純に「Postgres」や「ポスグレ」と呼称されることも多い。\\n目次\\n1 概要\\n1.1 市場シェア\\n1.2 プラットフォーム\\n2 特徴\\n2.1 関数\\n2.2 インデックス\\n2.3 トリガ\\n2.4 ルール\\n2.5 データ型\\n2.6 ユーザ定義オブジェクト\\n2.7 バキューム\\n2.8 パーティショニング\\n2.9 全文検索\\n2.10 レプリケーション\\n2.11 その他の特徴\\n3 性能\\n3.1 CPU スケーラビリティ\\n3.2 更新処理\\n3.3 ベンチマーク\\n4 周辺ツール\\n4.1 管理ツール\\n4.1.1 psql\\n4.1.2 pgAdmin\\n4.1.3 phpPgAdmin\\n4.1.4 その他\\n4.2 レプリケーション・アドオン\\n4.3 接続インタフェース\\n5 歴史\\n5.1 バージョン履歴\\n6 受賞\\n7 脚注\\n8 参考書籍\\n9 外部リンク\\n概要[編集]\\nPostgreSQLはIllustraや、Illustraを買収しその技術を採りいれたInformixとともにオブジェクト関係データベース管理システムを実装してきた。[2] 問い合わせ言語には SQL を用いており、SQL92, 99の大部分と、2003, 2008の一部をサポートしている。(一覧 サポートあり / なし)\\n市場シェア[編集]\\n世界的な利用状況を見ると、2012年の時点ではオープンソースDBの中でのそれぞれのシェアを考えると、MySQL系 70%（Mysql56%、MariaDB 14%）、MongoDB 15%となり、PostgreSQLが占めるシェアは14%程度である。[1]\\n日本国内シェアについてはMySQL系 66%（Mysql50%、MariaDB 16%）、PostgreSQL 8% と、世界的なシェアとは状況が異なる。[2]\\nプラットフォーム[編集]\\nUNIX系列、Linux、Microsoft Windows、OS/2 など多くのOSで動作する。Windowsにおいては、バージョン7.4以前はCygwinを必要としたが、バージョン8.0以降はネイティブで動作する。\\n32ビット / 64ビット の両アーキテクチャ上で動作する。32ビット版では共有バッファサイズが最大2GBに制限されるが、64ビット版では上限は無い。\\n配布形態は、ソースコードや RPM の他、EnterpriseDB 社よりGUIインストーラが提供されている。このパッケージにはGUIの管理ツールであるpgAdminやドライバ等の追加インストーラが同梱されている。\\n特徴[編集]\\n関数[編集]\\n関数（ストアドファンクション）によりサーバで実行される処理のまとまりを定義できる。 関数の定義には SQL の他、分岐やループをサポートする下記の言語で実装することが可能である。 言語によっては関数をデータベーストリガとして実行することもできる。\\nPL/pgSQL\\nOracle Databaseで用いられるPL/SQLを参考にして実装されたビルトイン言語。\\nPL/PSM\\nSQL:2003 規格の SQL/PSM に則った構文を持つ。[3]\\nスクリプト言語\\nPL/Perl, PL/php, PL/Python, PL/Ruby, PL/sh, PL/Tcl, PL/Lua\\nコンパイラ言語\\nC言語, PL/Java\\n統計処理言語\\nPL/R\\nPostgreSQL は行を返却する関数を定義することができる。 関数の出力は複数の行であり、クエリの中でテーブルと同様に扱うことができる。\\n実行するユーザまたは定義したユーザのどちらの権限で実行されるかを指定して関数を定義できる。\\nインデックス[編集]\\nPostgreSQL は組み込みで以下のインデックスをサポートしている。 また、ユーザ定義インデックスを追加することもできる。\\nB+木\\nハッシュテーブル\\nGiST (汎用検索ツリー, 多次元木)\\nGIN (汎用転置インデックス)\\nPostgreSQL のインデックスには以下の特徴がある。\\n必要に応じて逆順でスキャンできる。逆順スキャン用のインデックスを別に定義する必要は無い。\\n式インデックス (関数インデックス) を定義できる。複数の列の値を引数に取る関数の結果をインデックス化する。\\n部分インデックス (条件付きインデックス) を定義できる。条件を指定し、条件に適合する行のみをインデックス化することで、インデックスのサイズを縮小できる。\\nクエリオプティマイザ (planner) は複数のインデックスを同時に使用するクエリ実行計画を作成できる。複数のインデックスの結果をメモリ上のビットマップとして併せ、そのビットマップに対応する行をテーブルから取得する。\\nトリガ[編集]\\nデータベーストリガは SQL データ操作言語 (SQL DML) の文 (INSERT, UPDATE / UPDATE OF, DELETE, TRUNCATE) を実行した際に呼び出される。 利用例として、INSERT 文で挿入される値が妥当かの検証がある。 トリガが実行される条件は WHEN 句で与えることができる。\\nトリガはテーブルに対してのみ定義できる。 ビューに対するトリガが必要な場合には、代わりにルールを使用する。 複数のトリガが定義されている場合、アルファベット順に実行される。\\nトリガで実行される処理は関数として定義する。 トリガ用の関数の定義には SQL 関数は使用できないが、PL/pgSQL やその他の多くの関数用言語を使うことができる。\\nルール[編集]\\nルールにより SQL の内部表現である「クエリ木」を書き換えることができる。 一般的なルールの用途は更新可能ビューを実現することであり、標準 SQL で規定される \\\"INSTEAD OF\\\" トリガ の代わりに用いられる。\\nデータ型[編集]\\n多くのデータ型が利用できる。\\n配列 / 複合型\\n任意の精度を持つ数値\\n可変長文字列 / 可変長バイト列\\n日時, 日付, 時刻, 時間差分 (タイムゾーンの有無を指定可能)\\nブーリアン型\\n幾何型（点、線分、円、矩形、多角形）\\nIPv4 / IPv6 アドレス, MAC アドレス\\nXML 型、UUID 型, 列挙型（8.3以降）\\n可変長文字列と可変長バイト列には最大で 1GB を格納できる。一定のサイズを上回るデータ値は TOAST と呼ばれる機能により自動的に圧縮され別領域に配置される。そのため、ページサイズ (通常8KB) を上回るサイズの行であっても保存できる。\\nさらに、ユーザがデータ型を追加することもでき、それに対してインデックスを作成することもできる。 利用例として、GIS 用の型を GiST インデックスで検索可能な PostGIS プロジェクトがある。\\nユーザ定義オブジェクト[編集]\\nユーザはほとんどのデータベース・オブジェクトを追加できる。\\nデータ型 (TYPE) と データの定義域 (DOMAIN)\\n関数 (FUNCTION) と集約 (AGGREGATE)\\n演算子 (OPERATOR)\\n型変換 (CAST)\\n文字コード変換 (CONVERSION)\\n手続き言語 (LANGUAGE)\\n全文検索の設定 (TEXT SEARCH CONFIGURATION)\\nインデックス・アクセス・メソッド\\nバキューム[編集]\\nバキューム (VACUUM) とは、追記型アーキテクチャにおける不要領域を回収し、再利用またはOSに返却する処理である。 なお、バージョン8.3からはHeap-Only Tuples (HOT) が採用され、インデックスの変更を伴わない更新については、削除された行を直ちに再利用することが可能となり、バキュームの必要な頻度は下がった。\\nPostgreSQLは、MVCCの実現のため、追記型のアーキテクチャを採用している。 データを削除する際は実際のレコードは削除せず、該当行に削除マークを付けるのみである。 更新の際も内部的には削除と挿入を同時に行っている。 そのため、更新・削除が繰り返されるテーブルにおいては、たとえ理論的な行数が変わらなくとも、更新・運用を重ねるごとに物理的なファイルサイズが増加する。肥大化によるパフォーマンスの劣化を回避するため、次節に述べるバキューム作業を定期的に行う必要がある。\\n各バージョンによって以下の差異がある。\\n7.1 以前\\nデータベースファイル内の未使用領域を解放しOSに返却する処理のみをサポートする。このVACUUMでは、処理中のテーブルに対して排他ロックが獲得されるため、VACUUMの間は対象テーブルへのアクセスがブロックされる。システムの規模やテーブルの行数にもよるが、本バージョンにおいてシステムの停止を伴わない運用は困難であった。\\n7.2\\n以前の動作を FULL 方式 (VACUUM FULL) とし、新たにコンカレント方式 (VACUUM) が実装された。現在、単にバキュームと言った場合、後者のコンカレントバキュームを指す。コンカレントバキュームでは、テーブルの排他ロックを伴わずに不要領域の回収を行う。不要領域に対して再利用可能フラグを付けるのみの処理となるため、コンカレントバキュームを行っても基本的にデータベースの物理的なサイズは縮小しない。しかし、以降の更新・挿入において、このとき回収した領域が優先的に使用され、更新・削除によるファイルサイズの肥大を防止できる。\\n7.3\\nインデックスもコンカレントバキュームの対象になり、肥大化から回復させるための定期的にインデックスを再編成 (REINDEX) する必要が無くなった。これによりデータベース・オブジェクトの排他ロックを要するメンテナンスが不要になり、無停止での運用が可能になった。\\n7.4\\n自動的にバキュームを行う contrib/pg_autovacuum モジュールが提供された。autovacuum はシステムを監視し、INSERT/UPDATE/DELETE の回数などの統計情報を利用して、適切なタイミングで適切なテーブルのみに対してバキュームを行う。このため、高度な知識を要すことなく、不要領域の増加を十分に抑えることが可能となった。なお、自動バキューム処理の際に参照される統計情報の記録はデフォルトでオフとなっているため、本機能を利用する際は統計情報の記録オプションもオンにする必要がある。\\n8.0\\nバキュームは多くのI/Oが必要なため、負荷の高い処理である。バキューム実行中のシステムの全体の性能悪化を防ぐため、バキュームを行う速度を制限する機能が追加された。ただし、バキューム自体の処理時間はその分多く要する。\\n8.1\\ncontribより提供されていた自動バキューム (autovacuum) 機能が本体に統合された。不要領域の監視が効率化され、コマンドで発行した VACUUM との連携が可能になった。\\n8.2\\nトランザクションIDの周回がテーブル単位で管理されるようになり、定期的にデータベース単位でバキュームを行う必要が無くなった。テーブル単位のバキュームのみが必要である。また複数のバキュームを並列して実行した際の回収効率が向上した。\\n8.3\\n自動バキューム機能が標準で有効とされ、複数のテーブルに並列してバキュームを行うようになった。加えて Heap-Only Tuplesの採用により、バキューム自体の必要性が低減した。\\n8.4\\nVisibility Map で処理が必要なページを追跡するようになり、バキュームが高速化された。また空き領域のあるページを管理する Free Space Map のメモリ管理が自動化された。\\n9.0\\nVACUUM FULL が CLUSTER と類似の処理に変更され、高速化された。\\nパーティショニング[編集]\\nテーブル・パーティショニングは継承を用いて実現する。 これは、Oracle Database 7 のパーティション・ビューに近い実装である。\\nテーブルを作成する際、他テーブルを「親」テーブルとして指定し、継承関係を定義できる。 「子」テーブルに挿入された行は、親テーブルを参照した際にも取得される。 親テーブルに対する列の追加やCHECK制約の定義は自動的に子テーブルにも反映されるが、外部キーや一意性制約は継承をサポートしていない。\\nパーティショニングされたテーブルへは親テーブルを通してアクセスする。 SELECT, UPDATE, DELETE 文は子テーブルを含むよう展開されるが、クエリの条件が CHECK 制約に適合しない子テーブルは設定により自動的に除外することもできるため効率よく処理できる。INSERT については子テーブルを直接指定するか、親テーブルにトリガを作成することで挿入先を指示する必要がある。\\n全文検索[編集]\\nLIKE 述語と正規表現による文字列検索のほか、全文検索の機能を持つ。バージョン 8.3 以降は組み込みで、それ以前のバージョンでは contrib/tsearch2 として提供されている。この全文検索では文字列から単語を抽出し、転置テーブル (GIN) または単語空間を多次元木 (GiST) とするインデックスを作成できる。SQL/MM の全文検索とは異なり、「@@」演算子を使用する独自の文法で検索を行う。\\nSELECT * FROM テーブル WHERE to_tsvector(文字列カラム) @@ to_tsquery('検索クエリ')\\n標準では日本語の文字列から単語を抽出するパーサを持たないが、外部拡張である textsearch-ja を使用することで形態素解析による検索が可能となる。\\nまた、標準の全文検索以外にも、Ludia, textsearch_senna (Senna を使用), pgestraier (Hyper Estraier), pgRast (Rast) などが外部拡張として存在する。\\nレプリケーション[編集]\\nPostgreSQL 9.0 より、組み込みのバイナリ・レプリケーションをサポートする。[4] トランザクションログを転送し、全てのデータベース・ファイルの変更をコミット後に他のサーバへ非同期に転送する。 単一マスタと複数スレーブを構成でき、スレーブは参照の問い合わせを受け付ける。 参照処理を複数のノードで負荷分散するスケールアウトが可能である。\\nその他の特徴[編集]\\n副問合せ (サブクエリ)\\n結合 (自然結合, 左外結合, 右外結合, 完全外結合)\\n制約 (外部キー, 一意性制約, CHECK制約)\\nトランザクション / サブトランザクション (SAVEPOINT) / 2相コミット\\nオンライン・バックアップ (論理 / 物理)\\nバックアップ直後からデータ障害直前までの任意の時点への復旧 (en:Point-in-time recovery)\\nSSLでの接続\\n表領域\\n性能[編集]\\nCPU スケーラビリティ[編集]\\nバージョン 8.1 以降 CPU スケーラビリティは大幅に改善された。 以降、改善を積み重ね、中規模のハードウェアであればスケーラビリティを十分に確保できるRDBMSとなっている。\\nなお、バージョン 9.2 では、少なくとも64コアのサーバマシン上でCPUスケールすることが確認されている。[3]\\n7.4 以前\\nスケーラビリティはページ置換アルゴリズムとして採用されていた LRU により抑制されていた。ページを参照するたびにバッファ・プール全体を排他ロックしていたため、スケーラビリティは低かった。SMP 構成で 4CPU 程度が限界だった。\\n8.0\\nLRU に代わり ARC が採用された（ただし、特許侵害の回避のため途中で 2Q に変更された[4]）。ARC によりキャッシュヒット率は向上したものの、排他制御にオーバーヘッドが生じた。また、サブトランザクションをサポートするため追加された排他制御も新たなロック競合を生んだ。スケーラビリティは以前のバージョンと比較してむしろ低下しており、2CPU 程度で頭打ちになった。\\n8.1\\nページ置換アルゴリズムはクロックに変更され、スケーラビリティが大幅に向上した。ページの参照には共有ロックのみが必要であるため並行してアクセスが可能になった。8CPU 程度が上限となった。[5] [6]\\n8.2\\nページを管理するハッシュテーブルのロックが16個に分割され、共有ロックの実装に使用されるスピンロックへのアクセスが分散された。他にスピンロックの実装やサブトランザクションの排他制御が改良され、16CPU までのスケーラビリティが確認されている。[7]\\n更新処理[編集]\\n過去のバージョンの PostgreSQL は他の関係データベース管理システム (RDBMS) と比較して更新処理が遅いと言われていた。追記型アーキテクチャが採用されており、更新処理は削除と挿入の組み合わせとして実現されていた。特に挿入の際にインデックスのキーを追加する必要がある点で性能差が生じていた。\\nしかし、バージョン 8.3 にて Heap-Only Tuples (HOT) と呼ばれる機能が採用され、インデックスのキーとなっている列の値に変更が無い場合にはインデックスの更新を回避できるようになった。HOT により約2倍のスループット向上が確認されている。[8]\\nベンチマーク[編集]\\n業界標準の規格に則ったベンチマーク結果として 2007年8月の サン・マイクロシステムズ (Sun) による報告がある。以下のハードウェアを使用し、813.73 SPECjAppServer2004 JOPS@Standard であった。[9]\\nPostgreSQL 8.2.4\\nSun Java System Application Server 9.1 (商用版 GlassFish)\\nSolaris 10\\nen:Sun Fire T2000 (UltraSPARC T1 1.2GHz : 4スレッド × 8コア × 1個)\\n周辺ツール[編集]\\n管理ツール[編集]\\nPostgreSQL専用もしくは各種データベース汎用のデータベース接続クライアントを利用して管理できる。\\npsql[編集]\\npsql は PostgreSQL 付属のコマンドライン・プログラムである。 SQL を直接入力またはファイルから読み込んで実行するほか、スキーマ情報の表示などのメタコマンドを持つ。 また、SQL 構文やテーブル名などをタブキーにより入力補完できる。\\npgAdmin[編集]\\npgAdmin は GUI の管理インタフェースである。 Artistic License で配布される オープンソースソフトウェア (OSS) である。 多くのプラットフォームで動作し、日本語を含む多くの言語が利用できる。 また、専用の SQL エディタは psql と同様の入力補完機能を持つ。 Microsoft SQL Server Management Studio と似たインタフェースでデータベースを操作できる。\\nphpPgAdmin[編集]\\nphpPgAdminはウェブベースの管理ツールである。PHPで作られており GPL で配布されている。名称はphpMyAdminと似ているが、製品同士の関連性は無く、操作性はかなり異なる。\\nその他[編集]\\nWebmin (OSS)\\nNavicat PostgreSQL (商用)\\nSQLMaestro (商用)\\nDatabase Master (商用)\\nレプリケーション・アドオン[編集]\\nPostgreSQL はバージョン 9.0 よりレプリケーションを標準でサポートするが、サードパーティー製のオプション・ソフトウェアも利用できる。\\n各種レプリケーションソフトウェアの概要\\n名前\\n方式\\n開発元\\n特徴\\nSlony-I\\n非同期型マスタスレーブ\\nJan Wieck\\nバージョンアップやバックアップにも利用できる。\\nMammoth Replicator\\n非同期型マスタスレーブ\\nCommand Prompt, Inc.\\nBSDライセンス。\\nLondiste\\n非同期型マスタスレーブ\\nSkype\\n堅牢性と扱いの容易さを目標とするツール。Python製。\\nBucardo\\n非同期型マルチマスタ\\nGreg Sabino Mullane\\nBSDライセンス。\\nPGCluster\\n同期型マルチマスタ\\n三谷篤\\nロードバランサ機能を備える。\\nPostgres-R\\n同期型マルチマスタ\\nMarkus Wanner\\n継続して開発中。\\nCybercluster\\n同期型マルチマスタ\\nCybertec\\nBSDライセンス。\\npgpool-II\\n同期型プロキシサーバ\\nSRA OSS Inc.\\nフェイルオーバー機能を備える。\\nSequoia\\n同期型プロキシサーバ／ドライバ\\nContinuent Inc.\\n他DBMSにも接続できる。\\nPostgresForest\\n同期型プロキシドライバ\\nNTTデータ\\nJDBCラッパ。\\nFermion\\n同期型マルチマスタ\\n株式会社Murakumo\\n検索および更新処理の負荷分散、自動フェイルオーバー機能、マルチキャストを用いたノードの自動追加処理機能を備える。\\n接続インタフェース[編集]\\nPostgreSQL はクライアントサーバモデルであり、データベースへの接続は主に TCP/IP ポート番号 5432 を用いて通信を行う。通信プロトコルは「フロントエンド/バックエンドプロトコル[5]」として公開されている。\\n各プログラミング言語ごとの接続インタフェース\\n言語\\n名前\\nライセンス\\n開発元\\nC\\nlibpq\\nBSD\\n本体同梱\\npsqlODBC\\nLGPL\\nhttp://psqlodbc.projects.postgresql.org/\\nODBCng\\nGPL\\nhttps://projects.commandprompt.com/public/odbcng/\\nC (埋め込みSQL)\\necpg\\nBSD\\n本体同梱\\nC++\\nlibpqxx\\nBSD\\nhttp://pqxx.org/development/libpqxx/\\nJava\\nJDBC TYPE4\\nBSD\\nhttp://jdbc.postgresql.org/\\n.NET (C#, VB)\\nNpgsql\\nBSD\\nhttp://npgsql.projects.postgresql.org/\\ndotConnect for PostgreSQL\\nhttp://www.devart.com/dotconnect/postgresql/\\nOleDB\\nPgOleDb\\nLGPL\\nhttp://pgfoundry.org/projects/oledb/\\nPerl\\nDBD::Pg\\nArtistic, GPL\\nhttp://search.cpan.org/dist/DBD-Pg/\\nPython\\npy-postgresql\\nBSD\\nhttp://python.projects.postgresql.org/\\nPyGreSQL\\nBSD\\nhttp://www.pygresql.org/\\npsycopg2\\nGPL\\nhttp://www.initd.org/\\npg8000\\nBSD\\nhttp://pybrary.net/pg8000/\\nPHP\\nphp_pgsql\\nPHP License\\nhttp://jp2.php.net/pgsql\\nRuby\\nruby-pg\\nRuby License\\nhttp://rubyforge.org/projects/ruby-pg/\\n歴史[編集]\\nマイケル・ストーンブレーカーは、自分が開発を主導した関係データベース管理システム (RDBMS) であるIngres の商業化事業を一段落させると、カリフォルニア大学バークリー校 (UCB) に戻り、同校で新たなプロジェクトを開始した。 プロジェクトの名称は Postgres と名づけられた。 このプロジェクト名称は、Ingres の後継を意味する Post-Ingres に由来している。 Postgresプロジェクトは、関係モデルを使ったこれまでの既存のデータベース管理システムの限界に対処することを目的として、開始された。 最も重要な課題は、これまでのDBMSではユーザが自分で新たな定義域 (ドメイン、型) を既存の単純な定義域をもとにして定義できない点であった。 Postgresでは型 (定義域) を完全にサポートするために必要な最小限の機能だけを導入した。 Postgres ではデータベースが関係を「理解」すると言われ、「規則」に従って自然な方法で関連する関係 (リレーション、表、テーブル) から情報を得ることができた。 ユーザ自身が型を定義する機能に加えて、関連を完全に記述できる機能も備えていた。 プロジェクトは他にも、追記型メディア (光ディスクなど) への対応、大容量記憶装置への対応、推論、オブジェクト指向型データモデルなどを、取り入れた。 実装においては、データベースとアプリケーションソフトウェアの間の新たなインタフェースを実験的に導入した。\\nプロジェクトチームは、1986年からPostgresシステムの基盤を説明した多数の論文を公表した。 1988年、Postgres のプロトタイプバージョンを公開した。 1989年6月、少数のユーザに対してPostgresバージョン1を公開した。 1990年10月、ルールシステム (RULE) を実装し直したバージョン2を公開した。 1991年、バージョン3を公開した。 バージョン3では、ルールシステムが再度実装し直され、複数の記憶装置を管理する機構が追加され、クエリエンジンが改良された。 1993年には、非常に多くのユーザが、プロジェクトに対して、サポートと追加機能を要望して、圧倒させるほどの状態となっていた。 1993年、主として雑然とした部分をきれいにしたことを内容とするバージョン4.2が公開された。 バージョン4.2が公開された後、Postgres プロジェクトは終了した。 Postgres は広く使われたが、保守はユーザに任されていた。\\nマイケル・ストーンブレーカーと Paula Hawthorn は、Postgresを商業化するために、Illustra Information Technologies 社を創業して、Illustraの製品名で開発・販売した。その技術は IBM Informix Dynamic Server (IDS) に導入されている。\\n一方、オープンソースの世界のソフトウェア開発者たちは、Postgres のコピーを入手してシステムのさらなる開発を進めることができた。 なぜならカリフォルニア大学バークリー校 (UCB) は、Postgres をオープンソースライセンスであるBSDライセンスのもとで公開していたからである。 1994年に、カリフォルニア大学バークリー校 (UCB) の大学院生であった Andrew Yu と Jolly Chen は、システムの問い合わせ言語のインタプリタを、Ingres を基にした QUEL のインタプリタから、SQL のインタプリタに置き換える作業を行った。 SQLインタプリタを備えたこのシステムは、Postgres95 と呼ばれた。 Postgres95 のソースコードは、ワールドワイドウェブに公開された。\\n1996年7月に Hub.Org Networking Services の Marc Fournier は、大学外の組織としては最初に、開発用サーバをオープンソースソフトウェア開発のために活動する人々に、提供した。 Postgres95プロジェクトは、Bruce Momjian と Vadim B. Mikheev とともに、カリフォルニア大学バークリー校 (UCB) に由来するソースコードを堅牢にする作業を始めた。 1996年8月1日に、Postgres95の最初のオープンソースのバージョンが公開された。\\n1996年に Postgres95 プロジェクトは、プロジェクトの名称を、SQL のサポートをしているという意味をこめて PostgreSQLに変更した。 1997年1月に PostgreSQL プロジェクトとしての最初のバージョンである、PostgreSQL バージョン 6.0 が公開された。 このときから、インターネットを通じて世界中のデータベース開発者のグループがPostgreSQLの開発に参加し、共同作業によるプロジェクトをうまく調整する体制ができあがった。\\n1999年7月23日、日本PostgreSQLユーザ会が設立し、任意団体として活動を開始した。[6]\\n2001年以降には PostgreSQL を商用サポートする会社が現れた。\\n2001年 Command Prompt, Inc. (Mammoth Replicator; レプリケーション)\\n2003年 SRAOSS (PowerGres, PowerGRES Plus)\\nPowerGRES Plusは富士通とSRAOSSが開発したRDBMSであり、SRAOSSがPostgreSQLより開発した商用RDB『PowerGres』をベースとして、ストレージ管理部分に富士通『Symfoware Server』のものを移植している。\\n2005年 EnterpriseDB 社 (Postgres Plus; Oracle との互換性向上)\\n2005年 Greenplum 社 (BizGres; データウェアハウスやBI向け)\\n2006年2月1日、日本PostgreSQLユーザ会は NPO として再編成された。\\n2011年7月 オープンソースデータベース技術者認定試験(OSS-DB Exam)において基準のRDBMSとして採用された。\\nバージョン履歴[編集]\\nPostgreSQLのバージョンは「x.y.z」(x、y、zはそれぞれ整数) で表現される。「x.y」の部分がメジャーバージョン、「z」がマイナーバージョンである[10]。\\n1986年 - カリフォルニア大学バークレー校 (UCB) でマイケル・ストーンブレーカーがPOSTGRESプロジェクトを発足\\n1987年 - プロトタイプが完成、翌年のACM-SIGMODコンファレンスで紹介される\\n1989年 - POSTGRES 1 を限定的にリリース\\n1990年 - POSTGRES 2 のリリース。前バージョンの批評をもとにルールシステムが再設計された。\\n1991年 - POSTGRES 3 のリリース。複数ストレージの管理機構追加等\\n1993年 - POSTGRES 4.2 をもってカリフォルニア大学バークレー校におけるPOSTGRESプロジェクトが終了\\nver.\\nリリース日\\n追加機能\\n0.01\\n1995-05-01\\nPOSTGRESのソースコードを元にした Postgres95 のリリース\\n1.0\\n1995-09-05\\nSQL LIKE構文などを実装した Postgres95 の正式リリース\\n6.0\\n1997-01-29\\nPostgreSQL と名称を変え、POSTGRESプロジェクトの連番に戻された\\n6.1\\n1997-06-08\\n6.2\\n1997-10-02\\n6.3\\n1998-03-01\\n副問い合わせ, PL/Tcl\\n6.4\\n1998-10-30\\nPL/pgSQL, マルチバイト文字列サポート, ビュー\\n6.5\\n1999-06-09\\nMVCC, 一時表, CASE, INTERSECT, EXCEPT\\n7.0\\n2000-05-08\\n外部キー制約\\n7.1\\n2001-04-13\\nWAL, TOAST, OUTER JOIN\\n7.2\\n2002-02-04\\nコンカレントVACUUM, PL/Python\\n7.3\\n2002-11-27\\nスキーマ, ドメイン, PREPARE\\n7.4\\n2003-11-17\\nIPv6, information_schema\\n8.0\\n2005-01-19\\nMicrosoft Windows対応, SAVEPOINT, PITR, 表領域 [11]\\n8.1\\n2005-11-08\\n2相コミット, ROLE, 行共有ロック, テーブル・パーティショニング [12]\\n8.2\\n2006-12-05\\nウォームスタンバイ, GIN [13]\\n8.3\\n2008-02-04\\n更新処理性能の向上, XMLデータ型, 全文検索, JIS X 0213, ENUM型, UUID型 [14]\\n8.4\\n2009-07-01\\n再帰クエリ, ウィンドウ関数, 列単位のアクセス制御, SQLと関数の性能解析機能 [15]\\n9.0\\n2010-09-20\\nレプリケーション, 一括権限変更, 匿名プロシージャ, 64bit Windows サポート, 移動平均, 列/条件トリガ, 一意性制約の遅延, 排他制約 [16]\\n9.1\\n2011-09-12\\n同期レプリケーション, 外部テーブル, パッケージ管理, UNLOGGEDテーブル, 更新可能なWITH句, 近傍検索, SELinux権限制御[17]\\n9.2\\n2012-09-10\\nインデックスオンリースキャン, カスケードレプリケーション, JSON型, 範囲型[18]\\n受賞[編集]\\n2008年の時点で、PostgreSQL は以下の受賞をしている。[7]\\n1999 LinuxWorld Editor's Choice Award for Best Database\\n2000 Linux Journal Editors' Choice Awards for Best Database\\n2002 Linux New Media Editors Choice Award for Best Database\\n2003 Linux Journal Editors' Choice Awards for Best Database\\n2004 Linux New Media Award For Best Database\\n2004 Linux Journal Editors' Choice Awards for Best Database\\n2004 ArsTechnica Best Server Application Award\\n2005 Linux Journal Editors' Choice Awards for Best Database\\n2006 Linux Journal Editors' Choice Awards for Best Database\\n2008 Developer.com Product of the Year, Database Tool\\n脚注[編集]\\n^ “PostgreSQL: License”.  PostgreSQL Global Development Group (2010年). 2010年11月3日閲覧。\\n^ マイケル・ストーンブレーカー (1986). “Object management in POSTGRES using procedures”. International Workshop on Object-Oriented Database Systems. IEEE Computer Society Press. ISBN 0-8186-0734-3. \\n^ Robert Haas (2012年4月3日). “Did I Say 32 Cores? How about 64?”. 2012年11月3日閲覧。\\n^ PostgreSQL 文書, \\\"リリース8.0.2\\\"\\n^ OSS iPedia, \\\"DBT-1によるPostgreSQL8.1の32ビットマシン(IA32)でのCPUスケーラビリティに関する考察(チューニング有り) \\\"\\n^ OSS iPedia, \\\"DBT-1によるパッチを適用したPostgreSQL8.1.2の32ビットマシン(IA32)でのCPUスケーラビリティに関する考察(チューニング有り) \\\"\\n^ Doug Tolbert (Unisys), \\\"Scaling PostgreSQL on SMP Architectures -- An Update\\\" (PGCon 2007)\\n^ 【PostgreSQLウォッチ】第35回 性能を大幅に改善するPostgreSQL 8.3の新機能「HOT」とは\\n^ “SPECjAppServer2004 Result”.  SPEC (2007年7月4日). 2009年1月2日閲覧。\\n^ 鈴木啓修 「PostgreSQLと高可用性システム/大規模システム PostgreSQLの進化の足跡」『WEB+DB PRESS Vol.48』 技術評論社、2009年1月25日、初版第1刷、104ページ。\\n^ “リリースノート 8.0”. PostgreSQL 文書 (2005年1月19日). 2009年8月29日閲覧。\\n^ “リリースノート 8.1”. PostgreSQL 文書 (2005年11月8日). 2009年8月29日閲覧。\\n^ “リリースノート 8.2”. PostgreSQL 文書 (2006年12月5日). 2009年8月29日閲覧。\\n^ “リリースノート 8.3”. PostgreSQL 文書 (2008年2月4日). 2009年8月29日閲覧。\\n^ “リリースノート 8.4”. PostgreSQL 文書 (2009年7月1日). 2009年8月29日閲覧。\\n^ “リリースノート 9.0”. PostgreSQL 文書 (2010年9月20日). 2010年10月6日閲覧。\\n^ “リリースノート 9.1”. PostgreSQL 文書 (2011年9月12日). 2011年11月12日閲覧。\\n^ “リリースノート 9.2”. PostgreSQL 文書 (2012年9月10日). 2012年11月3日閲覧。\\n参考書籍[編集]\\n笠原辰仁, 北川俊広, 坂井潔, 坂本昌彦, 佐藤友章 『PostgreSQL徹底入門 第3版』 翔泳社、2011年。ISBN 978-4798123356。\\n高塚遙, 松田亮一, 田中ナルミ, 吉岡肇 『新標準PostgreSQL』 ソフトバンククリエイティブ、2009年。ISBN 978-4797354713。\\n石井達夫 『今すぐ導入!PHP×PostgreSQLで作る最強Webシステム』 技術評論社、2009年。ISBN 978-4774138930。\\n浅羽義之, 石田朗雄, 稲葉香理, 永安悟史 『PostgreSQL徹底入門 第2版』 翔泳社、2008年。ISBN 978-4798115054。\\n鈴木啓修 『PostgreSQL完全機能リファレンス』 秀和システム、2006年。ISBN 978-4798014951。\\n三木秀治 『PHP & PostgreSQLで作る実用Webシステム』 毎日コミュニケーションズ、2006年。ISBN 978-4839921194。\\n外部リンク[編集]\\nウィキメディア・コモンズには、PostgreSQLに関連するカテゴリがあります。\\nウィキブックスにPostgreSQL関連の解説書・教科書があります。\\nPostgreSQL本家サイト (一次配布先)\\nPostgreSQL Wiki\\nPgFoundry (関連プロジェクト)\\nNPO法人 日本PostgreSQLユーザ会\\nPostgreSQL日本語ドキュメント\\nLet's Postgres (JPUGポータル)\\nPostgreSQL Information Page 石井達夫によるPostgreSQLの紹介ページ\\nPostgreSQL Notes for Japanese くわむらじゅんによるPostgreSQLの紹介ページ\\nPlanet PostgreSQL (Blogの集約)\\nポータル FLOSS\\n表・話・編・歴\\nデータベース管理システム\\nデータモデル - 関係モデル - データベース設計 - 正規化 - 参照整合性 - 関係代数 - 関係論理 - データベース管理システム - 関係データベース管理システム - オブジェクト関係データベース - 分散データベース - トランザクション処理\\n概念\\nデータベース - ACID - CRUD - NULL - 候補キー - 外部キー - 主キー - スーパーキー - 代理キー\\nオブジェクト\\n関係 (表) - ビュー - トランザクション - ログ - トリガ - 索引 - ストアドプロシージャ - カーソル - 分割\\nSQL\\nSELECT - INSERT - UPDATE - MERGE - DELETE - JOIN - CREATE - DROP - COMMIT - ROLLBACK - TRUNCATE - ALTER - WHERE - SAVEPOINT\\n構成要素\\n並行性制御 - データ辞書 - JDBC - ODBC - データベース言語 - 問い合わせ言語 - クエリ最適化 - クエリ実行計画\\nデータベース製品: 関係データベース管理システムの比較 - データベース接続クライアント\\n「http://ja.wikipedia.org/w/index.php?title=PostgreSQL&oldid=48406652」から取得 \\nカテゴリ: PostgreSQLデータベース管理システムオープンソース\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nAfrikaans\\nالعربية\\nAzərbaycanca\\nБългарски\\nCatalà\\nČesky\\nDansk\\nDeutsch\\nΕλληνικά\\nEnglish\\nEspañol\\nEuskara\\nفارسی\\nSuomi\\nFrançais\\nעברית\\nMagyar\\nBahasa Indonesia\\nItaliano\\nҚазақша\\n한국어\\nLietuvių\\nLatviešu\\nമലയാളം\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nRomână\\nРусский\\nSrpskohrvatski / српскохрватски\\nSlovenčina\\nСрпски / srpski\\nSvenska\\nதமிழ்\\nไทย\\nTürkçe\\nУкраїнська\\nTiếng Việt\\n中文\\nリンクを編集\\n最終更新 2013年7月6日 (土) 11:23 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b28"},"body":"Apache Ant\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache Ant\\n開発元\\nApacheソフトウェア財団\\n最新版\\n1.8.4 / 2012年5月23日（13か月前） （2012-05-23）\\n対応OS\\nクロスプラットフォーム\\n種別\\nビルドツール\\nライセンス\\nApacheライセンス\\n公式サイト\\nhttp://ant.apache.org/\\nテンプレートを表示\\nApache Ant（アパッチ アント）は、ビルドツールソフトウェアである。\\nGNU make のJava版ともいえるものであり、オペレーティングシステム (OS) など特定の環境に依存しにくいビルドツールである。XML文書でビルド（ソフトウェア構築）のルールを記述することが特徴である。統合開発環境EclipseにはAntプラグインが標準で内蔵されている。元々 Apache Tomcat をビルドするために開発されたものである。\\nAntはタスクと呼ばれる何種類ものXML要素をビルドファイル (デフォルトではbuild.xml) 上に記述してビルドのルールを作る。このタスクは、Antのプラグインとして提供されているものを外部から採り入れることで、追加することもできる。また、このタスクをAntのアプリケーションプログラミングインタフェース (API) に従ってJavaで記述することにより、自作することもできる。\\nまた近年では、Javaのみならず、IKVM.NETプロジェクトおよびMono (ソフトウェア)プロジェクトによりAnt task for IKVMCとして.NET Frameworkでの利用も促進されている。\\n主なAntタスク[編集]\\njavac \\nJavaソースコードをコンパイルする。\\njavadoc \\nJavaソースコードからJavadocドキュメント（Java APIドキュメント）を生成する。\\njava \\nJavaプログラムを実行する。\\njunit \\nテストフレームワークJUnitを使ってJavaプログラムをテストする。\\njunitreport \\njunitタスクで出力した結果ファイルを用いてHTMLフォーマットなどに対応したレポートを生成する。\\ncopy \\nファイルをコピーする。\\ndelete \\nディレクトリやファイルなどを削除する。\\nmkdir \\nディレクトリを作成する。\\nftp \\nFTP接続を開始して、ファイルのアップロード、ダウンロードなどを可能にする。\\nscp \\nSCP、SFTP接続を開始して、ファイルのアップロード、ダウンロードなどを可能にする。\\ncvs \\nCVS接続を開始して、CVSリポジトリからのチェックアウト、コミット、アップデートを可能にする。\\ngenkey \\n署名つきJARファイルを作成するために必要な証明書を生成する。\\nsignjar \\nJARファイルに署名する。\\nnative2ascii \\nJavaソースコードなどに含まれるマルチバイト文字の文字列部分をJDKに付属している変換ツールを使ってASCIIコードに変換する。\\nsetproxy \\nネットワークに接続するタスクを実行する際に、プロキシサーバのアドレスを設定する。\\ntstamp \\nタイムスタンプを更新しAntで使われている変数 DSTAMP、TSTAMP を更新する。\\nzip \\n指定したディレクトリやファイルをZIP形式で圧縮・アーカイブする。\\necho \\nコンソール（コマンドライン環境）に文字列を出力する。\\nsplash \\n実行時に指定した時間だけスプラッシュを表示する。画像を指定することもできる。\\nbuildnumber \\nビルドナンバーを更新する。デフォルトでは同じディレクトリにbuild.numerという名前のファイルが自動生成され、そのファイルにビルドナンバーが記録される。\\nant \\n別のAntビルドファイルにあるタスクを読み込んで実行する。\\n関連項目[編集]\\nポータル FLOSS\\nアジャイルソフトウェア開発\\nエクストリーム・プログラミング\\n継続的インテグレーション\\n外部リンク[編集]\\nApache Ant(英語)\\nApache Ant(日本語)\\nNAnt - Apache Antの.NET Frameworkへの移植版\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_Ant&oldid=46647945」から取得 \\nカテゴリ: Apacheソフトウェア財団ソフトウェア開発ツールJavaツール\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nCatalà\\nČesky\\nDansk\\nDeutsch\\nEnglish\\nEspañol\\nFrançais\\nעברית\\nMagyar\\nItaliano\\n한국어\\nLietuvių\\nമലയാളം\\nNederlands\\nPolski\\nPortuguês\\nРусский\\nSvenska\\nதமிழ்\\nTürkçe\\nУкраїнська\\n中文\\nリンクを編集\\n最終更新 2013年3月14日 (木) 01:35 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b35"},"body":"Perl6\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nPerl6\\nパラダイム\\nマルチパラダイム\\n登場時期\\n2000年\\n設計者\\nラリー・ウォール\\n最新リリース\\n実装による\\n型付け\\n動的型付け, 静的型付け\\n主な処理系\\nRakudo, Pugs\\n影響を受けた言語\\nPerl 5, Smalltalk, Haskell, Ruby\\nライセンス\\nArtistic License 2\\nウェブサイト\\nPerl6.org\\nテンプレートを表示\\nプログラミング言語\\n>>他のプログラミング言語\\n■カテゴリ / ■テンプレート\\nPerl6（パールシックス）は、ラリー・ウォールにより設計されたオブジェクト指向スクリプト言語である。\\nPerl6は、2000年にPerlの次期メジャーバージョンとして設計が始められた。しかし、言語仕様は現在のPerl(Perl5)と互換性がなく、既存のPerl5のソフトウェアをPerl6用に「アップグレード」するのは極めて困難である。したがって現在はPerl5とPerl6は別の言語であると考えられており、Perl6はPerl5の次期バージョンではないとされている。換言すれば、Perl6はPerl5から移行対象とはみなされていない。\\nPerl6は言語仕様であり、言語仕様と処理系は別のプロジェクトとして管理されている。これは言語の作者自身が開発した処理系が言語仕様に準ずるものとされてきたPerl5やRubyとは異なっている。公式の処理系としてはRakudoがあり、2010年8月に最初の「使用可能な」バージョンがリリースされた。\\nPerl5は動的型付け言語であったのに対し、Perl6は静的な型指定も行える言語となった（動的な型付けも可能）。また、Perl6では仮引数定義も可能となっている（Perl5でも可能ではあったが不完全であった）。さらに、Perl5の様に展開を行うことも可能であり、例えばJavaであればReflectionクラスを必要とする仮引数の取得をいわゆるマジックを用いずとも可能な設計となっている。\\nPerl6ではPerl5と比較してさらに柔軟かつ強力な記法を可能としている。例えば、配列要素毎の演算や、Lisp等に代表されるポーランド記法も可能にするなどPerl5をより一層強力にした記述である。\\n関連項目[編集]\\nParrot\\n外部リンク[編集]\\nPerl 6\\nOfficial Perl 6 Documentation\\nPlanet Perl 6\\nPerl 5 to Perl 6\\nPerl 6 and Parrot links\\nPerl6::Perl5::Differences\\nPerl 6 at Wikia\\nRakudo.org\\n表・話・編・歴\\nフリーソフトウェアとオープンソースソフトウェア\\n全般\\nコピーレフト\\nフリーソフトウェア\\nフリーソフトウェアの定義\\n無料と自由（英語版）\\nオープンソースソフトウェアパッケージの一覧（英語版）\\nオープンソースのアンドロイドアプリケーションの一覧（英語版）\\nフリーのウェブアプリケーションの一覧（英語版）\\nフリーソフトウェアプロジェクトの一覧（英語版）/OSSホスティングサービスの比較\\n以前はプロプライエタリだったソフトの一覧（英語版）\\nオープンソースソフトウェア\\nOS（英語版）\\nAROS\\nBSD\\nDarwin\\neCos\\nFreeDOS\\nGNU\\nHaiku\\nInferno\\nLinux\\nMach\\nMINIX\\nOpenSolaris\\nSymbian\\nPlan 9\\nReactOS\\n開発（英語版）\\nBasic For Qt（英語版）\\nEclipse\\nFreeBASIC\\nFree Pascal\\nGCC\\nGambas\\nJava\\nLLVM\\nLua\\nNetBeans\\nOpen64（英語版）\\nPerl\\nPHP\\nPython\\nROSE（英語版）\\nRuby\\nTcl/Tk\\n歴史（英語版）\\nGNU\\nHaiku（英語版）\\nLinux（英語版）\\nMozilla\\nApplication Suite（英語版）\\nFirefox（英語版）\\nThunderbird（英語版）\\n団体\\nApacheソフトウェア財団\\nAndroid Open Source Project\\nBlender Foundation（英語版）\\nEclipse Foundation\\nfreedesktop.org\\nフリーソフトウェア財団\\nヨーロッパ\\nインド\\nラテンアメリカ\\nFSMI（英語版）\\nGNOME Foundation\\nGNU Project（英語版）\\nGoogle Code\\nKDE e.V.（英語版）\\nLinux Foundation\\nMozilla Foundation\\nOpen Source Geospatial Foundation（英語版）\\nOpen Source Initiative\\nSoftware Freedom Conservancy\\nSourceForge\\nSymbian Foundation\\nThe Document Foundation\\nXiph.Org Foundation\\nXMPP Standards Foundation（英語版）\\nX.Org Foundation\\nライセンス\\nApache\\nArtistic\\nBeerware（英語版）\\nBoost（英語版）\\nBSD\\nGNU GPL\\nGNU LGPL\\nISC\\nMIT\\nMPL\\nMs-PL/RL\\nzlib\\nパブリックドメイン/CC0（英語版）\\nWTFPL\\nフリーソフトウェア財団が承認したライセンス（英語版）\\nライセンス標準\\nオープンソースの定義\\nフリーソフトウェアの定義\\nDebianフリーソフトウェアガイドライン\\n課題\\nバイナリ・ブロブ\\nデジタル著作権管理 (DRM)\\nグラフィックハードウェアとの互換性（英語版）\\nライセンスの氾濫\\nMozilla関連ソフトウェアのブランド変更\\nプロプライエタリ・ソフトウェア\\nSCO-Linux論争（英語版）\\nセキュリティ（英語版）\\nソフトウェア特許\\nハードウェア制限（英語版）\\nTrusted Computing（英語版）\\nウィルス性ライセンス\\nTiVo化\\nその他\\n代替用語（英語版）\\nコミュニティ（英語版）\\nLinuxディストリビューション\\nフォーキング\\n運動\\nMicrosoft Open Specification Promise（英語版）\\nRevolution OS\\nオープンソースとクローズドソースの比較（英語版）\\nPortal:FLOSS\\n「http://ja.wikipedia.org/w/index.php?title=Perl6&oldid=46777780」から取得 \\nカテゴリ: プログラミング言語オブジェクト指向言語オープンソーススクリプト言語Perl\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nБългарски\\nČesky\\nEnglish\\nEspañol\\nSuomi\\nFrançais\\n한국어\\nNederlands\\nРусский\\n中文\\nリンクを編集\\n最終更新 2013年3月20日 (水) 04:09 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b2a"},"body":"Firebird\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nこの項目では、リレーショナルデータベース管理システムについて記述しています。その他の用法については「ファイヤーバード」をご覧ください。\\nFirebird\\n最新版\\n2.5.2 / 2012年11月07日\\n対応OS\\nWin32, Win64, Linux x86, Linux AMD64, MacOS X, Solaris, HP-UX\\n種別\\nRDBMS\\nライセンス\\nIPL, IDPL\\n公式サイト\\nhttp://www.firebirdsql.org/\\nテンプレートを表示\\nFirebird（ファイアバード）は、InterBaseから派生したオープンソースのリレーショナルデータベース管理システム。オープンソースで開発されており、Mozilla Public Licenseを元にしたInterBase Public License（商用・非商用問わず利用できるが、オリジナル〈ここではFirebirdを指す〉のソースコードを改変したプログラムを利用する場合は、その変更箇所のコードを公開しなくてはならない）によってライセンスされている。\\n目次\\n1 特徴\\n2 インストール\\n3 歴史\\n4 管理ツール\\n5 受賞\\n6 外部リンク\\n7 脚注\\n特徴[編集]\\nPostgreSQLのMVCC（多版同時実行制御）と同様のMGA（マルチ・ジェネレーション・アーキテクチャー）による高度なトランザクション管理機能を有する。ストアドプロシージャや、トリガー、UDF（ユーザー定義関数）等の商用データベースに通常備わっている機能を網羅している。ただしオブジェクトの命名則が厳しい、プライマリキーのAUTO INCREMENTが用意されていないなど、やや旧式な仕様もある。なおPHPなどアプリケーションからの接続には、InterBase対応の関数・ライブラリを流用できる。\\n2007年6月に開催された「オープンソースカンファレンス2007.DB」で行われた公開ベンチマークテストでは高評価を得て、PostgreSQL、MySQLに続く第3のオープンソースリレーショナルデータベース管理システムとして注目されているが、解説書籍の出版が少ない、レンタルサーバではサポートされていないなど日本国内での認知度はまだまだ低い。\\n特筆すべき機能として、有償ではあるが米IBフェニックス社の「IBPレプリケータ」を導入し、GUI上から設定することにより、IPネットワークで接続された複数のFirebird同士で同期処理を行なうことが可能となる。これはトリガーの機能を応用したもので、更新された箇所を同期処理用のテーブルに蓄積し、蓄積内容を設定された別のFirebirdに対し定期的に送信すると言うものである。この他にも、Firebirdのレプリケーションソフトは多数存在する。\\nまた、RDBMS側からクライアントへのコールバックを実現する、イベントアラータはFirebirdの初期開発者であるJim Starkeyの発案によるものである。\\nインストール[編集]\\nWindows版には専用のインストーラが用意されている。Linux版もダウンロードパッケージに含まれる「install.sh」を実行すれば自動的に「/opt」以下にインストールされる。ただしisqlコマンドを使う場合、実行環境（Fedoraなど）によっては同名の全く別のプログラムが起動してしまうので、「isql2」など重複しない別名のシンボリックリンクを作成しておく必要がある。\\n歴史[編集]\\n2000年6月25日、Borland 社から InterBase 6.0 のソースコードが公開され[1][2]、それから1週間のうちにSourceForge に Firebird プロジェクトが登録された[3][4]。\\n2002年3月11日、Firebird 1.0 が Linux, Windows, Mac OS X 向けにリリースされた[5]。それから2ヵ月後には、Solaris, FreeBSD 4, HP-UX へも移植された[6]。\\nMozilla Foundationの新ブラウザが登場した際、一時期 \\\"Mozilla Firebird\\\" の名称を使用したため多少の混乱があったが、2004年2月10日にmozilla.orgがブラウザの名称をMozilla Firefoxに変更したことで決着した。[1]\\n2004年2月23日、Firebird 1.5 がリリースされた[7]。 ポーティングのため2000年よりソースコードをC言語からC++へ変更する開発が行われてきたが、このリリースは初めて C++ コードベースを使った安定版である。 クエリ最適化の改良、SQL92準拠の式、SQL:1999 準拠の SAVEPOINT、明示的なロックが追加された[8]。\\n2006年11月12日、Firebird 2.0 がリリースされた[9]。 64ビットアーキテクチャのサポート、FROM句での入れ子テーブル、ロック時のタイムアウトでの式の利用が追加された[10]。 さらに、バージョン 2.1 にて、データベーストリガ、再帰クエリ、SQL:2003準拠の MERGE 文が追加された[11]。\\n2010年10月4日、Firebird 2.5 がリリースされた[12]。 これまでスレッドモデルで実装された Super Server と、プロセスモデルで実装された Classic Server の二つのサーバーモデルを並行して開発してきたが、バージョン 2.5 では新たに Super Classic と称するサーバーモデルが追加される。Super Classic 版では、Super Server版のボトルネックとなっていた統合型キャッシュを見直し、スレッド毎にキャッシュバッファを実装することで、これまで弱点とされてきたSMPへの対応を強化し、スケーラビリティが向上する予定である。 その他に、正規表現や外部データベースへの接続が追加された。[13]\\n管理ツール[編集]\\nFlameRobin\\nDatabase Master\\nibWebAdmin\\n受賞[編集]\\n2009. SourceForge Community Choice Award: Best Project for enterprise. Finalist on Best Project and Best Project for Government.\\n2007. SourceForge Community Choice Award: Best Project for enterprise, Best user support.\\n外部リンク[編集]\\nFirebirdプロジェクトホーム\\nFirebird日本ユーザー会\\nFirebirdSQL Foundation\\n有志によるFirebird SQLリファレンス [リンク切れ]\\nFIREBIRD WIKI\\n脚注[編集]\\n^ “Inprise/Borland Introduces InterBase 6.0 Now Free and Open Source on Linux, Windows, and Solaris”. (2000年7月16日).  オリジナルの2004年12月6日時点によるアーカイブ。. http://web.archive.org/web/20041206174134/www.borland.com/news/press_releases/2000/07_16_00_ib6.html 2009年1月29日閲覧。 \\n^ “Borland.com: Inprise/Borland Introduces Interbase 6.0 Now Free and Open Source on Linux”.  Linux Today. 2009年1月29日閲覧。\\n^ “Firebird History”. 2009年1月31日閲覧。\\n^ Paul Reeves. “What's happening to InterBase”.  Borland User Group. pp. 2. 2009年1月29日閲覧。\\n^ “IBPhoenix Community News Archive” (2000年3月11日). 2009年1月29日閲覧。\\n^ “IBPhoenix Community News Archive” (2000年4月11日). 2009年1月29日閲覧。\\n^ “Firebird Relational Database 1.5 Final Out”. Slashdot. (2004年2月23日). http://developers.slashdot.org/article.pl?sid=04/02/23/201230 2009年1月31日閲覧。 \\n^ Helen Borrie (2007年11月30日). “Firebird 1.5.5 Release Notes”.  Firebird Project. 2009年1月31日閲覧。\\n^ Dmitry Yemanov. “Firebird 2.0 Final Release Launches in Prague”. 2009年2月5日閲覧。\\n^ Helen Borrie (2009年1月22日). “Firebird 2.0.5 Release Notes”. 2009年2月5日閲覧。\\n^ Helen Borrie (2008年7月15日). “Firebird 2.1 Release Notes”. 2009年2月7日閲覧。\\n^ Alexey Kovyazin. “Firebird 2.5 Introduces New Audit Features and Improved Scalability”. 2010年10月6日閲覧。\\n^ Helen Borrie (2008年7月2日). “Firebird 2.5 Release Notes”. 2009年2月9日閲覧。\\n「http://ja.wikipedia.org/w/index.php?title=Firebird&oldid=48283915」から取得 \\nカテゴリ: データベース管理システムオープンソース隠しカテゴリ: 外部リンクがリンク切れになっている記事/2011年10月\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nالعربية\\nČesky\\nDansk\\nDeutsch\\nEnglish\\nEspañol\\nSuomi\\nFrançais\\nעברית\\nMagyar\\nBahasa Indonesia\\nItaliano\\n한국어\\nNederlands\\nNorsk bokmål\\nPolski\\nPortuguês\\nРусский\\nСрпски / srpski\\nSvenska\\nTürkçe\\nУкраїнська\\n中文\\nリンクを編集\\n最終更新 2013年6月25日 (火) 02:01 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b36"},"body":"Apache ZooKeeper\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nZooKeeper\\n開発元\\nApacheソフトウェア財団\\n最新版\\n3.3.5 / 2012年3月20日（15か月前） （2012-03-20）\\nプログラミング言語\\nJava\\n対応OS\\nCross-platform\\n種別\\nDistributed computing\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttp://hadoop.apache.org/zookeeper/\\nテンプレートを表示\\nApache ZooKeeperは Apacheソフトウェア財団のオープンソースプロジェクトで、大規模分散システムでよく利用される、設定情報の集中管理や名前付けなどのサービスを提供するソフトウェアである。Hadoopのサブプロジェクトの一つである。\\nZooKeeperのアーキテクチャでは、高可用性を冗長サービスにより提供している。つまり、クライアントはあるZooKeeperノードへの問い合わせが失敗したら、他のノードに問い合わせることができる。\\nデータの更新は一つのマスターノードだけが行うようになっているので、データがノード間で矛盾した内容になることはない（ただし、最新のデータでない可能性はある）。\\n更新を担当するマスターノードが何らかの理由で停止した場合には、各ノード間で選挙を行い、新たな更新ノードが選ばれる。\\nZooKeeperはデータを階層的な名前空間に保存しているが、これはファイルシステムやトライ木のデータ構造によく似ている。クライアントはこのノードに読み書きを行うことによって、設定情報共有などのサービスを提供する。[1]\\nZooKeeperはen:Rackspaceやen:Yahoo!などの企業で[2]、またSolrのようなオープンソースのエンタープライズサーチシステムで使用されている。\\n目次\\n1 典型的な用途\\n2 関連項目\\n3 参考文献\\n4 外部リンク\\n典型的な用途[編集]\\nディレクトリ・サービス\\n構成管理\\n同期_(計算機科学)\\nリーダー選出\\nメッセージキュー\\nen:Notification\\n関連項目[編集]\\nポータル Java\\nHadoop\\n参考文献[編集]\\n^ ZooKeeper docs\\n^ http://hadoop.apache.org/zookeeper/docs/current/zookeeperOver.html ZooKeeper Overview: A Distributed Coordination Service for Distributed Applications\\n外部リンク[編集]\\nZooKeeper homepage\\n日本語訳(あしたのオープンソース研究所)\\nArticle in highscalability.com\\nYahoo! developer network video\\nSoftware Development Times article of ZooKeeper moving to Apache\\nEclipse ECF Discovery based on Apache ZooKeeper\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_ZooKeeper&oldid=46767620」から取得 \\nカテゴリ: Apacheソフトウェア財団オープンソースJava\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nEnglish\\nEspañol\\nリンクを編集\\n最終更新 2013年3月20日 (水) 02:03 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b37"},"body":"Rust (プログラミング言語)\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nRust\\n拡張子\\n.rs .rc\\nパラダイム\\n並列計算、関数型、オブジェクト指向、命令型プログラミング、構造化、静的型付け\\n登場時期\\n2010\\n設計者\\nグレイドン・ホアレ\\n開発者\\nモジラ\\n評価版リリース\\n0.6[1] / 2013-04-03\\n型付け\\n静的型付け、強い型付け、型推論、構造化データ\\n主な処理系\\nrustc\\n影響を受けた言語\\nAlef、 C++、 Camlp4、 Common Lisp、 Erlang、 Haskell、 Hermes、 Limbo、 Napier、 Napier88、 Newsqueak、 NIL、 Sather、 Standard ML\\nプラットフォーム\\nFreeBSD、Linux、Mac OS X、Windows\\nライセンス\\nMIT\\nウェブサイト\\nrust-lang.org\\nテンプレートを表示\\nRust は実験的な並列かつマルチパラダイムのプログラミング言語である。モジラによって開発中である[2]。純関数型プログラミング、並列アクターモデル、手続き型プログラミング、オブジェクト指向プログラミングをサポートする実用的な言語を目指し開発中である。\\n目次\\n1 概要\\n2 特徴\\n3 プログラム例\\n3.1 Hello World\\n3.2 階乗\\n4 言語の発展\\n5 脚注\\n6 外部リンク\\n概要[編集]\\n主任開発者はグレイドン・ホアレ[3]である。彼は2006年にこの言語の開発に着手し、モジラが関わりはじめたのは2009年で[4]、2010年のモジラ・サミットで公に姿を表した[5]。初期のコンパイラーは OCaml 言語で作られていたが、2010年にはコンパイラーをRust言語自身で作る作業が開始された[6]。翌年には最初の完動品が作成された[7]。このコンパイラーはLLVMで構築された。\\nRust コンパイラーの第 0.1 版は2012年1月に完成している[8]。モジラはこれを新しいモノ好みの人やプログラミング言語愛好家のためのアルファ版と位置づけている。\\n2013年4月3日時点での最新版は2013年4月3日に公開された第 0.6 版である[1]。\\nモジラの理念を守り[9]、Rust 言語は社会に開かれており、開発者たちは利用者からの感想や提言を求めている。\\nRust言語のウェブサイトには「このアルファ版のソフトウェアにはたくさんのバグや不完全なところがあるのは分かっており、それらは将来変更されます。しばらくの間は不安定な仕様や廃止される仕様があり、後の版でのソースコードの互換性も保証されていません。ご自身の責任でお使いください。」[10]と述べられている。実験的な取り組みであるという性質上、言語にもコンパイラーにもベータ版が公開される予定日は決められていない。\\n特徴[編集]\\nRust言語はインターネット上で動作する大きなクライアントとサーバープログラムを作成するのに都合が良い言語を目指したものである。結果として、安全性、メモリ管理、並列性が、この言語の目立った特徴となっている。性能はC++言語に匹敵するものになるはずである[11]。\\nRust言語の文法はC言語やC++言語に類似しており、ブロックは中括弧で区切られ、制御文にはif、else、do、while、forの予約語が使われる。C言語やC++言語にある予約語のすべてが存在するわけではない一方、多方向分岐に使われるmatch文など、C、C++言語のプログラマーには馴染みがない予約語が含まれる。Rust言語はC言語やC++言語と文法的には類似点があるにもかかわらず、意味論（セマンティクス）の点でははとても異なっている。\\nこのシステムの設計はメモリー・セーフであり、ヌルポインターや不正なメモリ域を指すポインターは許容されていない。データの値は決まったフォームのみで初期化され、それらの全ての入力は既に初期化さている必要がある[12]。\\nこの言語の型システムでは Haskell 言語に倣い「型クラス」を用いることができる。これはアドホックな多相性を容易にするものであり、可変型宣言により実現されるものである。高類多相性[13]など、Haskell 言語にある他の特徴はサポートされていない。\\nRust言語では予約語「let」で宣言された変数に対して型推論が行われる。これらの変数は型を決定するための値を必要としない。コード中のどこかでそれらの変数への値の代入[14]が失敗した場合にはコンパイル時エラーが発生する[15]。型が明示された関数の引数に対しては型推論は行われない。\\nfn fib(n: int) -> int { }\\nなお、これを\\nfn fib(n) -> { }\\nのように、型を省いて記述することはできない。\\n並列性の機構は軽量タスクとして提供される。これと類似の仕組みは Erlang言語などのアクターモデルの言語にも見られるものである。それらのシステムにおいて、複数のタスク同士は直接にデータを共有するのではなく、メッセージ・パッシングによってデータのやり取りを行う。性能上の理由から、データのやり取りには固有の箱[16]を使って行われ、データの複製はされない。それらの箱は所有者が一人であることが保証されたもので、送信タスクから受信タスクに向けて開放することができる。\\nRust言語が備えるオブジェクトシステムはクラス、インターフェース、トレイトにより構成される。継承と多相性はそれぞれトレイトとインターフェースによって提供され、クラスは他のクラスから継承することはできない。トレイトの仕組みは複数のクラスに混入させることのできる再利用可能なメソッド実装を提供する。それらのメソッドは実行に必要なフィールド群を規定するものの、それ自身はそれらのフィールドを定義することは出来ない。この特徴によって C++ 言語でおきる菱形継承問題が回避されている。（クラスとトレイトの仕組みは実験的なものであり、現時点の予定として、インターフェースは Rust 第 0.4 版でトレイトと統合されて削除されることになっている。）\\nプログラム例[編集]\\n以下のコードは Rust 第 0.4 版において正しいプログラムである。文法や意味論は後の版で改変される可能性がある。\\nHello World[編集]\\nfn main() {\\nio::println(\\\"hello, world\\\");\\n}\\n階乗[編集]\\n階乗を求めるプログラム。再帰呼び出しによるものと、繰り返し処理によるもの。\\n/* return文なしに暗黙に値を返す Rust言語の機能を示す例である。\\n関数型様式のプログラムを作成する際に、この特徴は便利である。\\nC言語やC++言語とは異なり、Rust言語の if は文ではなく式である。\\nそのため、返し値を伴わなければならない。 */\\nfn fac_recur(n: int) -> int {\\nif n <= 1 { 1 }\\nelse { n * fac_recur(n-1) }\\n}\\nfn fac_iter(n: int) -> int {\\n// 変数は予約語「mut[17]」で宣言することで可変になる。\\nlet mut i = 1,\\nresult = 1;\\nwhile i <= n {\\nresult *= i;\\ni += 1;\\n}\\nreturn result;  // 明示的なreturn文。関数型の例と対照的。\\n}\\n言語の発展[編集]\\nこの言語の開発の初期の頃、変数名や関数名など識別子としてASCII文字以外の文字を使うことは禁じられていた。言語についてのある質疑応答の中で、現場の非英語圏のプログラマーのほとんどが識別子にはASCII文字を使っていると述べられていた。しかしその制限は反論を引き出すことになった[18]。それで、2011年2月に言語に変更が行われ、この制限は削除された[19]。\\n脚注[編集]\\n^ a b rust/RELEASES.txt\\n^ “The Rust Language”.  Lambda the Ultimate (2010年7月8日). 2010年10月30日閲覧。\\n^ 英: Graydon Hoare\\n^ “Project FAQ” (2010年9月14日). 2012年1月11日閲覧。\\n^ “Future Tense” (2011年4月29日). 2012年2月6日閲覧。 “At Mozilla Summit 2010, we launched Rust, a new programming language motivated by safety and concurrency for parallel hardware, the “manycore” future which is upon us.”\\n^ Hoare, Graydon (2010年10月2日). “Rust Progress”. 2010年10月30日閲覧。\\n^ Hoare, Graydon (2011年4月20日). “rust-dev] stage1/rustc builds”. 2011年4月20日閲覧。 “After that last change fixing the logging scope context bug, looks like stage1/rustc builds. Just shy of midnight :)”\\n^ catamorphism (2012年1月20日). “Mozilla and the Rust community release Rust 0.1 (a strongly-typed systems programming language with a focus on memory safety and concurrency)”. 2012年2月6日閲覧。\\n^ “The Mozilla Manifesto”. 2012年4月9日閲覧。\\n^ 英: This is alpha-level software with many known bugs, incomplete features and planned future changes. Use at your own risk, expect some instability, disruption and source-level incompatibility for a while yet.\\n^ Walton, Patrick (2010年12月5日). “C++ Design Goals in the Context of Rust”. 2011年1月21日閲覧。 “… It’s impossible to be “as fast as C” in all cases while remaining safe… C++ allows all sorts of low-level tricks, mostly involving circumventing the type system, that offer practically unlimited avenues for optimization. In practice, though, C++ programmers restrict themselves to a few tools for the vast majority of the code they write, including stack-allocated variables owned by one function and passed by alias, uniquely owned objects (often used with auto_ptr or the C++0x unique_ptr), and reference counting via shared_ptr or COM. One of the goals of Rust’s type system is to support these patterns exactly as C++ does, but to enforce their safe usage. In this way, the goal is to be competitive with the vast majority of idiomatic C++ in performance, while remaining memory-safe…”\\n^ “Doc language FAQ” (2010年9月14日). 2012年1月11日閲覧。\\n^ 英: higher-kinded polymorphism\\n^ 英: assign\\n^ Walton, Patrick (2010年10月1日). “Rust Features I: Type Inference”. 2011年1月21日閲覧。\\n^ 英: unique box\\n^ 「可変の」を意味する英語「mutable」に由来\\n^ Jelliffe, Rick (2010年11月8日). “Vale Java? Scala Vala palava”. 2012年3月29日閲覧。 “… It is just plain ignorant to say that non-English programmers always write with ASCII. (Just as it would be ignorant to say that they never do.) It is that kind of rather blithe dismissal that foreign cultures and languages need to be supported that creates extra unnecessary barriers. That argument ran out of legs in the early 1990s: all platforms have well -established Unicode libraries with serviceable properties for this…”\\n^ “Commit dabccadd3202513ab0bcb424e2c62c90ab23062d” (2011年2月26日). 2012年1月11日閲覧。\\n外部リンク[編集]\\nRust 公式サイト\\nRust Language Wiki\\nThe Rust-dev Archives (electronic mailing list)\\nPrimary source code repository and bug tracker\\n「http://ja.wikipedia.org/w/index.php?title=Rust_(プログラミング言語)&oldid=47934554」から取得 \\nカテゴリ: プログラミング言語Mozilla\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nEnglish\\nFrançais\\nItaliano\\n한국어\\nРусский\\n中文\\nリンクを編集\\n最終更新 2013年5月24日 (金) 01:09 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b38"},"body":"log4j\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nApache log4j\\n開発元\\nApacheソフトウェア財団\\n最新版\\n1.2.17 / 2012年5月6日（13か月前） （2012-05-06）\\nプラットフォーム\\nクロスプラットフォーム\\n種別\\nロギングツール\\nライセンス\\nApache 2.0 ライセンス\\n公式サイト\\nhttp://logging.apache.org/log4j\\nテンプレートを表示\\nApache log4jは、Javaのロギングユーティリティ。元々はCeki Gülcüにより開発されていたが、現在はApacheソフトウェア財団のプロジェクトの一つとなっている。主にデバッグ用ツールとして使用されている。log4jは、Java Logging Frameworksの一つである。\\nCeki Gülcüはその後、log4j互換の後継として、SLF4J[1]とLogbackの開発プロジェクトを立ち上げている。\\n目次\\n1 機能\\n1.1 ログレベル\\n1.2 設定ファイル\\n1.3 設定例\\n2 ログビューア\\n3 外部リンク\\n3.1 ポート\\n機能[編集]\\nログレベル[編集]\\nlog4jは、6つのログレベルを標準提供する。この他に利用者が任意のログレベルを追加することも可能である。ログレベルが高い（情報量が少ない）ものから低い（情報量が多い）ものへと順に並べると下表の通り。\\nFATAL\\n致命的なエラー。プログラムの異常終了を伴うようなもの。コンソール等に即時出力することを想定\\nERROR\\nエラー。予期しないその他の実行時エラー。コンソール等に即時出力することを想定\\nWARN\\n警告。廃要素となったAPIの使用、APIの不適切な使用、エラーに近い事象など、実行時に生じた異常とは言い切れないが正常とも異なる何らかの予期しない問題。コンソール等に即時出力することを想定\\nINFO\\n情報。実行時の何らかの注目すべき事象（開始や終了など）。コンソール等に即時出力することを想定。従ってメッセージ内容は簡潔に止めるべき\\nDEBUG\\nデバッグ用の情報。システムの動作状況に関する詳細な情報。コンソールではなくログ上にだけ出力することを想定\\nTRACE\\nトレース情報。更に詳細な情報。コンソールではなくログ上にだけ出力することを想定\\n設定ファイル[編集]\\nlog4jは、二つの方法で設定が可能である。一つはプロパティファイル、もう一つはXMLファイルである。両者とも、3つの主要なコンポーネント（ロガー、アペンダ、レイアウト）について定義することができる。ファイルにより設定を行うため、log4jを使用しているアプリケーションを変更することなく、ロギングをon/offできるという利点がある。たとえば、問題が発生するまではロギングをoffで動作させておき、設定ファイルを変更することで簡単にロギングを再開する、という使い方ができる。\\nロガー(Loggers)は論理的なログファイル名であり、Javaアプリケーションはこれらの名前を意識する。個々のロガーにて取得するログのレベル（FATAL、ERROR等々）はロガー毎に独立に設定できる。古いバージョンのlog4jでは、これらは「カテゴリ」と「優先度」と呼ばれていたが、現バージョンではそれぞれ「ロガー」と「レベル」と呼んでいる。\\nアペンダ(Appenders)は具体的な出力処理を行う。アペンダには様々な種類があり、それぞれ内容を表す名前が付いている。例えばFileAppender、ConsoleAppender、SocketAppender、SyslogAppender、NTEventLogAppenderなどがあり、SMTPAppenderというものさえある。任意のロガーには複数のアペンダを付与できるので、同じログ情報を例えばローカルのファイルと他のコンピュータ上のソケット(en)リスナに同時に出力する、などという使い方が可能。\\nレイアウト(Layouts)は一件ずつのログを整形するためにアペンダによって参照される。例えば行単位に出力するログを整形する方法としてPatternLayoutというものがあり、これはC言語のprintf関数によく似た書式指定子を使える。他にもHTMLLayoutやXMLLayoutなどがあり、これらはそれぞれHTMLやXMLの書式に整形したい場合に使える。\\n設定例[編集]\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE log4j:configuration PUBLIC\\n\\\"http://logging.apache.org/log4j/docs/api/org/apache/log4j/xml/log4j.dtd\\\">\\n<log4j:configuration>\\n<!-- アペンダとは出力先のことであり、例えばコンソールやファイルを指す。\\nアペンダの名前は好きに決めてよい。-->\\n<appender name=\\\"stdout\\\" class=\\\"org.apache.log4j.ConsoleAppender\\\">\\n<layout class=\\\"org.apache.log4j.PatternLayout\\\">\\n<param name=\\\"ConversionPattern\\\"\\nvalue=\\\"%d{ABSOLUTE} %5p %c{1}:%L - %m%n\\\" />\\n</layout>\\n</appender>\\n<!-- 'org.springframework'カテゴリのロガーは、infoレベル以上のメッセージのみロギングする。\\nもしロガーをクラス名で検索し（例：Logger.getLogger(AClass.class)）AClassが\\nspringframework.orgパッケージに属するなら、そのロガーはこのカテゴリに属する。-->\\n<logger name=\\\"org.springframework\\\">\\n<level value=\\\"info\\\"/>\\n</logger>\\n<!-- springは原則としてinfo以上のログしか取らないが、PropertyEditorRegistrySupportクラスについては\\nデバッグログも欲しい-->\\n<logger name=\\\"org.springframework.beans.PropertyEditorRegistrySupport\\\">\\n<level value=\\\"debug\\\"/>\\n</logger>\\n<logger name=\\\"org.acegisecurity\\\">\\n<level value=\\\"info\\\"/>\\n</logger>\\n<root><!-- rootカテゴリ -->\\n<!-- 別途定義が無い限り、デバッグレベル以上の全てのメッセージをロギングする。-->\\n<!-- 別途定義が無い限り、全てのログは「stdout」アペンダにてロギングされる。 -->\\n<level value=\\\"debug\\\" />\\n<appender-ref ref=\\\"stdout\\\" />\\n</root>\\n</log4j:configuration>\\n（訳注：この設定例中に出現する「カテゴリ」という用語と、「ロガー」の旧称としての「カテゴリ」との関係は不詳。）\\nログビューア[編集]\\nApacheにはChainsaw（en)という別プロジェクトが存在しており、これはlog4jにて生成されたログファイルを利用する。ChainsawはJavaベースのGUIビューアであり、豊富な機能を持つ。Chainsawもlog4jに類似した設定ファイルを使用する。log4j向けのビューアは他にもあるが（例：log2webオープンソースかつウェブベース）、Chainsawに比較して機能が少ない。\\n外部リンク[編集]\\nポータル FLOSS\\nLog4j日本語公式サイト\\nLog4j 1.1.3 Javadocs 日本語訳\\n杉浦ホームページ - Log4J徹底解説\\nポート[編集]\\nLog4cxx - C++用apache port\\nLog4plsql - Oracle PL/SQL用port\\nLog4c - C言語用port\\nLog4perl - Perl用port\\nLog4js - JavaScript用port\\nlogging - log4jの影響を受けたPython公式ロギングモジュール\\nLog4r - log4jの影響を受けたRubyロギングモジュール\\nLog4net - Microsoft .NET Framework用port\\nlog4php PHP用port\\nlog4sh Unixシェル（sh, bash, dash, kshなど）用port\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Log4j&oldid=47254914」から取得 \\nカテゴリ: Apacheソフトウェア財団オープンソース\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nCatalà\\nDeutsch\\nEnglish\\nEspañol\\nMagyar\\nItaliano\\n한국어\\nPolski\\nPortuguês\\nRomână\\nРусский\\nリンクを編集\\n最終更新 2013年4月8日 (月) 19:51 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b3a"},"body":"Riak\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n移動: 案内、\t\t\t\t\t検索\\nRiak\\n開発元\\nBasho Technologies\\n初版\\n2009\\n最新版\\n1.3.0 / 2013年2月21日（4か月前） （2013-02-21）\\nプログラミング言語\\nErlang, C, C++, some JavaScript\\n対応OS\\nLinux, BSD, Mac OS X, Solaris\\nプラットフォーム\\nIA-32, x86-64\\nサポート状況\\nActive\\n種別\\nDatabase\\nライセンス\\nApache License 2.0\\n公式サイト\\nwiki.basho.com\\nテンプレートを表示\\nRiak[1] は Amazon Dynamo の論文 [2] に基づいて実装されている NoSQL データベース。\\nRiak はバックエンドとなるシャードパーティションストレージが差し替え可能な構成であり、デフォルトのバックエンドストレージは Bitcask である[3]。また MapReduce 機構を持ちネイティブで JavaScript (SpiderMonkey ランタイム) と Erlang、言語ドライバの追加で Python, Java, PHP, Ruby のような様々な言語をサポートしている[4]。\\n2012年2月21日、Basho は Riak v1.1 をアナウンス。Riak 1.1 では Riaknostic、エラーのロギングとレポートの強化、大規模クラスタに対する弾性の改善、Riak Control と呼ばれる新しい GUI とモニタリングインターフェースが導入された。\\n2012年3月27日、Basho は Riak CS (Cloud Storage) をリリース。Riak CS は Riak 上でのマルチテナンシー、パフォーマンス計測、LOB のサポート、S3 互換 API を提供。\\nBasho は 2013年2月21日に Riak 1.3 の一般的な有用性をアナウンス [5]。\\nRiak はフォーチュン 50 カンパニーのうち 25% 以上を含む世界中の数千社で導入されている[6]。採用企業には Symantec, Best Buy, Workday, Yahoo! JAPAN, Voxer, Braintree, Bump, Boeing, Comcast, AOL, Ask.com, Yammer, Yandex, AT&T, Datapipe[7] などがある。\\nReferences[編集]\\n^ “Riak: An Open Source Scalable Data Store” (2010年11月28日). 2011年10月13日閲覧。\\n^ Dynamo: Amazon’s Highly Available Key-value Store, SOSP 2007\\n^ “Basho: Bitcask”. Riak Wiki. 2013年3月9日閲覧。\\n^ “Riak Client Libraries and Community Code”. 2011年3月19日閲覧。\\n^ “Riak Amps Up Multi-Data Center Replication with version 1.2”. 2013年2月21日閲覧。\\n^ “GigaOM: Basho takes aim at more enterprises with upgrades”. 2013年3月9日閲覧。\\n^ “Riak Customers”. Riak. 2013年2月21日閲覧。\\nExternal links[編集]\\n公式ウェブサイト\\nOfficial wiki\\nBasho website\\nBashoジャパン株式会社 Webサイト\\nGigaOM: Basho arms would-be Amazon killers with AWS-compatible storage\\nNetCircle: Using Riak at NetCircle\\nRiak at AOL\\nRiak at Temetra for Smart Metering\\nUsing Riak for Ranking Collection at SEOmoz\\nUsing Riak at Github on Rackspace Cloud\\nSearching with RiakSearch at inagist.com\\nRiak and Scala at Yammer\\nRiak in Production at Voxer\\nRiak Benchmarks on Joyent Cloud\\nAirbrake migration from MongoDB to Riak\\nこの項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。\\n「http://ja.wikipedia.org/w/index.php?title=Riak&oldid=47500121」から取得 \\nカテゴリ: クラウドコンピューティングNoSQLデータベースJavaScript隠しカテゴリ: ソフトウェア関連のスタブ\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nDeutsch\\nEnglish\\nFrançais\\nРусский\\nУкраїнська\\nリンクを編集\\n最終更新 2013年4月17日 (水) 06:54 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
{"_id":{"$oid":"51dcf3b9ee126e2fca110b39"},"body":"Apache HBase\\n出典: フリー百科事典『ウィキペディア（Wikipedia）』\\n（HBaseから転送）\\n移動: 案内、\t\t\t\t\t検索\\nApache HBase\\n開発元\\nApache Software Foundation\\n最新版\\n0.94.1 / 2012年8月8日（9か月前） （2012-08-08）\\nプログラミング言語\\nJava\\n対応OS\\nクロスプラットフォーム\\nサポート状況\\nActive\\n種別\\n列指向データベースマネジメントシステム\\nライセンス\\nApache License 2.0\\n公式サイト\\nhttp://hadoop.apache.org/hbase/\\nテンプレートを表示\\nApache HBaseはオープンソースの、列指向、分散データベースであり、 GoogleのBigTableをモデルとし、Javaにより書かれている。Apacheソフトウェア財団のHadoopプロジェクトの一部として開発され、HDFS (Hadoop Distributed File System)の上で実行され、Hadoopに対しBigTableのような機能を提供する。\\nHBaseはBigTable論文に従い圧縮、インメモリ処理の機能、および各列ごとにブルームフィルタを持っている。 [1] HBaseにおけるテーブルはHadoop上のMapReduceジョブの入出力として機能し、Java APIのほか、REST、Avro、ThriftといったゲートウェイAPIを通じアクセスが可能である。\\nHBaseは、古典的なSQLデータベースを直接置き換えるものではないが、近年ではパフォーマンスが向上し、FacebookのMessaging Platformなど、データ駆動型のWebサイトでも使用されている。\\n目次\\n1 歴史\\n2 参考文献\\n3 関連項目\\n4 外部リンク\\n歴史[編集]\\nHBaseはPowerset社において自然言語処理を行うため、大規模データの処理を行う必要があり、プロジェクトとして始まった。今はApacheのトップレベルプロジェクトであり、注目を集めている。[2]\\n参考文献[編集]\\n^ Chang, et al. (2006). Bigtable: A Distributed Storage System for Structured Data\\n^ Powerset Blog\\n関連項目[編集]\\nBigTable\\nHypertable - C++実装 [1]\\n外部リンク[編集]\\nHBase公式サイト\\n日本語訳(あしたのオープンソース研究所)\\nHadoop公式サイト\\n日本語訳(あしたのオープンソース研究所)\\nHbase解説\\n表・話・編・歴\\nApacheソフトウェア財団\\nTop level Projects\\nApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeans\\nApache Commons\\nAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFS\\nApache DB\\nDerby - Torque - DdlUtils - JDO\\nApache Portals\\nJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4J\\nApache Lucene\\nLucene Java - Solr - Nutch - Lucene4c - Lucy\\nApache XML\\nXalan - Xerces\\nApache XML Graphics\\nBatik - FOP - XMLGraphicsCommons\\nApache Logging\\nLog4j - Log4Cxx - Log4Perl - Log4PLSQL\\nApache Hadoop\\nHadoop - HDFS - Avro -ZooKeeper\\nApache Incubator\\nXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOffice\\nApache Attic\\n開発終了\\nHarmony - AxKit - iBATIS - ORO - Jakarta Project\\nLicense: Apache License - Website: www.apache.org\\n「http://ja.wikipedia.org/w/index.php?title=Apache_HBase&oldid=46782727」から取得 \\nカテゴリ: NoSQLデータベースデータベース管理システムApacheソフトウェア財団\t\t\t\t\t\t\t\t\t\t\t\t\\n案内メニュー\\n個人用ツール\\nアカウント作成ログイン \\n名前空間\\nページ\\nノート\\n変種\\n表示\\n閲覧\\n編集\\n履歴表示\\n操作\\n検索\\n案内\\nメインページ\\nコミュニティ・ポータル\\n最近の出来事\\n新しいページ\\n最近の更新\\nおまかせ表示\\n練習用ページ\\nアップロード (ウィキメディア・コモンズ)\\nヘルプ\\nヘルプ\\n井戸端\\nお知らせ\\nバグの報告\\n寄付\\nウィキペディアに関するお問い合わせ\\nツールボックス\\nリンク元\\n関連ページの更新状況\\nファイルをアップロード\\n特別ページ\\n印刷用バージョン\\nこの版への固定リンク\\nページ情報\\nこのページを引用 \\n他言語版\\nEnglish\\nفارسی\\nFrançais\\nMagyar\\nItaliano\\nPortuguês\\nРусский\\n中文\\nリンクを編集\\n最終更新 2013年3月20日 (水) 05:12 （日時は個人設定で未設定ならばUTC）。\\nテキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。\\nプライバシー・ポリシー\\nウィキペディアについて\\n免責事項\\nモバイルビュー\\n"}
