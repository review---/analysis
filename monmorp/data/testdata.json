{ _id:ObjectId("51dbd3df8b6a6bae31d6580b"),body:"Hypertable 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Hypertableファイル:Hypertable Logo.png最新版0.9.6.4 / 2012年9月19日（9か月前） （2012-09-19）プログラミング言語C++対応OSCross-platformサポート状況Active種別Column oriented databaseライセンスGNU General Public License 2.0公式サイトhttp://www.hypertable.org/テンプレートを表示HypertableはオープンソースのBigTable互換プロジェクトである。このプロジェクトはGoogle社のBigTable論文に記載されている概念、及び数年およぶおよび大規模データ処理タスクに取り組んだエンジニアの経験に基づいている。スポンサー[編集]HypertableはZvents社において社内ソフトウェアとして開発され、最近百度社が新規スポンサーとなった。関連項目[編集]BigTableHBase外部リンク[編集]公式プロジェクトページGoogle Codeプロジェクトページこの項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。  「http://ja.wikipedia.org/w/index.php?title=Hypertable&oldid=47270388」から取得  カテゴリ: NoSQLデータベースオープンソースデータベース管理システム隠しカテゴリ: 壊れたファイルへのリンクがあるページソフトウェア関連のスタブ     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   English リンクを編集        最終更新 2013年4月9日 (火) 10:15 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d6580c"),body:"BigTable 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  BigTable（ビッグテーブル）とは、Googleの大規模なサーバ上の大量のデータを管理する為に設計されたデータベースシステムである。Googleの分散ストレージ・システムを支えている。目次1 特徴2 技術3 他の実装4 関連事項5 参考文献6 外部リンク特徴[編集]BigTableは、データ圧縮された高パフォーマンスのプロプライエタリなデータベースシステムである。Google File System（GFS）やChubby Lock Service、その他のいくつかのGoogleのプログラムで構築されている。今のところGoogle以外には供給されていない。2004年から作成され[1]、現在はMapReduce（BigTableに格納されたデータの生成や修正にしばしば使われている）[2]やGoogle Reader[3]、Google マップ[4]、Google Print、「My Search History」、Google Earth、Blogger、Google Code hosting, Orkut[4] 、YouTube[5]のようないくつものGoogleのアプリケーションで使用されている。Googleが自社のデータベースを開発する理由はコスト、スケーラビリティ、パフォーマンス特性のより良いコントロールなどである[6]。技術[編集]BigTableは高速で超大規模な列指向DBMSである。行ではなく、列からの高速な読み込みに焦点を当てている。BigTableは数百から数千台のサーバのペタバイトまでのデータを扱い、システムにサーバを簡単に増設して、再設定なしにそれらのリソースを自動的に利用し始めるように設計されている[7] 。各テーブルは多次元である。1つ1つのフィールドはその時点のスナップショットを持ち、バージョニングを行う事が出来る。テーブルはGFSに最適化されており、大きなテーブルは複数のTablet segment（タブレットセグメント）に自動的に分割される。分割はタブレットが200メガバイトのサイズになるように行の境界で行われる。サイズが特定の限界を超える兆候が見られた場合、テーブルはBMDiffとZippyアルゴリズムを使用して圧縮される。これらはLZWより圧縮率で劣るが、計算量で勝っている。タブレットのGFS内の位置（サーバのIPとPort）は、「META1」タブレットと呼ばれる複数の特別なタブレットにデータベースエントリとして記録されている。META1タブレットは1つだけある「META0」タブレットを照会する事で作成される。「META0」タブレットは通常は１つのマシンを占有している。「META1」タブレットの位置に関してクライアントから頻繁に問い合わせを受けるからである。「META1」タブレットはそれ自体が、実際のデータの位置についての答えを持っている。GFSマスターサーバのように、META0は通常はボトルネックにはならない。META1の位置を発見・送信する為に必要なプロセッサ時間と帯域はごく僅かである。クライアントは積極的に位置をキャッシュして、照会を必要最低限にするからである。他の実装[編集]Hadoopプロジェクトは、BigTableの現在の実装を目指して改良を加えられている。HBaseと呼ばれている。\"Just as Bigtable leverages the distributed data storage provided by the Google File System, Hbase will provide Bigtable-like capabilities on top of Hadoop.\"Hypertable関連事項[編集]Google App EngineMapReduce列指向データベースマネジメントシステムエラー忘却型コンピューティング参考文献[編集]^ \"First an overview. BigTable has been in development since early 2004 and has been in active use for about eight months (about February 2005).\" Google's BigTable^ \"Bigtable can be used with MapReduce, a framework for running large-scale parallel computations developed at Google. We have written a set of wrappers that allow a Bigtable to be used both as an input source and as an output target for MapReduce job\". pg 3 of \"Bigtable: A Distributed Storage System for Structured Data\", 2006^ \"Reader is using Google's BigTable in order to create a haven for what is likely to be a massive trove of items.\" Official Google Reader blog.^ a b \"There are currently around 100 cells for services such as Print, Search History, Maps, and Orkut.\" Google's BigTable^ \"Their new solution for thumbnails is to use Google’s BigTable, which provides high performance for a large number of rows, fault tolerance, caching, etc. This is a nice (and rare?) example of actual synergy in an acquisition.\" YouTube Scalability Talk^ \"We have described Bigtable, a distributed system for storing structured data at Google....Our users like the performance and high availability provided by the Bigtable implementation, and that they can scale the capacity of their clusters by simply adding more machines to the system as their resource demands change over time...Finally, we have found that there are significant advantages to building our own storage solution at Google. We have gotten a substantial amount of flexibility from designing our own data model for Bigtable.\" from the Conclusion of \"Bigtable: A Distributed Storage System for Structured Data\", 2006^ *\"Database War Stories #7: Google File System and BigTable\"外部リンク[編集]丸山先生レクチャーシリーズ第3回リポート：クラウドのデータサービスを掘り下げる（ITmedia）講演資料表・話・編・歴  人物会長エリック・シュミット取締役/技術部門担当社長セルゲイ・ブリン取締役/製品部門担当社長/CEOラリー・ペイジCFOパトリック・ピシェット（英語版）取締役ジョン・ドーア - ラム・シュリラム（英語版） - ジョン・ヘネシー - アーサー・レビンソン（英語版） - ポール・オッテリーニ - シャーリー・ティルマン（英語版） - アン・メイザー（英語版） サービス検索サービス （ページランク）ブックス - ソースコード検索 - デスクトップ検索 - Finance - ショッピング - 画像検索 - マップ（ストリートビュー） - ニュース - News Archive Search - Patents - Scholar - Trends - ビデオ - ウェブ検索 - GOOG-411広告AdSense - AdWords - Analytics - Checkoutコミュニケーション & パブリッシングアラート - Blogger - カレンダー - ドキュメント - Gmail - Music - Google+ - グループ - iGoogle - JotSpot - Knol - ノートブック - Orkut - Page Creator - Panoramio - リーダー - Voice - YouTubeアプリケーションデスクトップ検索 - Earth - パック - Picasa - SketchUp - トーク - ツールバー - Chrome - 日本語入力開発ツールCode - グーグルボット - Guava - Guice - KML - MapReduce - Summer of Code - Web ToolkitプラットフォームApp Engine - Apps - BigTable - Dart - Gears - GFS - Go - Health - OpenSocialオペレーティングシステムAndroid - Chrome OSファイルフォーマットWebM - WebP 企業情報概要買収 - 歴史 - 批判 - 中国版 - Google.org - Googleplex銘柄記号(NASDAQ: GOOG)、(LSE: GGEA)歳入: 106億USドル （2006年）従業員数13,748名（2007年6月30日）ウェブサイトwww.google.com  「http://ja.wikipedia.org/w/index.php?title=BigTable&oldid=46753653」から取得  カテゴリ: Googleデータベース     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Deutsch English Español فارسی Français Italiano Polski Português Русский 中文 リンクを編集        最終更新 2013年3月19日 (火) 22:45 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d6580d"),body:"Apache Cassandra  出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Apache Cassandra作者Avinash Lakshman, Prashant Malik開発元Apache Software Foundation初版2008最新版1.1.0 / 2012年4月24日（14か月前） （2012-04-24）プログラミング言語Java対応OSCross-platform対応言語英語サポート状況Active種別key-value storeライセンスApache License 2公式サイトcassandra.apache.orgテンプレートを表示Apache Cassandra（アパッチ カサンドラ）は、オープンソースの分散データベース管理システムである。元はFacebook社において大規模データの格納のために開発されたものである。Facebookのデータチームを率いるJeff HammerbacherはCassandraをAmazon DynamoDBのようなインフラストラクチャ上で動作するBigTableデータモデルであると表現している。Cassandraはイベンチュアル・コンシステンシーにより構造化されたキー・バリュー型データストアを提供する。キーは複数の値にマッピングされ、これらはcolumn familyとしてグルーピングされる。column familyはCassandraデータベースが作成される際は固定されているが、後にfamilyに対し列を追加することは可能である。さらに、列は特定のキーにのみ追加されるので、どのfamilyにおいても異なるキーは任意の列数を持つことができる。各キーに対応するcolumn familyの値は連続して記録され、このことによりCassandraは列指向データベースマネジメントシステムと行指向データベースシステムの複合型であると言える。Facebook社は2008年7月にCassandraをオープンソースソフトウェアとして公開した。2009年3月からApache Incubatorプロジェクトとなり、2010年2月にはトップレベルプロジェクトに引き上げられた。外部リンク[編集]公式ウェブサイト日本語訳(あしたのオープンソース研究所)Cassandra Project WikiPresentation on Cassandra at SIGMOD 2008表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Apache_Cassandra&oldid=47262636」から取得  カテゴリ: NoSQLデータベースデータベース管理システムApacheソフトウェア財団     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Deutsch English Español Français עברית Italiano Polski Português Русский Українська 中文 リンクを編集        最終更新 2013年4月9日 (火) 03:41 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d6580e"),body:"Firebird 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  この項目では、リレーショナルデータベース管理システムについて記述しています。その他の用法については「ファイヤーバード」をご覧ください。Firebird最新版2.5.2 / 2012年11月07日対応OSWin32, Win64, Linux x86, Linux AMD64, MacOS X, Solaris, HP-UX種別RDBMSライセンスIPL, IDPL公式サイトhttp://www.firebirdsql.org/テンプレートを表示Firebird（ファイアバード）は、InterBaseから派生したオープンソースのリレーショナルデータベース管理システム。オープンソースで開発されており、Mozilla Public Licenseを元にしたInterBase Public License（商用・非商用問わず利用できるが、オリジナル〈ここではFirebirdを指す〉のソースコードを改変したプログラムを利用する場合は、その変更箇所のコードを公開しなくてはならない）によってライセンスされている。目次1 特徴2 インストール3 歴史4 管理ツール5 受賞6 外部リンク7 脚注特徴[編集]PostgreSQLのMVCC（多版同時実行制御）と同様のMGA（マルチ・ジェネレーション・アーキテクチャー）による高度なトランザクション管理機能を有する。ストアドプロシージャや、トリガー、UDF（ユーザー定義関数）等の商用データベースに通常備わっている機能を網羅している。ただしオブジェクトの命名則が厳しい、プライマリキーのAUTO INCREMENTが用意されていないなど、やや旧式な仕様もある。なおPHPなどアプリケーションからの接続には、InterBase対応の関数・ライブラリを流用できる。2007年6月に開催された「オープンソースカンファレンス2007.DB」で行われた公開ベンチマークテストでは高評価を得て、PostgreSQL、MySQLに続く第3のオープンソースリレーショナルデータベース管理システムとして注目されているが、解説書籍の出版が少ない、レンタルサーバではサポートされていないなど日本国内での認知度はまだまだ低い。特筆すべき機能として、有償ではあるが米IBフェニックス社の「IBPレプリケータ」を導入し、GUI上から設定することにより、IPネットワークで接続された複数のFirebird同士で同期処理を行なうことが可能となる。これはトリガーの機能を応用したもので、更新された箇所を同期処理用のテーブルに蓄積し、蓄積内容を設定された別のFirebirdに対し定期的に送信すると言うものである。この他にも、Firebirdのレプリケーションソフトは多数存在する。また、RDBMS側からクライアントへのコールバックを実現する、イベントアラータはFirebirdの初期開発者であるJim Starkeyの発案によるものである。インストール[編集]Windows版には専用のインストーラが用意されている。Linux版もダウンロードパッケージに含まれる「install.sh」を実行すれば自動的に「/opt」以下にインストールされる。ただしisqlコマンドを使う場合、実行環境（Fedoraなど）によっては同名の全く別のプログラムが起動してしまうので、「isql2」など重複しない別名のシンボリックリンクを作成しておく必要がある。歴史[編集]2000年6月25日、Borland 社から InterBase 6.0 のソースコードが公開され[1][2]、それから1週間のうちにSourceForge に Firebird プロジェクトが登録された[3][4]。2002年3月11日、Firebird 1.0 が Linux, Windows, Mac OS X 向けにリリースされた[5]。それから2ヵ月後には、Solaris, FreeBSD 4, HP-UX へも移植された[6]。Mozilla Foundationの新ブラウザが登場した際、一時期 \"Mozilla Firebird\" の名称を使用したため多少の混乱があったが、2004年2月10日にmozilla.orgがブラウザの名称をMozilla Firefoxに変更したことで決着した。[1]2004年2月23日、Firebird 1.5 がリリースされた[7]。 ポーティングのため2000年よりソースコードをC言語からC++へ変更する開発が行われてきたが、このリリースは初めて C++ コードベースを使った安定版である。 クエリ最適化の改良、SQL92準拠の式、SQL:1999 準拠の SAVEPOINT、明示的なロックが追加された[8]。2006年11月12日、Firebird 2.0 がリリースされた[9]。 64ビットアーキテクチャのサポート、FROM句での入れ子テーブル、ロック時のタイムアウトでの式の利用が追加された[10]。 さらに、バージョン 2.1 にて、データベーストリガ、再帰クエリ、SQL:2003準拠の MERGE 文が追加された[11]。2010年10月4日、Firebird 2.5 がリリースされた[12]。 これまでスレッドモデルで実装された Super Server と、プロセスモデルで実装された Classic Server の二つのサーバーモデルを並行して開発してきたが、バージョン 2.5 では新たに Super Classic と称するサーバーモデルが追加される。Super Classic 版では、Super Server版のボトルネックとなっていた統合型キャッシュを見直し、スレッド毎にキャッシュバッファを実装することで、これまで弱点とされてきたSMPへの対応を強化し、スケーラビリティが向上する予定である。 その他に、正規表現や外部データベースへの接続が追加された。[13]管理ツール[編集]FlameRobinDatabase MasteribWebAdmin受賞[編集]2009. SourceForge Community Choice Award: Best Project for enterprise. Finalist on Best Project and Best Project for Government.2007. SourceForge Community Choice Award: Best Project for enterprise, Best user support.外部リンク[編集]FirebirdプロジェクトホームFirebird日本ユーザー会FirebirdSQL Foundation有志によるFirebird SQLリファレンス [リンク切れ]FIREBIRD WIKI脚注[編集]^ “Inprise/Borland Introduces InterBase 6.0 Now Free and Open Source on Linux, Windows, and Solaris”. (2000年7月16日). オリジナルの2004年12月6日時点によるアーカイブ。. http://web.archive.org/web/20041206174134/www.borland.com/news/press_releases/2000/07_16_00_ib6.html 2009年1月29日閲覧。 ^ “Borland.com: Inprise/Borland Introduces Interbase 6.0 Now Free and Open Source on Linux”. Linux Today. 2009年1月29日閲覧。^ “Firebird History”. 2009年1月31日閲覧。^ Paul Reeves. “What's happening to InterBase”. Borland User Group. pp. 2. 2009年1月29日閲覧。^ “IBPhoenix Community News Archive” (2000年3月11日). 2009年1月29日閲覧。^ “IBPhoenix Community News Archive” (2000年4月11日). 2009年1月29日閲覧。^ “Firebird Relational Database 1.5 Final Out”. Slashdot. (2004年2月23日). http://developers.slashdot.org/article.pl?sid=04/02/23/201230 2009年1月31日閲覧。 ^ Helen Borrie (2007年11月30日). “Firebird 1.5.5 Release Notes”. Firebird Project. 2009年1月31日閲覧。^ Dmitry Yemanov. “Firebird 2.0 Final Release Launches in Prague”. 2009年2月5日閲覧。^ Helen Borrie (2009年1月22日). “Firebird 2.0.5 Release Notes”. 2009年2月5日閲覧。^ Helen Borrie (2008年7月15日). “Firebird 2.1 Release Notes”. 2009年2月7日閲覧。^ Alexey Kovyazin. “Firebird 2.5 Introduces New Audit Features and Improved Scalability”. 2010年10月6日閲覧。^ Helen Borrie (2008年7月2日). “Firebird 2.5 Release Notes”. 2009年2月9日閲覧。  「http://ja.wikipedia.org/w/index.php?title=Firebird&oldid=48283915」から取得  カテゴリ: データベース管理システムオープンソース隠しカテゴリ: 外部リンクがリンク切れになっている記事/2011年10月     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   العربية Česky Dansk Deutsch English Español Suomi Français עברית Magyar Bahasa Indonesia Italiano 한국어 Nederlands Norsk bokmål Polski Português Русский Српски / srpski Svenska Türkçe Українська 中文 リンクを編集        最終更新 2013年6月25日 (火) 02:01 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d6580f"),body:"MySQL 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  MySQLLinux上で実行中のGUIフロントエンド MySQL Administrator開発元オラクル(サン・マイクロシステムズ)初版1995年05月23日 (1995-05-23)最新版5.6.12- 2013年6月3日（30日前） （2013-06-03）[1][±]最新評価版5.7.1 m11- 2013年4月23日（2か月前） （2013-04-23）[±]プログラミング言語C, C++対応OSクロスプラットフォーム種別RDBMSライセンスGPL または Commercial License公式サイトwww-jp.mysql.comdev.mysql.comテンプレートを表示MySQL（マイエスキューエル）は、オラクルが開発するRDBMS（リレーショナルデータベースを管理、運用するためのシステム）の実装の一つである。目次1 概要2 シェア3 ストレージエンジン4 トランザクション5 その他の機能6 ライセンス7 歴史8 利用状況9 プラットフォーム10 開発言語11 日本語処理12 MySQLの管理ツール13 脚注14 関連項目15 リンク概要[編集]オープンソースで開発されており、GNU GPLと商用ライセンスのデュアルライセンスとなっている。他の多くのオープンソースプロジェクトと異なり、スウェーデンの単一の営利企業「MySQL AB」によって保持されていた。2008年2月26日にMySQL ABがサン・マイクロシステムズに買収されたことによってサン・マイクロシステムズの所有となった。またトレードマークおよび著作権もサン・マイクロシステムズが所有していた。2010年1月27日、サン・マイクロシステムズはオラクルに買収された。シェア[編集]世界でもっとも普及しているオープンソース・データベースとして知られており[2]、市場シェアではPostgreSQLなどの他のオープンソース・データベースを圧倒している[3]。日本でも2009年になってPostgreSQLを超えるシェアを獲得している[4]。初期のMySQLで文字コードのサポートが悪かったのが影響したが、現在はEUC、SJIS、多言語面を含むUTF-8などをサポートしている。利用企業数の割合地域MySQLPostgreSQL調査機関世界82.1%27.1%451 Group (2009年)[5]日本60.5%51.9%IPA (2009年)[4]ストレージエンジン[編集]データの保存とアクセスを行うストレージエンジンがSQLパーサとは分離独立しており、用途に応じたストレージエンジンを選択できる「マルチストレージエンジン」方式を採用している。バージョン3.23.34以降で組み込まれているInnoDBストレージエンジンは、オープンソースソフトウェア企業のInnobase社が開発したストレージエンジンであり、高い堅牢性とMVCCによる高い並列性を兼ね備えており、あらゆるアプリケーションに対応出来る人気のストレージエンジンとなっている。InnoDBはメディア障害時の更新ログによるリカバリもサポートしている。また、InnoDB登場以前から搭載されているMyISAMストレージエンジンも検索が高速であり、更新よりも参照の頻度の高いWebアプリケーションなどで活用されている。全文検索が利用できるのも、MyISAMの利点である。以前はMyISAMの方が高速であると言われることが多かったが、InnoDBの性能改善が進んだことから、高速性を求めるためにMyISAMを利用するということも減ってきている。トランザクション[編集]MySQLでは、トランザクション管理はストレージエンジンの役割であり、トランザクションを利用したければ対応したストレージエンジンを使用すればよい。InnoDBは、ACIDに準拠したトランザクションをサポートしている。一方MyISAMでは、トランザクションをサポートしていない。トランザクションが必要でないシーンは徐々に減ってきているので、最近MyISAMの出番も減りつつあるようである。その他の機能[編集]副次問い合わせ（サブクエリ）は、バージョン4.1以降でサポートされている。バージョン5.0以降では、SQL99にストアドプロシージャ、ビュー、トリガーが実装され、機能の面でも他のRDBMSに追いつきつつある。その他、標準でマスタスレーブ方式のレプリケーション機能を備えており、堅牢なデータストレージの構築が比較的容易である。ライセンス[編集]MySQLは GPL とコマーシャルライセンスのデュアルライセンス方式で提供されている[6]。基本的に、MySQLのサーバ本体とクライアントライブラリはGPLで提供される。このため、MySQLを改造し、それを再頒布する場合は、GPLに従う必要がある。また、GPLのクライアントライブラリを利用してMySQLに接続するアプリケーションを開発した場合、そのアプリケーションもGPLライセンスとしなければならない可能性がある。ただし、クライアントライブラリに関しては、アプリケーションが既定のオープンソースライセンスで公開されるのであれば、GPL以外のオープンソースライセンスで再頒布することも可能である[7]。サポートやツールが提供される有料サブスクリプションのMySQL Standard Edition, Enterprise Editionでは、コマーシャルライセンス版のバイナリが提供される。[8]。コマーシャルライセンス版では、GPLによる制約は受けない。歴史[編集]1995年5月23日 - 内部的に MySQL の最初のバージョンがリリース。1998年1月8日 - 最初の Windows 版がリリース。Windows 95 や NT 向け。2001年1月 - Version 3.23 プロダクションリリース。ベータ版は2000年6月にリリース。2003年3月 - Version 4.0 プロダクションリリース。ベータ版は2002年8月にリリース。union搭載。2004年10月 - Version 4.1 プロダクションリリース。ベータ版は2004年6月にリリース。R木、B木、サブクエリー、prepared statements搭載。2005年10月 - Version 5.0 プロダクションリリース。ベータ版は2005年3月にリリース。cursors, stored procedures, triggers, views, XA transactions搭載。2008年2月6日 - サンマイクロシステムズがMySQL ABを買収。2008年7月1日 - サン・マイクロシステムズ株式会社がMySQL株式会社（MySQLの日本法人）を吸収合併。2008年11月 - Version 5.1 プロダクションリリース。ベータ版は2005年11月にリリース。event scheduler, partitioning, plugin API, row-based replication, server log tables搭載。2010年6月1日 - 日本オラクル株式会社がサン・マイクロシステムズ株式会社を統合。2010年12月15日 - Version 5.5 プロダクションリリース(5.5.8よりGA)。デフォルトのストレージエンジンが InnoDB になり、マルチコアCPUでのパフォーマンスが改善した[9]。ベータ版(Version 5.4)は2009年4月にリリース。2013年2月5日 - Version 5.6 プロダクションリリース。InnoDB、NoSQLの機能を強化[10][11]。利用状況[編集]世界的にはこのMySQLの方が、ライバルであるFirebirdやPostgreSQLよりも多く使用されており、ウェブサイトの構築に用いるソフトウェア環境として、LAMP (Linux, Apache, MySQL, Perl・PHP・Python) の略称が知られている。Yahoo!、Facebook、Twitterなどの巨大なウェブサイトでの適用例も多く、WebアプリケーションのXOOPS、WordPress、SugarCRMなどもバックエンドのデータベースとしてMySQLを利用している。また、ウィキペディアのためのソフトウェアであるMediaWikiでもこのソフトウェアを使用している。他にも、社内用WebアプリケーションのサイボウズもMySQLを利用しており、MySQLを改造するため、有償契約をしている。世界的な傾向に反し、以前日本ではPostgreSQLの適用例がMySQLを上回っていた。2003年の時点で、オープンソース系のデータベースとして、日本では8割以上がPostgreSQLだった。その理由として、以下の理由が指摘されている。欧米において、MySQLの広報が積極的だった。MySQLの日本ユーザ会の立ち上げが遅れた。日本でのPHPのバイブル本である「PHP徹底攻略」と「PHP4徹底攻略」がPostgreSQLとの接続を想定して記述されていた。PostgreSQLの開発に日本人であるSRAの石井達夫が関わっていた。彼は上記二冊の執筆も一部担当している。Javaを開発するSun Microsystemsが、MySQLよりもPostgreSQLを推していた。ただしSun MicrosystemsがMySQLを買収したことにより、今後はMySQLをより重視していく可能性が高い。かつてのMySQLでUnicodeのサポートが不十分だった。アプリケーションの頒布形態によってはGPLではなく商用ライセンスを選択しなければならないケースがある。だが、そのような状況は徐々に変遷し、2009年の段階ではMySQLのほうがPostgreSQLよりも多く利用されているという報告がある。[12][13]プラットフォーム[編集]MySQL 5.5は次のプラットフォームでサポートされている。[14]Solaris 10 以降(SPARC (64 bit), x86_64, x86)FreeBSD 7 以降LinuxMac OS X 10.5 以降Microsoft Windows XP 以降MySQL 5.0は以下のプラットフォームでサポートされている。AIXHP-UXSolaris 8 以降SCO OpenServerSCO UnixWareTru64 UNIXBSD/OSFreeBSDNetBSDOpenBSDLinuxMac OS X 10.3 以降Microsoft Windows 2000 以降開発言語[編集]C, C++, Eiffel, Smalltalk, Java(JNI), Lisp, Perl, PHP, Python, Ruby, TclはMySQLのAPIを介してデータベースにアクセスできる。またODBCインターフェース (MyODBC) もサポートされている。MySQL自体はCおよびC++で開発されている。埋め込みSQLによる開発はサポートされていないため、オープンソースプロジェクトのOpen ESQL等が利用される[15]。日本語処理[編集]MySQL5は、sjis (Shift_JIS)、cp932（Microsoftコードページ932）、utf8（UTF-8（3バイトまで））、utf8mb4（UTF-8（4バイトまで/MySQL5.5以降でサポート））、ujis (EUC-JP) といった文字セットを指定することで、日本語の文字を含む入出力を正しく扱うことができる。sjisは、JIS X 0201およびJIS X 0208に準じたものであるが、同じ「Shift_JIS」でも、Windows環境で使用される文字の一部を正しく扱えない場合がある。これは、Windowsでは、前記の規格以外の拡張文字を含む、拡張されたShift_JISを使用しているためである。これらの文字をMySQLで正しく扱うには、sjisではなくcp932を指定する。たとえば、Microsoft AccessからUTF-8で格納するテーブルにODBCリンク経由でアクセスする場合は、MyODBCの文字セット設定をcp932にしておけば、正しく入出力できる。cp932がMySQLでサポートされたのは4.1.12からであり、それまでは、「sjisで格納し、sjisで入出力」するという設定を行い、入出力時の文字コード変換を避けることで、Windowsの拡張シフトJISで問題が起きないようにする、というのが、日本国内における「常識」であった。cp932のサポートの前にはすでにUnicodeがサポートされていたが、それらを積極的に使用する人はあまりいなかった。なぜなら、Unicodeで格納するテーブルに対してsjisで入出力を行うと、Windows環境において拡張文字が適切に変換されず文字化けが発生するため、それが「Unicode対応が不完全」「Unicodeはまだ使いものにならない」という評価を生む一因となっていたからである。Ruby on Rails、CakePHPのデフォルトはutf8だが、データベース接続設定でencodingをutf8と明示的に使用宣言しておく必要がある。MySQLの管理ツール[編集]MySQL Workbench(5.2以降)phpMyAdminphpMyBackupProNavicat for MySQLMySQL AdministratorDatabase MasterSequel ProAdminer脚注[編集][ヘルプ]^ “D.1. Changes in Release 5.6.x (Production)” (英語). MySQL 5.6 Release Notes. MySQL.com (2013年6月3日). 2013年6月3日閲覧。^ http://db-engines.com/en/ranking^ http://www-jp.mysql.com/why-mysql/marketshare/^ a b http://www.ipa.go.jp/software/open/ossc/seika_1004.html^ 451 Group survey highlights user concerns over Oracle’s proposed ownership of MySQL^ MySQLのライセンスポリシー^ FOSS License Exception^ MySQL Editions^ 1.5. What Is New in MySQL 5.5^ Oracle>About>Press Room>Oracle Announces General Availability of MySQL 5.6^ Oracle Japan>Media centre home>ニュースリリース>MySQL5.6の一般提供開始を発表^ http://ossipedia.ipa.go.jp/doc/201^ http://www.itmedia.co.jp/enterprise/articles/1005/12/news011.html^ http://www-jp.mysql.com/support/supportedplatforms/database.html^ Open ESQL関連項目[編集]ポータル FLOSSMySQL Cluster (en:MySQL Cluster)MySQL Workbench (en:MySQL Workbench)ストレージエンジンMyISAM (en:MyISAM)InnoDBAria(以前の名称はMaria)MySQL Archive (en:MySQL Archive)MySQL Federated (en:MySQL Federated)アプリケーションとパッケージMediaWiki - MySQLをバックエンドに用いることが可能である。XAMPPMySQLからフォークしたプロジェクトMariaDBDrizzle (en:Drizzle)リンク[編集]ウィキメディア・コモンズには、MySQLに関連するカテゴリがあります。MySQL.com日本MySQLユーザ会MySQL リファレンスマニュアルPlanet MySQL 日本語版（ブログ集約サイト）MySQL developmentMySQL WeblogsMySQL Performance BlogFree MySQL 5 providerMarkus Popp's blogAndrew Gilfrin's blogRoland Bouman's blogBeat Vontobel's blogGiuseppe Maxia's blogJay Pipe's blogMike Kruckenberg's blogSheeri Kritzer's blogMySQL Database Administration Blogライセンスに関する FAQどのようにデータベースのMySQL Workbenchを使用して作成する - このチュートリアルではデータベースのMySQL Workbenchを使用して作成する方法について説明.表・話・編・歴サン・マイクロシステムズソフトウェアSolaris - OpenSolaris - SunOS - Java - JDS - JES - StarOffice（日本ではStarSuite）/OpenOffice.org - NIS/NIS+ - Sun ONE - NFS - ZFS - DTrace - Sun Grid Engine - MySQL - VirtualBox - Sun Java Directory Server - Sun Java System Web Server/Open Web Server - GlassFishハードウェアSun-1 - Sun-2 - Sun-3 - Sun386i - Sun-4 - SPARCstation - Sun Ultra series - Sun Enterprise - Sun Blade - Sun Fire - UltraSPARC T1 - SPARC - JavaStation - Sun Ray - Sun Modular Datacenter - Sun SPOT - SPARC Enterprise教育・研究Fortress - SCP - Sun COE関連人物ジョナサン・シュワルツ - アンディ・ベクトルシャイム - スコット・マクネリ - ビル・ジョイ - ビノッド・コースラ - ジェームズ・ゴスリン  「http://ja.wikipedia.org/w/index.php?title=MySQL&oldid=48316025」から取得  カテゴリ: MySQLデータベース管理システムオープンソースサン・マイクロシステムズオラクル     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Afrikaans العربية Azərbaycanca Български Bosanski Català Česky Dansk Deutsch Ελληνικά English Esperanto Español Eesti Euskara فارسی Suomi Français Gaeilge Galego עברית Hrvatski Magyar Հայերեն Bahasa Indonesia Italiano Taqbaylit Қазақша ភាសាខ្មែរ 한국어 Kurdî Lietuvių Latviešu Malagasy Македонски മലയാളം Монгол Bahasa Melayu မြန်မာဘာသာ Nederlands Norsk bokmål Occitan Polski Português Română Русский සිංහල Simple English Slovenčina Slovenščina Српски / srpski Svenska தமிழ் ไทย Türkmençe Türkçe Українська Oʻzbekcha Tiếng Việt Winaray 中文 リンクを編集        最終更新 2013年6月28日 (金) 07:18 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65812"),body:"Apache Tomcat  出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Apache Tomcat開発元Apache Software Foundation最新版7.0.42 / 2013年7月2日（7日前） （2013-07-02） [1]プログラミング言語Java対応OSクロスプラットフォームプラットフォームJavaプラットフォームサポート状況開発中種別Servlet containerHTTP webサーバーライセンスApache License 2.0公式サイトtomcat.apache.orgテンプレートを表示Apache Tomcat (アパッチ トムキャット) は、Java Servlet や JavaServer Pages (JSP) を実行するためのサーブレットコンテナ（サーブレットエンジン）である。Apache License, Version 2.0を採用したオープンソースソフトウェアであり、商用利用も多い[要出典]。バージョン 7.0 は、Java Servlet 3.0、JavaServer Pages 2.2対応で、Java 6 以降が必要[2]。2005年以降、Apacheソフトウェア財団のトップレベルプロジェクトのひとつであるApache Tomcat Project 内で開発されている [3]。それ以前はかつて存在していたJakartaプロジェクト内で開発されていた。目次1 構成2 リファレンス実装としてのApache Tomcat3 HTTPサーバーとの連携4 脚注5 外部リンク構成[編集]Tomcat 5.0から、Jasper2を含む。Catalina - Servlet コンテナCoyote - HTTPサーバーJasper, Jasper2 - JavaServer Pagesリファレンス実装としてのApache Tomcat[編集]サーブレットやJSPのオフィシャルなリファレンス実装に使用されてはいるが、リファレンス実装そのものではない。HTTPサーバーとの連携[編集]Apache Tomcat は安定して動作し、静的コンテンツのHTTPサーバーとしても使えるので単体で用いることもできる。また、Tomcat 以外のHTTPサーバーがHTTPリクエストを受け付け、必要に応じてサーブレットコンテナにリクエストを渡すという構成でHTTPサーバーと連携させて用いることもできる。ただし、別 HTTP サーバーとコネクタ連携をすると、Advanced IO (Comet) など一部の機能が使えなくなる。例えば、Apache HTTP Server とコネクタモジュールを用いて連携を行う場合、Apache Tomcat 側では mod_jk をコネクタとして配布している。また、Apache 2.2以降は mod_jk とは別な方法として、mod_proxy_ajp モジュールを用いる方法もある。脚注[編集][ヘルプ]^ “Tomcat 7.0のドキュメントのページ”. 2013年7月9日閲覧。 “Apache Tomcat 7.0.42のPGP署名”. 2013年7月9日閲覧。^ “Apache Tomcat Versions”. 2013年3月28日閲覧。^ “The Jakarta Site - News & Status - 2005 Oct-Dec”. 2013年7月9日閲覧。外部リンク[編集]Apache Tomcat表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Apache_Tomcat&oldid=48436459」から取得  カテゴリ: Apacheソフトウェア財団オープンソースJavaWebサーバ隠しカテゴリ: 出典を必要とする記述のある記事/2013年3月     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Català Česky Deutsch English Esperanto Español Français עברית Magyar Italiano Қазақша 한국어 Lietuvių Latviešu മലയാളം Nederlands Norsk bokmål Polski Português Русский Svenska தமிழ் తెలుగు ไทย Українська Tiếng Việt 中文 リンクを編集        最終更新 2013年7月9日 (火) 08:16 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65810"),body:"Hadoop 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  この「Hadoop」はFLOSSに関連した書きかけ項目です。この記事を加筆して下さる協力者を求めています（Portal:FLOSS）。Apache Hadoop開発元Apacheソフトウェア財団最新版1.2.0 / 2013年5月13日（51日前） （2013-05-13）[1]最新評価版2.0.5-alpha / 2013年6月6日（27日前） （2013-06-06）}[1]プログラミング言語Java対応OSクロスプラットフォームサポート状況Active種別分散ファイルシステムライセンスApache License 2.0公式サイトhttp://hadoop.apache.org/テンプレートを表示Apache Hadoopは大規模データの分散処理を支えるJavaソフトウェアフレームワークであり、フリーソフトウェアとして配布されている。[2]Hadoopはアプリケーションが数千ノードおよびペタバイト級のデータを処理することを可能としている。HadoopはGoogleのMapReduceおよびGoogle File System(GFS)論文に触発されたものである。HadoopはApacheのトップレベルプロジェクトの1つであり、世界規模の開発貢献者コミュニティによって開発され、使用されている。[3]目次1 アーキテクチャ1.1 Hadoop分散ファイルシステム1.2 ジョブトラッカーとタスクトラッカー: MapReduceエンジン1.3 他のアプリケーション2 主要なユーザ2.1 Yahoo!におけるHadoop2.2 他のユーザ3 Amazon EC2/S3サービスにおけるHadoop4 Sun Grid EngineにおけるHadoop5 参考文献6 脚注7 関連事項8 外部リンクアーキテクチャ[編集]Hadoopは、Hadoop がサポートするファイルシステムへのアクセスを提供するHadoop Commonで構成する。ここで、「Rack Awareness」とは、サーバクラスタの地理的位置を考慮した最適化の考えである。つまり、異なる地理的位置にあるサーバ間の網伝送(network traffic)を最小にするということである。[4] 2008年6月現在、下記のファイルシステムをサポートしている。HDFS: Hadoop独自のファイルシステムである。HDFSは各OSが提供するファイルシステム上で動作し、 数ペタバイトの容量まで拡張するよう設計している。Amazon S3: このファイルシステムは、Amazon Elastic Compute Cloud (EC2) 環境で構築したクラスタ上で動作する。なお、このAmazon S3 ファイルシステムはRack-awarenessが考慮されておらず、すべてリモートサイトで動作する。CloudStore（旧 Kosmos Distributed File System）: HDFSのようなRack-Awarenessなファイルシステム。FTP: すべてのデータをFTPによりアクセス可能なリモートサーバに格納する。Read-only HTTP and HTTPS.Hadoop分散ファイルシステム[編集]Hadoop分散ファイルシステム(HDFS)は大きなファイル（理想的には64MBの倍数[5]）を複数の計算機にまたがり格納することができる。HDFS はデータの複製を複数のホストに格納することで信頼性を確保しているため、各ホストはRAIDを必要としない。デフォルトのレプリケーション数3のとき、データは3つのノードに保存する。この場合、2つのデータを同じラック内のノードに、残りひとつを異なるラックに保存する。HDFSはデータノード (Data node) のクラスタにより構成する。データノードはそれぞれ、HDFS独自のブロック転送プロトコルによりデータブロックを転送する。データノードはまたHTTPによりデータを提供することができ、WEBブラウザ等のクライアントからのアクセスを処理できる。データノード間はお互いに通信し、データ再配置、データコピー、冗長性維持を行うことができる。HDFSはネームノード (Name node) と呼ばれる唯一の特殊なノードを必要とする。ネームノードは、HDFSにおけるsingle point of failureである。ネームノードがダウンした場合、ファイルシステムはオフラインとなる。その後ネームノードが復旧した際には、ネームノードは未実行のすべてのオペレーションをリプレイする必要がある。このリプレイ処理は、クラスタの規模が大きい場合、時に30分以上を要する場合もある。[6] 一方、HDFSはセカンダリ・ネームノードと呼ばれる機能を有している。この名前は、プライマリ・ネームノードがオフラインとなった時セカンダリ・ネームノードが代替するかのように誤解を与える。しかしながら実際は、セカンダリ・ネームノードは定期的にプライマリノードに接続し、その保存されているディレクトリ情報のスナップショットをダウンロードする。セカンダリ・ネームノードはプライマリ・ネームノードの編集ログを用い、最新のディレクトリ構造を作成する。HDFSは、通常のオペレーティングシステムにマウントできないことはまた制限のひとつである。ジョブ実行の前後にはしばしばHDFSとデータの入出力が必要になるが、マウントできないため不便である。LinuxなどいくつかのUNIXシステムでは、Filesystem in Userspaceによりこの問題を解決しているものもある。データの複製を3回行うことは高コストである。コスト軽減のため、HDFSの最近のバージョンではErasure符号をサポートし、同じファイルの複数のブロックを結合しパリティブロックを生成している。HDFSではこのパリティブロックを非同期で生成することにより、複製生成数を3から2に減らしている。これにより、必要とされる物理ストレージ領域が3倍から約2.2倍に減少しているとの報告がある。ジョブトラッカーとタスクトラッカー: MapReduceエンジン[編集]ファイルシステムの上にMapReduceエンジンが動作する。MapReduceエンジンはひとつのジョブトラッカーを持ち、クライアントアプリケーションはこのジョブトラッカーに向けてMapReduceジョブを投入する。ジョブが投入されると、ジョブトラッカーはクラスタ中の利用可能なタスクトラッカーに仕事を依頼する。この時、できるだけデータに近くで仕事が行われるように努力を払う。Rack awareなファイルシステムにより、ジョブトラッカーはどのノードがデータを保持しているか、そしてどのマシンが近くにあるかを知ることができる。これによりメイン・バックボーン・ネットワークの通信トラフィックを抑える。タスクトラッカーが落ちるかタイムアウトすると、その部分のタスクは再スケジュールされる。ジョブトラッカーが落ちると、実行中の仕事は失われる。Hadoopバージョン0.21にはチェックポイントの機能が加えられた。ジョブトラッカーはそれまでの結果をファイルシステムに記録する。ジョブトラッカーが起動した時には、そのように記録されたデータを探す。このため中断したところから仕事を再開することができる。それ以前のバージョンのHadoopでは、ジョブトラッカーが再開した時にはすべての実行中の仕事は失われる。このアプローチには以下の欠点が知られている。仕事のタスクトラッカーへの割り当てはとても単純である。各タスクトラッカーはある数の利用可能なスロットを持つ(例えば4スロット)。アクティブなMapまたはReduceタスク1つはスロットを1つ使用する。ジョブトラッカーはデータに最も近い利用可能なスロットを持つタスクトラッカーに仕事を割り当てる。このとき割り当てたマシンの実際の負荷を考慮しないので、実際には利用できないかもしれない。あるタスクトラッカーがとても遅い場合、特にジョブの終りでは他のすべてが1つの遅いタスクの待ちに入り、全体のMapReduceジョブの完了が遅れてしまう。しかし、投機的実行を用いると1つのタスクを複数のスレーブ・ノードで実行することができる。他のアプリケーション[編集]主要なユーザ[編集]Yahoo!におけるHadoop[編集]他のユーザ[編集]Yahoo! 以外にも様々な組織がHadoopを使って大規模分散システムを構築している。以下に例を挙げる:[7][8]A9.comFacebookFox Interactive MediaIBMImageShackISIJoostLast.fmPowersetニューヨーク・タイムズRackspaceスカイアーチネットワークスVeohMetaweb楽天Amazon EC2/S3サービスにおけるHadoop[編集]Sun Grid EngineにおけるHadoop[編集]HadoopにおけるSun Grid Engine ― および於分散コンピューティング/コンピュータ・クラスター環境におけるジョブ管理システム。[9]参考文献[編集]日経BP出版局著 「クラウド大全 サービス詳細から基盤技術まで」2009年 ISBN10 4822283887脚注[編集]^ a b “Hadoop Releases”. Hadoop.apache.org. 2013年6月16日閲覧。^ Hadoop Overview^ Hadoop Users List^ http://hadoop.apache.org/core/docs/r0.17.2/hdfs_user_guide.html#Rack+Awareness^ The Hadoop Distributed File System: Architecture and Design^ Improve Namenode startup performance. \"Default scenario for 20 million files with the max Java heap size set to 14GB : 40 minutes. Tuning various Java options such as young size, parallel garbage collection, initial Java heap size : 14 minutes\"^ PoweredBy^ Apache HadoopやApache CassandraなどをはじめとするOSS（オープンソースソフトウエア）を活用^ HDFS-Aware Scheduling With Grid Engine関連事項[編集]NutchHBaseAster Data Systemsクラウド・コンピューティング外部リンク[編集]Hadoop公式サイト日本語訳(あしたのオープンソース研究所)Database Landscape Map – December 2012表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Hadoop&oldid=48182025」から取得  カテゴリ: JavaオープンソースApacheソフトウェア財団クラウドコンピューティング隠しカテゴリ: FLOSS関連のスタブ項目     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Azərbaycanca Česky Deutsch English Español فارسی Français עברית Italiano 한국어 മലയാളം Монгол Polski Português Русский Українська Tiếng Việt 中文 リンクを編集        最終更新 2013年6月16日 (日) 04:25 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65811"),body:"MongoDB 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  この項目の参考文献は、一次資料や記事主題の関係者による情報源に頼っています。信頼できる第三者情報源とされる出典の追加が求められています。（2013年2月）MongoDB開発元10gen初版2009最新版2.4.1 / 2013年3月23日（3か月前） （2013-03-23）プログラミング言語C++対応OSクロスプラットフォーム対応言語英語種別ドキュメント指向データベースライセンスGNU AGPL v3.0 (ドライバはApache license）公式サイトhttp://www.mongodb.org/テンプレートを表示MongoDB は、オープンソースのドキュメント指向データベースである。C++言語で記述されており、開発とサポートは10genによって行なわれている。[1] MongoDBはRDBMSではなく、いわゆるNoSQLと呼ばれるデータベースに分類されるものである。RDBMSのようにレコードをテーブルに格納するのではなく、「ドキュメント」と呼ばれる構造的データをJSONライクな形式で表現し、そのドキュメントの集合を「コレクション」として管理する（このデータの物理的な格納はBSONと呼ばれるJSONのバイナリ版といえる形式で行われる）。コレクションはRDBMSのような固定的なスキーマを持たない。ドキュメントには複雑な階層構造を持たせることもでき、それらの構造に含まれるフィールドを指定したクエリやインデクス生成も簡単な指定によって行える。RDBMSのように高度な結合操作を効率的に行うことはできないが、データの追加・更新・削除・クエリは高速に行うことができる。また、アプリケーションは自身の構造やデータ型に合った自然な形でデータを格納することができるため、扱うデータの特性によっては、RDBMSよりも容易かつ迅速に開発を行うことができる可能性がある。Mongoという名前は、英語で「ばかでかい」を意味する \"humongous\" に由来する。MongoDBの開発は10genによって2007年10月から開始され、最初の公開リリースは2009年2月に行われた。[2]目次1 特徴1.1 アドホックなクエリ1.2 ネストされたフィールドのクエリ1.3 インデックス1.4 集約1.5 ファイルストレージ1.6 サーバサイドJavaScript実行1.7 Cappedコレクション2 デプロイ2.1 言語サポート2.2 レプリケーション2.2.1 マスタ/スレーブ2.2.2 レプリカセット2.3 Sharding3 管理とグラフィカルフロントエンド3.1 公式ツール3.2 監視3.3 GUI4 ライセンスとサポート5 批判6 有名な利用者7 関連項目8 References9 外部リンク特徴[編集]特徴の一部:整合的なUTF-8エンコーディング。非UTF-8データも、特殊なバイナリデータ型によって保存・取得できる。クロスプラットフォームのサポート: バイナリは、Windows, Linux, OS X, Solarisで利用できる。MongoDBはほとんどのリトルエンディアンシステムで利用できる。豊富なデータ型: 日付、正規表現、バイナリ型、コード、など（すべてのBSONデータ型）クエリ結果にカーソルが使えるなどアドホックなクエリ[編集]MongoDBでは、任意のフィールドを好きな時にクエリできる。フィールドの完全一致に加えて、範囲をもつクエリ、正規表現検索など様々な種類のクエリが使える。ユーザ定義のJavaScript関数を述語として使うこともできる（関数がtrueを返したときにドキュメントがマッチする）。クエリでは、（全フィールドをとりだす代わりに）指定したフィールドだけを取り出せる。また、ソートを行ったり、結果の数を制限したり、一部をスキップすることもできる。ネストされたフィールドのクエリ[編集]埋め込みオブジェクトおよび配列にも「たどりつく」ことができる。以下のオブジェクトが users コレクションに挿入されているとする：{ \"username\" : \"bob\", \"address\" : { \"street\" : \"123 Main Street\", \"city\" : \"Springfield\", \"state\" : \"NY\" }}このドキュメント（およびNYの住所をもつすべてのドキュメント）は、以下のクエリで取得できる:> db.users.find({\"address.state\" : \"NY\"})配列の要素を指定することもできる：> db.food.insert({\"fruit\" : [\"peach\", \"plum\", \"pear\"]})> db.food.find({\"fruit\" : \"pear\"})インデックス[編集]MongoDBは、追加のインデックスをサポートする。インデックスは、単一キー、複合キー、ユニーク/非ユニーク、地理空間インデクス[3]をサポートする。ネストされたフィールドもインデックスできるし、配列型をインデックスすると配列内の各要素がインデックスされる。MongoDBのクエリオプティマイザはクエリの実行時にいくつかのクエリ計画を試し、最速のものを選択する。定期的に再サンプリングを行う。開発者は使用されるインデックスを `explain` 関数で見ることができ、 `hint` 関数で異なるインデックスを参照できる。インデックスはいつでも作成・削除できる。集約[編集]アドホックなクエリに加えて、MongoDBは集約のためのいくつかのツールをサポートしている。これには、SQLのGRUOP BYに似たgroup関数や、MapReduce[4]などがある。ファイルストレージ[編集]MondoDBは、GridFS[5]と呼ばれるプロトコルを実装しており、これを使うことで大きなファイルをデータベースに格納・取得することができる。このファイルストレージ機構はnginx[6]やlighttpd [7]のプラグインからも使用できる。サーバサイドJavaScript実行[編集]JavaScriptはMondoDBにおけるLingua franca(共通語)であり、クエリや集約関数(MapReduce等)で使用したり、データベースに直接送信して実行できる。クエリでのJavaScriptの例:> db.foo.find({$where : function() { return this.x == this.y; }})データベースに送信して実行させるコードの例:> db.eval(function(name) { return \"Hello, \"+name; }, [\"Joe\"])これは \"Hello, Joe\" を返す。JavaScriptの変数はデータベースに格納でき、他のJavaScriptからグローバル変数として利用できる。関数を含むすべての正当なJavaScript型を格納できるため、JavaScriptを「ストアドプロシージャ」として利用できる。Cappedコレクション[編集]MongoDBは、Cappedコレクションと呼ばれる固定サイズのコレクションもサポートしている[8]。Cappedコレクションはサイズ（オプションで要素数も使える）を指定して作成される。capped collectionsは、挿入した順にコレクションを管理する: 指定したサイズに到達したら、古いものから順に削除される。Cappedコレクションでは、tailable cursor[9]と呼ばれる特殊なカーソルを利用できる。このカーソルの名前は `tail -f` に由来し、結果を返し終えてもクローズせずに待機し続けて、それ以降に追加されたドキュメントを返却しつづける。デプロイ[編集]MongoDBはソースファイルからビルドすることもできるが、より一般的にはバイナリパッケージからインストールされる。多くのLinuxパッケージ管理システムはMongoDBのパッケージを含んでいる: CentOSとFedora,[10] DebianとUbuntu,[11] Gentoo[12], Arch Linux。[13] 公式Webサイトから入手することもできる。[14]MongoDBはメモリマップトファイルを用いるため、32-bitシステムではサイズが2GBに制限される。[15] MongoDBのサーバはリトルエンディアンのシステムのみで動作する。ただし、ほとんどのドライバはビッグエンディアンのシステムでも動作する。言語サポート[編集]MongoDBは、以下の言語に公式ドライバを提供している:C言語[16]C++[17]C#[18]Haskell[19]Java[20]JavaScript[21]Lisp[22]Perl[23]PHP[24]Python[25]Ruby[26]Scala[27]非公式のドライバも大量に存在する: C#と.NET,[18] ColdFusion,[28] Delphi,[29] Erlang,[30][31] Factor,[32] Fantom,[33] Go,[34] JVM languages (Clojure, Groovy,[35] Scala, etc.),[36] Lua,[37] node.js,[38] HTTP REST,[39] Ruby,[40] Racket,[41] Smalltalk[42]レプリケーション[編集]MongoDBはマスタ/スレーブのレプリケーションをサポートする。マスタは書き込みと読み込みを実行できる。スレーブは、マスタからデータをコピーして、読み込みとバックアップのために利用できる（書き込みはできない）。MondoDBは、各操作について、最低でも N 個のサーバにレプリケートされることを開発者に保証することができる。マスタ/スレーブ[編集]操作はマスタに対して行われ、スレーブはデータに対するすべての変更をレプリケートする。例: マスタ/スレーブのペアをローカルで起動する:$ mkdir -p ~/dbs/master ~/dbs/slave$ ./mongod--master --port 10000 --dbpath ~/dbs/master$ ./mongod--slave --port 10001 --dbpath ~/dbs/slave --source localhost:10000レプリカセット[編集]レプリカセットはマスタ/スレーブに似ているが、マスタがダウンしたときにスレーブ間で自動投票を行って、スレーブの1つを新たなマスタにする機能を持つ。Sharding[編集]MongoDBは、Sharding[43]というシステムによって水平スケーリングが可能である。これはBigTableやPNUTSのスケーリングモデルに非常に良く似ている。開発者はshardキーを選択し、このキーがデータをどのように分散させるかを決める。データ中のキーを元にデータを分散させるshardが決められる。（一つのshardは1つ以上のスレーブを持つマスタである）アプリケーションはいくつかの操作を行う際に、shardingされたクラスタと対話していることを認識している必要がある。例えば \"findAndModify\" クエリは、shardされたコレクションからクエリをするときにshardキーを含む必要がある。[44] アプリケーションは、`mongos`と呼ばれる特別なルーティングプロセスと対話する。このプロセスは、shardクラスタを単一のMongoDBサーバに見えるようにする。`mongos`プロセスはどのデータがどのshardにあるかを知っており、クライアントのリクエストを適切にルーティングする。すべてのリクエストはこのプロセスを通して流れる: リクエストやレスポンスを転送するだけでなく、必要に応じてマージやソートも行う。 `mongos`プロセスはいくつでも実行できるが、通常は1つのアプリケーションに対して1つが推奨される。管理とグラフィカルフロントエンド[編集]公式ツール[編集]最もパワフルで便利な管理ツールはデータベースシェルの mongo である。このシェルは、データベースの内容を閲覧・挿入・削除・更新する機能を提供すると同時に、レプリケーション情報を取得したり、shadingを設定したり、サーバを停止したり、JavaScriptを実行したりすることができる。mongoは、SpiderMonkeyの上に構築されているため、MondoDBサーバに接続できると同時に、完全なJavaScriptシェルでもある。管理情報にはWebベースのadminインタフェースを通してもアクセスできる。これは、現在のサーバ情報を送信するシンプルなHTMLのWebページである。デフォルトでは、このインタフェースにはデータベースのポートの1000番上のポート (http://localhost:28017) からアクセスできる。--norestオプションによってこの機能を無効化できる。mongostat は、直近の統計情報のシンプルな一覧を表示するコマンドラインツールである。挿入された数、更新された数, 削除された数, クエリの数, 実行されたコマンドの数, データベースがロックされた時間のパーセンテージ、メモリの使用状況などを表示する。mongosniff は、MongoDBのネットワークトラフィックを覗くツールである。監視[編集]MongoDBを監視するためのプラグインが存在する:munin[45]ganglia[46]scout[47]cacti[48]GUI[編集]データの可視化を助けるいくつかのGUIが開発されている:Fang of Mongo[49] - DjangoとjQueryで作られたWebベースのUIFuton4Mongo[50] - CouchDBのFuton WebインタフェースのクローンMongo3[51] - RubyベースのインタフェースMongoHub[52] - MongoDBを管理するためのネイティブなOS XアプリケーションOpricot[53] - PHPで書かれたWebベースのMongoDBシェルDatabase Master - WindowsベースのMongoDB管理ツール。RDBMSもサポートするBI Studio - WindowsベースのMongoDB管理ツール。RDBMSもサポートするRockMongo - PHPベースライセンスとサポート[編集]MongoDBは、GNU Affero General Public Licenseライセンスの下で利用できる。言語ドライバはApache Licenseライセンスの下で利用できる。[54]批判[編集]データの永続性が保証されないという指摘がある[55]。有名な利用者[編集]MTV Networks[56]craigslist[57]Disney Interactive Media Group[58]Wordnik[59]diaspora[60]Shutterfly[61]foursquare[62]bit.ly[63]The New York Times[64]SourceForge[65]Business Insider[66]Etsy[67]CERN LHC[68]Thumbtack[69]AppScale[70]Uber[71]関連項目[編集]ポータル Free softwareドキュメント指向データベースNoSQLCouchDBReferences[編集]^ MongoDB website^ MongoDB Blog - March 2010^ Geospatial indexes^ MapReduce^ GridFS^ NGINX^ lighttpd^ capped collections^ [1]^ CentOS and Fedora^ Debian and Ubuntu,^ Gentoo^ Arch Linux^ official website^ [2]^ C driver^ C++ driver^ a b C# driver^ Haskell driver^ Java driver^ JavaScript driver^ [3]^ Perl driver^ PHP driver^ Python driver^ Ruby driver^ Casbah, the officially supported Scala Driver for MongoDB^ ColdFusion driver^ Delphi^ Emongo Erlang driver^ Erlmongo Erlang driver^ Factor driver^ Fantom driver^ gomongo Go driver^ GMongo^ JVM language center^ LuaMongo^ node.js driver^ REST interface^ rmongo^ [4]^ Smalltalk driver^ sharding^ [5]^ Munin plugin^ Ganglia plugin^ Scout slow-query plugin^ Cacti plugin^ Fang of Mongo^ Futon4Mongo^ Mongo3^ MongoHub^ Opricot^ The AGPL - MongoDB Blog: May 5, 2009^ Broken by Design: MongoDB Fault Tolerance^ “MongoDB Powering MTV's Web Properties” (2011年5月10日). 2011年7月6日閲覧。^ “MongoDB live at craigslist” (2011年5月16日). 2011年7月6日閲覧。^ “Disney Central Services Storage: Leveraging Knowledge and skillsets” (2011年5月24日). 2011年7月6日閲覧。^ “12 Months with MongoDB” (2010年10月25日). 2011年5月24日閲覧。^ “MongoDB - diasporatest.com” (2010年12月23日). 2010年12月23日閲覧。^ “Implementing MongoDB at Shutterfly - Presentation at MongoSF” (2010年4月30日). 2010年6月28日閲覧。^ “MongoDB at foursquare - Presentation at MongoNYC” (2010年5月21日). 2010年6月28日閲覧。^ “bit.ly user history, auto-sharded - Presentation at MongoNYC” (2010年5月21日). 2010年6月28日閲覧。^ Maher, Jacqueline (2010年5月25日). “Building a Better Submission Form”. NYTimes Open Blog. http://open.blogs.nytimes.com/2010/05/25/building-a-better-submission-form/ 2010年6月28日閲覧。 ^ “How Python, TurboGears, and MongoDB are Transforming SourceForge.net”. PyCon 2010 (2010年2月20日). 2010年6月28日閲覧。^ “How This Web Site Uses MongoDB”. Business Insider (2010年11月6日). 2010年6月28日閲覧。^ “MongoDB at Etsy”. Code as Craft: Etsy Developer Blog (2010年5月19日). 2010年6月28日閲覧。 [リンク切れ]^ “Holy Large Hadron Collider, Batman!”. The MongoDB NoSQL Database Blog (2010年6月3日). 2010年8月3日閲覧。^ “Building Our Own Tracking Engine With MongoDB”. Thumbtack Blog (2011年5月3日). 2011年5月15日閲覧。^ http://appscale.cs.ucsb.edu/datastores.html#mongodb^ “Node.js Meetup: Distributed Web Architectures ? Curtis Chambers, Uber | JoyentCloud:”. 2011年8月12日閲覧。外部リンク[編集]MongoDB公式ページ「英語」MongoDBドキュメンテーション公式ページ「日本語」MongoDBの薄い本「入門の全訳」この項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。  「http://ja.wikipedia.org/w/index.php?title=MongoDB&oldid=47913961」から取得  カテゴリ: NoSQLデータベースオープンソースデータベース管理システムドキュメント指向データベース分散システム隠しカテゴリ: 外部リンクがリンク切れになっている記事/2010年10月内容の精度・確度に欠けている可能性のある記事ソフトウェア関連のスタブ     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   العربية Català Deutsch English Español فارسی Français Magyar Հայերեն Italiano Nederlands Polski Português Русский Türkçe Українська 中文 リンクを編集        最終更新 2013年5月21日 (火) 20:46 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65813"),body:"NoSQL 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  NoSQL（一般に”Not only SQL”と解釈される）とは、リレーショナルデータベース管理システム (RDBMS) 以外のデータベース管理システムを指すおおまかな分類語である。リレーショナルデータベースをやみくもに使用してきた長い歴史を打破し、それ以外のデータベースの利用・発展を促進させようとする運動の標語としての意味合いを持つ。関係モデルではないデータストアの特徴として、固定されたスキーマに縛られないこと、関係モデルの結合操作を利用しないこと（場合によっては単にそのような機能が欠落しているだけ）、水平スケーラビリティが確保しやすい事が多いこと、トランザクションを利用できないものが多いことなどが挙げられる。学術的な世界では、この種のデータベースのことを構造型ストレージ (英: structured storage) と呼ぶことが多い[1][2][3][4]。NoSQL系データベース管理システムには、データの格納および取得が高度に最適化されているものが多い。その最適化のために機能性を最小限にしているものもある。「値」およびそれを取得するための「キー」だけを格納できるKey-Value型データベースは、その最たる例である。NoSQL系データベース管理システムが有用な場面は、関係モデルを必要としないデータを扱う時や、大量のデータを扱う時である。用途は多様であり、数百万のkey-valueペアを格納したり、数個程度の連想配列を格納したり、数百万の構造的データを格納したりと、様々に使われる。この構造は、大規模なデータを統計的に解析したり、増えつづける情報をリアルタイムに解析するのにも便利である。産業界での有名な実装として、GoogleのBigTable、アマゾンのAmazon DynamoDBなどがある。オープンソースの実装も数多く存在し、例えばMongoDB、 Redis、Apache HBase、Apache Cassandraなどがある。目次1 歴史2 アーキテクチャ3 分類4 オープンソースのプロジェクト一覧5 参考文献6 関連項目歴史[編集]NoSQLという用語は1998年、SQLインターフェイスを持たない軽量な関係データベースのオープンソースソフトウェアの名前として最初に用いられた。その著者Carlo StrozziはNoSQL運動について、「関係モデル全体と一線を画すものであるから、『NoREL』などと名づけられるべきだった」と主張している[5]。この用語は、Last.fmのJohan Oskarssonの呼びかけによって2009年初頭に開催されたオープンソースの分散データベースについての会合において、Rackspace（英語版）の従業員Eric Evansによって再導入された[6]。この名前はMySQL、MS SQL、PostgreSQLなど関係データベースのシステムで広く用いられていた命名法を参照して付けられたものであり、ACID保証を提供しないような非関係型の分散データストアの勃興を表現する意図が込められていた。NoSQL運動が普及するに従い、その名前のもつネガティブな印象（SQLは不要である、など）が問題となり議論が起こっている。Eric EvansはNoSQLをNot only SQLのバクロニムとして理解するのが好ましいとしている[7]。アーキテクチャ[編集]現代的な関係データベースは、小規模の高頻度なトランザクションか、巨大だが書き込みをほとんど伴わないトランザクションに最適化されて設計されているため、近年必要とされてきている大規模データに基づく (英: data-intensive) 応用事例では性能が劣化してしまう[8]。そのような応用の例として、検索のための文書のインデキシング、トラフィックの高いウェブサイトのサーバ、ストリーミングデータの配布などがあり、Diggのgreen badge[9]、Facebookのインボックスの検索、eBayのシステム全体などがその実例である。NoSQLのアーキテクチャにおいては、結果整合性のみを保証するなどして一貫性の保証を弱く設計したり、トランザクションをひとつのデータアイテムに限るという制限を設けたりすることが多い。補助的なミドルウェアの層を付加することによって完全なACID保証を提供している場合もある[10]。いくつかのNoSQLシステムは分散アーキテクチャを採用している。そのようなシステムでは、多くの場合は分散ハッシュテーブルを用いて、データを複数のサーバーに、冗長性を持たせながら配置する。これにより、サーバーを追加するだけでシステムを容易にスケールアップさせることができ、障害への耐性も強くなる[11]。分類[編集]NoSQL には、主要なものとして、以下のものがある[12]。キー・バリュー型 (Key Value Store) - キーに対してバリュー（値）という単純な構造。Amazon DynamoDB, Basho Riak, Redisなど。大半はバリューとして単純なバイナリデータ（BLOB）のみが格納できるが、 Redisのようにリスト、マップ、ソート済みセットといったリッチなデータ構造をサポートするものもある。またバリューに加えて、タグやメタデータと呼ばれる追加情報が格納できるものも多い。日本発のものには okuyama, Hibari などがある。ソート済みカラム指向 - 行キーに対してカラム（名前と値の組み合わせ）の集合を持つ。行ごとに好きな名前のカラムを好きな数だけ格納できる。カラムはカラム名によってソートされるため、例えばカラム名に時刻を使うことで１行の中に時系列のデータを格納することできる。Apache Cassandra, Apache HBaseなど。ドキュメント指向 - XMLやJSONといった、 スキーマレスでデータ構造が柔軟なもの。MongoDB, Apache CouchDB など。XMLデータベースなどのシステムでは、XQueryを利用できるものもある。オープンソースのプロジェクト一覧[編集]Apache Cassandra - 分散データベース、ソート済みカラム指向型Apache CouchDB - ドキュメント指向型Apache HBase - 分散データベース、ソート済みカラム指向型ArangoDB - multi-model databaseBasho Riak - 分散データベース、キー・バリュー型ChordlessDb4o - オブジェクトデータベース（Javaオブジェクトなどの格納）GT.MHibari - 分散データベース、キー・バリュー型（日本発）Hypertable - 分散データベース、ソート済みカラム指向型MemcachedbMnesia - 分散データベースMongoDB - 分散データベース、ドキュメント指向型okuyama - 分散データベース、キー・バリュー型（日本発）Project Voldemort - 分散データベース、キー・バリュー型Redis - インメモリ・データベース、キー・バリュー型（リスト、マップ、ソート済みセットなど）SimpleDBNeo4j - グラフ型DEXBaseXeXistAllegroGraphOrientDBInfiniteGraph - グラフ型Sones GraphDBInfoGridHyperGraphDB参考文献[編集]^ Hamilton, James (2009年11月3日). “Perspectives: One Size Does Not Fit All”. 2009年11月13日閲覧。^ Lakshman, Avinash; Malik, Prashant. Cassandra — A Decentralized Structured Storage System. Cornell University. http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf 2009年11月13日閲覧。. ^ Chang, Fay; Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A. Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes, and Robert E. Gruber. Bigtable: A Distributed Storage System for Structured Data. Google. http://labs.google.com/papers/bigtable-osdi06.pdf 2009年11月13日閲覧。. ^ Kellerman, Jim. “HBase: structured storage of sparse data for Hadoop”. 2009年11月13日閲覧。^ “NoSQL Relational Database Management System: Home Page”. Strozzi.it (2007年10月2日). 2010年3月29日閲覧。^ “NOSQL 2009”. Blog.sym-link.com (2009年5月12日). 2010年3月29日閲覧。^ “NoSQL: What's in a name?”. Eric Evans's Weblog (2009年10月30日). 2010年5月31日閲覧。^ Agrawal, Rakesh et al. (2008). “The Claremont report on database research”. SIGMOD Record (ACM) 37 (3): 9--19. doi:http://doi.acm.org/10.1145/1462571.1462573. ISSN 0163-5808. ^ “Looking to the future with Cassandra | Digg About”. About.digg.com (2009年9月9日). 2010年3月29日閲覧。^ 例：“CloudTPS: Scalable Transactions for Web Applications in the Cloud”. Globule.org. 2010年3月29日閲覧。^ “Cassandra: Structured Storage System over a P2P Network (PDF)”. 2010年3月29日閲覧。^ Database Landscape Map – December 2012関連項目[編集]構造型ストレージ（英語版）データベースマネジメントシステムの一覧（英語版）Triplestore（英語版）CAP定理  「http://ja.wikipedia.org/w/index.php?title=NoSQL&oldid=46776029」から取得  カテゴリ: データベースデータベース管理システムNoSQLデータベースクラウドコンピューティング     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   العربية Azərbaycanca Deutsch English Español فارسی Suomi Français Magyar Bahasa Indonesia Italiano Latina മലയാളം Nederlands Occitan Português Русский Türkçe 中文 リンクを編集        最終更新 2013年3月20日 (水) 03:47 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65814"),body:"PostgreSQL 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  PostgreSQL開発元PostgreSQL Global Development Group最新版9.2.4 / 2013年4月4日（3か月前） （2013-04-04）最新評価版9.3 beta 2 / 2013年6月27日（9日前） （2013-06-27）プログラミング言語C対応OSクロスプラットフォーム種別オブジェクト関係データベースライセンスThe PostgreSQL License公式サイトwww.postgresql.orgテンプレートを表示PostgreSQL（ぽすとぐれすきゅーえる: 発音例）は、BSDライセンスに類似するライセンス[1]により配布されているオープンソースのオブジェクト関係データベース管理システム (ORDBMS) である。その名称は Ingres の後継を意味する「Post-Ingres」に由来している。単純に「Postgres」や「ポスグレ」と呼称されることも多い。目次1 概要1.1 市場シェア1.2 プラットフォーム2 特徴2.1 関数2.2 インデックス2.3 トリガ2.4 ルール2.5 データ型2.6 ユーザ定義オブジェクト2.7 バキューム2.8 パーティショニング2.9 全文検索2.10 レプリケーション2.11 その他の特徴3 性能3.1 CPU スケーラビリティ3.2 更新処理3.3 ベンチマーク4 周辺ツール4.1 管理ツール4.1.1 psql4.1.2 pgAdmin4.1.3 phpPgAdmin4.1.4 その他4.2 レプリケーション・アドオン4.3 接続インタフェース5 歴史5.1 バージョン履歴6 受賞7 脚注8 参考書籍9 外部リンク概要[編集]PostgreSQLはIllustraや、Illustraを買収しその技術を採りいれたInformixとともにオブジェクト関係データベース管理システムを実装してきた。[2] 問い合わせ言語には SQL を用いており、SQL92, 99の大部分と、2003, 2008の一部をサポートしている。(一覧 サポートあり / なし)市場シェア[編集]世界的な利用状況を見ると、2012年の時点ではオープンソースDBの中でのそれぞれのシェアを考えると、MySQL系 70%（Mysql56%、MariaDB 14%）、MongoDB 15%となり、PostgreSQLが占めるシェアは14%程度である。[1]日本国内シェアについてはMySQL系 66%（Mysql50%、MariaDB 16%）、PostgreSQL 8% と、世界的なシェアとは状況が異なる。[2]プラットフォーム[編集]UNIX系列、Linux、Microsoft Windows、OS/2 など多くのOSで動作する。Windowsにおいては、バージョン7.4以前はCygwinを必要としたが、バージョン8.0以降はネイティブで動作する。32ビット / 64ビット の両アーキテクチャ上で動作する。32ビット版では共有バッファサイズが最大2GBに制限されるが、64ビット版では上限は無い。配布形態は、ソースコードや RPM の他、EnterpriseDB 社よりGUIインストーラが提供されている。このパッケージにはGUIの管理ツールであるpgAdminやドライバ等の追加インストーラが同梱されている。特徴[編集]関数[編集]関数（ストアドファンクション）によりサーバで実行される処理のまとまりを定義できる。 関数の定義には SQL の他、分岐やループをサポートする下記の言語で実装することが可能である。 言語によっては関数をデータベーストリガとして実行することもできる。PL/pgSQLOracle Databaseで用いられるPL/SQLを参考にして実装されたビルトイン言語。PL/PSMSQL:2003 規格の SQL/PSM に則った構文を持つ。[3]スクリプト言語PL/Perl, PL/php, PL/Python, PL/Ruby, PL/sh, PL/Tcl, PL/Luaコンパイラ言語C言語, PL/Java統計処理言語PL/RPostgreSQL は行を返却する関数を定義することができる。 関数の出力は複数の行であり、クエリの中でテーブルと同様に扱うことができる。実行するユーザまたは定義したユーザのどちらの権限で実行されるかを指定して関数を定義できる。インデックス[編集]PostgreSQL は組み込みで以下のインデックスをサポートしている。 また、ユーザ定義インデックスを追加することもできる。B+木ハッシュテーブルGiST (汎用検索ツリー, 多次元木)GIN (汎用転置インデックス)PostgreSQL のインデックスには以下の特徴がある。必要に応じて逆順でスキャンできる。逆順スキャン用のインデックスを別に定義する必要は無い。式インデックス (関数インデックス) を定義できる。複数の列の値を引数に取る関数の結果をインデックス化する。部分インデックス (条件付きインデックス) を定義できる。条件を指定し、条件に適合する行のみをインデックス化することで、インデックスのサイズを縮小できる。クエリオプティマイザ (planner) は複数のインデックスを同時に使用するクエリ実行計画を作成できる。複数のインデックスの結果をメモリ上のビットマップとして併せ、そのビットマップに対応する行をテーブルから取得する。トリガ[編集]データベーストリガは SQL データ操作言語 (SQL DML) の文 (INSERT, UPDATE / UPDATE OF, DELETE, TRUNCATE) を実行した際に呼び出される。 利用例として、INSERT 文で挿入される値が妥当かの検証がある。 トリガが実行される条件は WHEN 句で与えることができる。トリガはテーブルに対してのみ定義できる。 ビューに対するトリガが必要な場合には、代わりにルールを使用する。 複数のトリガが定義されている場合、アルファベット順に実行される。トリガで実行される処理は関数として定義する。 トリガ用の関数の定義には SQL 関数は使用できないが、PL/pgSQL やその他の多くの関数用言語を使うことができる。ルール[編集]ルールにより SQL の内部表現である「クエリ木」を書き換えることができる。 一般的なルールの用途は更新可能ビューを実現することであり、標準 SQL で規定される \"INSTEAD OF\" トリガ の代わりに用いられる。データ型[編集]多くのデータ型が利用できる。配列 / 複合型任意の精度を持つ数値可変長文字列 / 可変長バイト列日時, 日付, 時刻, 時間差分 (タイムゾーンの有無を指定可能)ブーリアン型幾何型（点、線分、円、矩形、多角形）IPv4 / IPv6 アドレス, MAC アドレスXML 型、UUID 型, 列挙型（8.3以降）可変長文字列と可変長バイト列には最大で 1GB を格納できる。一定のサイズを上回るデータ値は TOAST と呼ばれる機能により自動的に圧縮され別領域に配置される。そのため、ページサイズ (通常8KB) を上回るサイズの行であっても保存できる。さらに、ユーザがデータ型を追加することもでき、それに対してインデックスを作成することもできる。 利用例として、GIS 用の型を GiST インデックスで検索可能な PostGIS プロジェクトがある。ユーザ定義オブジェクト[編集]ユーザはほとんどのデータベース・オブジェクトを追加できる。データ型 (TYPE) と データの定義域 (DOMAIN)関数 (FUNCTION) と集約 (AGGREGATE)演算子 (OPERATOR)型変換 (CAST)文字コード変換 (CONVERSION)手続き言語 (LANGUAGE)全文検索の設定 (TEXT SEARCH CONFIGURATION)インデックス・アクセス・メソッドバキューム[編集]バキューム (VACUUM) とは、追記型アーキテクチャにおける不要領域を回収し、再利用またはOSに返却する処理である。 なお、バージョン8.3からはHeap-Only Tuples (HOT) が採用され、インデックスの変更を伴わない更新については、削除された行を直ちに再利用することが可能となり、バキュームの必要な頻度は下がった。PostgreSQLは、MVCCの実現のため、追記型のアーキテクチャを採用している。 データを削除する際は実際のレコードは削除せず、該当行に削除マークを付けるのみである。 更新の際も内部的には削除と挿入を同時に行っている。 そのため、更新・削除が繰り返されるテーブルにおいては、たとえ理論的な行数が変わらなくとも、更新・運用を重ねるごとに物理的なファイルサイズが増加する。肥大化によるパフォーマンスの劣化を回避するため、次節に述べるバキューム作業を定期的に行う必要がある。各バージョンによって以下の差異がある。7.1 以前データベースファイル内の未使用領域を解放しOSに返却する処理のみをサポートする。このVACUUMでは、処理中のテーブルに対して排他ロックが獲得されるため、VACUUMの間は対象テーブルへのアクセスがブロックされる。システムの規模やテーブルの行数にもよるが、本バージョンにおいてシステムの停止を伴わない運用は困難であった。7.2以前の動作を FULL 方式 (VACUUM FULL) とし、新たにコンカレント方式 (VACUUM) が実装された。現在、単にバキュームと言った場合、後者のコンカレントバキュームを指す。コンカレントバキュームでは、テーブルの排他ロックを伴わずに不要領域の回収を行う。不要領域に対して再利用可能フラグを付けるのみの処理となるため、コンカレントバキュームを行っても基本的にデータベースの物理的なサイズは縮小しない。しかし、以降の更新・挿入において、このとき回収した領域が優先的に使用され、更新・削除によるファイルサイズの肥大を防止できる。7.3インデックスもコンカレントバキュームの対象になり、肥大化から回復させるための定期的にインデックスを再編成 (REINDEX) する必要が無くなった。これによりデータベース・オブジェクトの排他ロックを要するメンテナンスが不要になり、無停止での運用が可能になった。7.4自動的にバキュームを行う contrib/pg_autovacuum モジュールが提供された。autovacuum はシステムを監視し、INSERT/UPDATE/DELETE の回数などの統計情報を利用して、適切なタイミングで適切なテーブルのみに対してバキュームを行う。このため、高度な知識を要すことなく、不要領域の増加を十分に抑えることが可能となった。なお、自動バキューム処理の際に参照される統計情報の記録はデフォルトでオフとなっているため、本機能を利用する際は統計情報の記録オプションもオンにする必要がある。8.0バキュームは多くのI/Oが必要なため、負荷の高い処理である。バキューム実行中のシステムの全体の性能悪化を防ぐため、バキュームを行う速度を制限する機能が追加された。ただし、バキューム自体の処理時間はその分多く要する。8.1contribより提供されていた自動バキューム (autovacuum) 機能が本体に統合された。不要領域の監視が効率化され、コマンドで発行した VACUUM との連携が可能になった。8.2トランザクションIDの周回がテーブル単位で管理されるようになり、定期的にデータベース単位でバキュームを行う必要が無くなった。テーブル単位のバキュームのみが必要である。また複数のバキュームを並列して実行した際の回収効率が向上した。8.3自動バキューム機能が標準で有効とされ、複数のテーブルに並列してバキュームを行うようになった。加えて Heap-Only Tuplesの採用により、バキューム自体の必要性が低減した。8.4Visibility Map で処理が必要なページを追跡するようになり、バキュームが高速化された。また空き領域のあるページを管理する Free Space Map のメモリ管理が自動化された。9.0VACUUM FULL が CLUSTER と類似の処理に変更され、高速化された。パーティショニング[編集]テーブル・パーティショニングは継承を用いて実現する。 これは、Oracle Database 7 のパーティション・ビューに近い実装である。テーブルを作成する際、他テーブルを「親」テーブルとして指定し、継承関係を定義できる。 「子」テーブルに挿入された行は、親テーブルを参照した際にも取得される。 親テーブルに対する列の追加やCHECK制約の定義は自動的に子テーブルにも反映されるが、外部キーや一意性制約は継承をサポートしていない。パーティショニングされたテーブルへは親テーブルを通してアクセスする。 SELECT, UPDATE, DELETE 文は子テーブルを含むよう展開されるが、クエリの条件が CHECK 制約に適合しない子テーブルは設定により自動的に除外することもできるため効率よく処理できる。INSERT については子テーブルを直接指定するか、親テーブルにトリガを作成することで挿入先を指示する必要がある。全文検索[編集]LIKE 述語と正規表現による文字列検索のほか、全文検索の機能を持つ。バージョン 8.3 以降は組み込みで、それ以前のバージョンでは contrib/tsearch2 として提供されている。この全文検索では文字列から単語を抽出し、転置テーブル (GIN) または単語空間を多次元木 (GiST) とするインデックスを作成できる。SQL/MM の全文検索とは異なり、「@@」演算子を使用する独自の文法で検索を行う。SELECT * FROM テーブル WHERE to_tsvector(文字列カラム) @@ to_tsquery('検索クエリ')標準では日本語の文字列から単語を抽出するパーサを持たないが、外部拡張である textsearch-ja を使用することで形態素解析による検索が可能となる。また、標準の全文検索以外にも、Ludia, textsearch_senna (Senna を使用), pgestraier (Hyper Estraier), pgRast (Rast) などが外部拡張として存在する。レプリケーション[編集]PostgreSQL 9.0 より、組み込みのバイナリ・レプリケーションをサポートする。[4] トランザクションログを転送し、全てのデータベース・ファイルの変更をコミット後に他のサーバへ非同期に転送する。 単一マスタと複数スレーブを構成でき、スレーブは参照の問い合わせを受け付ける。 参照処理を複数のノードで負荷分散するスケールアウトが可能である。その他の特徴[編集]副問合せ (サブクエリ)結合 (自然結合, 左外結合, 右外結合, 完全外結合)制約 (外部キー, 一意性制約, CHECK制約)トランザクション / サブトランザクション (SAVEPOINT) / 2相コミットオンライン・バックアップ (論理 / 物理)バックアップ直後からデータ障害直前までの任意の時点への復旧 (en:Point-in-time recovery)SSLでの接続表領域性能[編集]CPU スケーラビリティ[編集]バージョン 8.1 以降 CPU スケーラビリティは大幅に改善された。 以降、改善を積み重ね、中規模のハードウェアであればスケーラビリティを十分に確保できるRDBMSとなっている。なお、バージョン 9.2 では、少なくとも64コアのサーバマシン上でCPUスケールすることが確認されている。[3]7.4 以前スケーラビリティはページ置換アルゴリズムとして採用されていた LRU により抑制されていた。ページを参照するたびにバッファ・プール全体を排他ロックしていたため、スケーラビリティは低かった。SMP 構成で 4CPU 程度が限界だった。8.0LRU に代わり ARC が採用された（ただし、特許侵害の回避のため途中で 2Q に変更された[4]）。ARC によりキャッシュヒット率は向上したものの、排他制御にオーバーヘッドが生じた。また、サブトランザクションをサポートするため追加された排他制御も新たなロック競合を生んだ。スケーラビリティは以前のバージョンと比較してむしろ低下しており、2CPU 程度で頭打ちになった。8.1ページ置換アルゴリズムはクロックに変更され、スケーラビリティが大幅に向上した。ページの参照には共有ロックのみが必要であるため並行してアクセスが可能になった。8CPU 程度が上限となった。[5] [6]8.2ページを管理するハッシュテーブルのロックが16個に分割され、共有ロックの実装に使用されるスピンロックへのアクセスが分散された。他にスピンロックの実装やサブトランザクションの排他制御が改良され、16CPU までのスケーラビリティが確認されている。[7]更新処理[編集]過去のバージョンの PostgreSQL は他の関係データベース管理システム (RDBMS) と比較して更新処理が遅いと言われていた。追記型アーキテクチャが採用されており、更新処理は削除と挿入の組み合わせとして実現されていた。特に挿入の際にインデックスのキーを追加する必要がある点で性能差が生じていた。しかし、バージョン 8.3 にて Heap-Only Tuples (HOT) と呼ばれる機能が採用され、インデックスのキーとなっている列の値に変更が無い場合にはインデックスの更新を回避できるようになった。HOT により約2倍のスループット向上が確認されている。[8]ベンチマーク[編集]業界標準の規格に則ったベンチマーク結果として 2007年8月の サン・マイクロシステムズ (Sun) による報告がある。以下のハードウェアを使用し、813.73 SPECjAppServer2004 JOPS@Standard であった。[9]PostgreSQL 8.2.4Sun Java System Application Server 9.1 (商用版 GlassFish)Solaris 10en:Sun Fire T2000 (UltraSPARC T1 1.2GHz : 4スレッド × 8コア × 1個)周辺ツール[編集]管理ツール[編集]PostgreSQL専用もしくは各種データベース汎用のデータベース接続クライアントを利用して管理できる。psql[編集]psql は PostgreSQL 付属のコマンドライン・プログラムである。 SQL を直接入力またはファイルから読み込んで実行するほか、スキーマ情報の表示などのメタコマンドを持つ。 また、SQL 構文やテーブル名などをタブキーにより入力補完できる。pgAdmin[編集]pgAdmin は GUI の管理インタフェースである。 Artistic License で配布される オープンソースソフトウェア (OSS) である。 多くのプラットフォームで動作し、日本語を含む多くの言語が利用できる。 また、専用の SQL エディタは psql と同様の入力補完機能を持つ。 Microsoft SQL Server Management Studio と似たインタフェースでデータベースを操作できる。phpPgAdmin[編集]phpPgAdminはウェブベースの管理ツールである。PHPで作られており GPL で配布されている。名称はphpMyAdminと似ているが、製品同士の関連性は無く、操作性はかなり異なる。その他[編集]Webmin (OSS)Navicat PostgreSQL (商用)SQLMaestro (商用)Database Master (商用)レプリケーション・アドオン[編集]PostgreSQL はバージョン 9.0 よりレプリケーションを標準でサポートするが、サードパーティー製のオプション・ソフトウェアも利用できる。各種レプリケーションソフトウェアの概要名前方式開発元特徴Slony-I非同期型マスタスレーブJan Wieckバージョンアップやバックアップにも利用できる。Mammoth Replicator非同期型マスタスレーブCommand Prompt, Inc.BSDライセンス。Londiste非同期型マスタスレーブSkype堅牢性と扱いの容易さを目標とするツール。Python製。Bucardo非同期型マルチマスタGreg Sabino MullaneBSDライセンス。PGCluster同期型マルチマスタ三谷篤ロードバランサ機能を備える。Postgres-R同期型マルチマスタMarkus Wanner継続して開発中。Cybercluster同期型マルチマスタCybertecBSDライセンス。pgpool-II同期型プロキシサーバSRA OSS Inc.フェイルオーバー機能を備え���。Sequoia同期型プロキシサーバ／ドライバContinuent Inc.他DBMSにも接続できる。PostgresForest同期型プロキシドライバNTTデータJDBCラッパ。Fermion同期型マルチマスタ株式会社Murakumo検索および更新処理の負荷分散、自動フェイルオーバー機能、マルチキャストを用いたノードの自動追加処理機能を備える。接続インタフェース[編集]PostgreSQL はクライアントサーバモデルであり、データベースへの接続は主に TCP/IP ポート番号 5432 を用いて通信を行う。通信プロトコルは「フロントエンド/バックエンドプロトコル[5]」として公開されている。各プログラミング言語ごとの接続インタフェース言語名前ライセンス開発元ClibpqBSD本体同梱psqlODBCLGPLhttp://psqlodbc.projects.postgresql.org/ODBCngGPLhttps://projects.commandprompt.com/public/odbcng/C (埋め込みSQL)ecpgBSD本体同梱C++libpqxxBSDhttp://pqxx.org/development/libpqxx/JavaJDBC TYPE4BSDhttp://jdbc.postgresql.org/.NET (C#, VB)NpgsqlBSDhttp://npgsql.projects.postgresql.org/dotConnect for PostgreSQLhttp://www.devart.com/dotconnect/postgresql/OleDBPgOleDbLGPLhttp://pgfoundry.org/projects/oledb/PerlDBD::PgArtistic, GPLhttp://search.cpan.org/dist/DBD-Pg/Pythonpy-postgresqlBSDhttp://python.projects.postgresql.org/PyGreSQLBSDhttp://www.pygresql.org/psycopg2GPLhttp://www.initd.org/pg8000BSDhttp://pybrary.net/pg8000/PHPphp_pgsqlPHP Licensehttp://jp2.php.net/pgsqlRubyruby-pgRuby Licensehttp://rubyforge.org/projects/ruby-pg/歴史[編集]マイケル・ストーンブレーカーは、自分が開発を主導した関係データベース管理システム (RDBMS) であるIngres の商業化事業を一段落させると、カリフォルニア大学バークリー校 (UCB) に戻り、同校で新たなプロジェクトを開始した。 プロジェクトの名称は Postgres と名づけられた。 このプロジェクト名称は、Ingres の後継を意味する Post-Ingres に由来している。 Postgresプロジェクトは、関係モデルを使ったこれまでの既存のデータベース管理システムの限界に対処することを目的として、開始された。 最も重要な課題は、これまでのDBMSではユーザが自分で新たな定義域 (ドメイン、型) を既存の単純な定義域をもとにして定義できない点であった。 Postgresでは型 (定義域) を完全にサポートするために必要な最小限の機能だけを導入した。 Postgres ではデータベースが関係を「理解」すると言われ、「規則」に従って自然な方法で関連する関係 (リレーション、表、テーブル) から情報を得ることができた。 ユーザ自身が型を定義する機能に加えて、関連を完全に記述できる機能も備えていた。 プロジェクトは他にも、追記型メディア (光ディスクなど) への対応、大容量記憶装置への対応、推論、オブジェクト指向型データモデルなどを、取り入れた。 実装においては、データベースとアプリケーションソフトウェアの間の新たなインタフェースを実験的に導入した。プロジェクトチームは、1986年からPostgresシステムの基盤を説明した多数の論文を公表した。 1988年、Postgres のプロトタイプバージョンを公開した。 1989年6月、少数のユーザに対してPostgresバージョン1を公開した。 1990年10月、ルールシステム (RULE) を実装し直したバージョン2を公開した。 1991年、バージョン3を公開した。 バージョン3では、ルールシステムが再度実装し直され、複数の記憶装置を管理する機構が追加され、クエリエンジンが改良された。 1993年には、非常に多くのユーザが、プロジェクトに対して、サポートと追加機能を要望して、圧倒させるほどの状態となっていた。 1993年、主として雑然とした部分をきれいにしたことを内容とするバージョン4.2が公開された。 バージョン4.2が公開された後、Postgres プロジェクトは終了した。 Postgres は広く使われたが、保守はユーザに任されていた。マイケル・ストーンブレーカーと Paula Hawthorn は、Postgresを商業化するために、Illustra Information Technologies 社を創業して、Illustraの製品名で開発・販売した。その技術は IBM Informix Dynamic Server (IDS) に導入されている。一方、オープンソースの世界のソフトウェア開発者たちは、Postgres のコピーを入手してシステムのさらなる開発を進めることができた。 なぜならカリフォルニア大学バークリー校 (UCB) は、Postgres をオープンソースライセンスであるBSDライセンスのもとで公開していたからである。 1994年に、カリフォルニア大学バークリー校 (UCB) の大学院生であった Andrew Yu と Jolly Chen は、システムの問い合わせ言語のインタプリタを、Ingres を基にした QUEL のインタプリタから、SQL のインタプリタに置き換える作業を行った。 SQLインタプリタを備えたこのシステムは、Postgres95 と呼ばれた。 Postgres95 のソースコードは、ワールドワイドウェブに公開された。1996年7月に Hub.Org Networking Services の Marc Fournier は、大学外の組織としては最初に、開発用サーバをオープンソースソフトウェア開発のために活動する人々に、提供した。 Postgres95プロジェクトは、Bruce Momjian と Vadim B. Mikheev とともに、カリフォルニア大学バークリー校 (UCB) に由来するソースコードを堅牢にする作業を始めた。 1996年8月1日に、Postgres95の最初のオープンソースのバージョンが公開された。1996年に Postgres95 プロジェクトは、プロジェクトの名称を、SQL のサポートをしているという意味をこめて PostgreSQLに変更した。 1997年1月に PostgreSQL プロジェクトとしての最初のバージョンである、PostgreSQL バージョン 6.0 が公開された。 このときから、インターネットを通じて世界中のデータベース開発者のグループがPostgreSQLの開発に参加し、共同作業によるプロジェクトをうまく調整する体制ができあがった。1999年7月23日、日本PostgreSQLユーザ会が設立し、任意団体として活動を開始した。[6]2001年以降には PostgreSQL を商用サポートする会社が現れた。2001年 Command Prompt, Inc. (Mammoth Replicator; レプリケーション)2003年 SRAOSS (PowerGres, PowerGRES Plus)PowerGRES Plusは富士通とSRAOSSが開発したRDBMSであり、SRAOSSがPostgreSQLより開発した商用RDB『PowerGres』をベースとして、ストレージ管理部分に富士通『Symfoware Server』のものを移植している。2005年 EnterpriseDB 社 (Postgres Plus; Oracle との互換性向上)2005年 Greenplum 社 (BizGres; データウェアハウスやBI向け)2006年2月1日、日本PostgreSQLユーザ会は NPO として再編成された。2011年7月 オープンソースデータベース技術者認定試験(OSS-DB Exam)において基準のRDBMSとして採用された。バージョン履歴[編集]PostgreSQLのバージョンは「x.y.z」(x、y、zはそれぞれ整数) で表現される。「x.y」の部分がメジャーバージョン、「z」がマイナーバージョンである[10]。1986年 - カリフォルニア大学バークレー校 (UCB) でマイケル・ストーンブレーカーがPOSTGRESプロジェクトを発足1987年 - プロトタイプが完成、翌年のACM-SIGMODコンファレンスで紹介される1989年 - POSTGRES 1 を限定的にリリース1990年 - POSTGRES 2 のリリース。前バージョンの批評をもとにルールシステムが再設計された。1991年 - POSTGRES 3 のリリース。複数ストレージの管理機構追加等1993年 - POSTGRES 4.2 をもってカリフォルニア大学バークレー校におけるPOSTGRESプロジェクトが終了ver.リリース日追加機能0.011995-05-01POSTGRESのソースコードを元にした Postgres95 のリリース1.01995-09-05SQL LIKE構文などを実装した Postgres95 の正式リリース6.01997-01-29PostgreSQL と名称を変え、POSTGRESプロジェクトの連番に戻された6.11997-06-086.21997-10-026.31998-03-01副問い合わせ, PL/Tcl6.41998-10-30PL/pgSQL, マルチバイト文字列サポート, ビュー6.51999-06-09MVCC, 一時表, CASE, INTERSECT, EXCEPT7.02000-05-08外部キー制約7.12001-04-13WAL, TOAST, OUTER JOIN7.22002-02-04コンカレントVACUUM, PL/Python7.32002-11-27スキーマ, ドメイン, PREPARE7.42003-11-17IPv6, information_schema8.02005-01-19Microsoft Windows対応, SAVEPOINT, PITR, 表領域 [11]8.12005-11-082相コミット, ROLE, 行共有ロック, テーブル・パーティショニング [12]8.22006-12-05ウォームスタンバイ, GIN [13]8.32008-02-04更新処理性能の向上, XMLデータ型, 全文検索, JIS X 0213, ENUM型, UUID型 [14]8.42009-07-01再帰クエリ, ウィンドウ関数, 列単位のアクセス制御, SQLと関数の性能解析機能 [15]9.02010-09-20レプリケーション, 一括権限変更, 匿名プロシージャ, 64bit Windows サポート, 移動平均, 列/条件トリガ, 一意性制約の遅延, 排他制約 [16]9.12011-09-12同期レプリケーション, 外部テーブル, パッケージ管理, UNLOGGEDテーブル, 更新可能なWITH句, 近傍検索, SELinux権限制御[17]9.22012-09-10インデックスオンリースキャン, カスケードレプリケーション, JSON型, 範囲型[18]受賞[編集]2008年の時点で、PostgreSQL は以下の受賞をしている。[7]1999 LinuxWorld Editor's Choice Award for Best Database2000 Linux Journal Editors' Choice Awards for Best Database2002 Linux New Media Editors Choice Award for Best Database2003 Linux Journal Editors' Choice Awards for Best Database2004 Linux New Media Award For Best Database2004 Linux Journal Editors' Choice Awards for Best Database2004 ArsTechnica Best Server Application Award2005 Linux Journal Editors' Choice Awards for Best Database2006 Linux Journal Editors' Choice Awards for Best Database2008 Developer.com Product of the Year, Database Tool脚注[編集]^ “PostgreSQL: License”. PostgreSQL Global Development Group (2010年). 2010年11月3日閲覧。^ マイケル・ストーンブレーカー (1986). “Object management in POSTGRES using procedures”. International Workshop on Object-Oriented Database Systems. IEEE Computer Society Press. ISBN 0-8186-0734-3. ^ Robert Haas (2012年4月3日). “Did I Say 32 Cores? How about 64?”. 2012年11月3日閲覧。^ PostgreSQL 文書, \"リリース8.0.2\"^ OSS iPedia, \"DBT-1によるPostgreSQL8.1の32ビットマシン(IA32)でのCPUスケーラビリティに関する考察(チューニング有り) \"^ OSS iPedia, \"DBT-1によるパッチを適用したPostgreSQL8.1.2の32ビットマシン(IA32)でのCPUスケーラビリティに関する考察(チューニング有り) \"^ Doug Tolbert (Unisys), \"Scaling PostgreSQL on SMP Architectures -- An Update\" (PGCon 2007)^ 【PostgreSQLウォッチ】第35回 性能を大幅に改善するPostgreSQL 8.3の新機能「HOT」とは^ “SPECjAppServer2004 Result”. SPEC (2007年7月4日). 2009年1月2日閲覧。^ 鈴木啓修 「PostgreSQLと高可用性システム/大規模システム PostgreSQLの進化の足跡」『WEB+DB PRESS Vol.48』 技術評論社、2009年1月25日、初版第1刷、104ページ。^ “リリースノート 8.0”. PostgreSQL 文書 (2005年1月19日). 2009年8月29日閲覧。^ “リリースノート 8.1”. PostgreSQL 文書 (2005年11月8日). 2009年8月29日閲覧。^ “リリースノート 8.2”. PostgreSQL 文書 (2006年12月5日). 2009年8月29日閲覧。^ “リリースノート 8.3”. PostgreSQL 文書 (2008年2月4日). 2009年8月29日閲覧。^ “リリースノート 8.4”. PostgreSQL 文書 (2009年7月1日). 2009年8月29日閲覧。^ “リリースノート 9.0”. PostgreSQL 文書 (2010年9月20日). 2010年10月6日閲覧。^ “リリースノート 9.1”. PostgreSQL 文書 (2011年9月12日). 2011年11月12日閲覧。^ “リリースノート 9.2”. PostgreSQL 文書 (2012年9月10日). 2012年11月3日閲覧。参考書籍[編集]笠原辰仁, 北川俊広, 坂井潔, 坂本昌彦, 佐藤友章 『PostgreSQL徹底入門 第3版』 翔泳社、2011年。ISBN 978-4798123356。高塚遙, 松田亮一, 田中ナルミ, 吉岡肇 『新標準PostgreSQL』 ソフトバンククリエイティブ、2009年。ISBN 978-4797354713。石井達夫 『今すぐ導入!PHP×PostgreSQLで作る最強Webシステム』 技術評論社、2009年。ISBN 978-4774138930。浅羽義之, 石田朗雄, 稲葉香理, 永安悟史 『PostgreSQL徹底入門 第2版』 翔泳社、2008年。ISBN 978-4798115054。鈴木啓修 『PostgreSQL完全機能リファレンス』 秀和システム、2006年。ISBN 978-4798014951。三木秀治 『PHP & PostgreSQLで作る実用Webシステム』 毎日コミュニケーションズ、2006年。ISBN 978-4839921194。外部リンク[編集]ウィキメディア・コモンズには、PostgreSQLに関連するカテゴリがあります。ウィキブックスにPostgreSQL関連の解説書・教科書があります。PostgreSQL本家サイト (一次配布先)PostgreSQL WikiPgFoundry (関連プロジェクト)NPO法人 日本PostgreSQLユーザ会PostgreSQL日本語ドキュメントLet's Postgres (JPUGポータル)PostgreSQL Information Page 石井達夫によるPostgreSQLの紹介ページPostgreSQL Notes for Japanese くわむらじゅんによるPostgreSQLの紹介ページPlanet PostgreSQL (Blogの集約)ポータル FLOSS表・話・編・歴データベース管理システムデータモデル - 関係モデル - データベース設計 - 正規化 - 参照整合性 - 関係代数 - 関係論理 - データベース管理システム - 関係データベース管理システム - オブジェクト関係データベース - 分散データベース - トランザクション処理概念データベース - ACID - CRUD - NULL - 候補キー - 外部キー - 主キー - スーパーキー - 代理キーオブジェクト関係 (表) - ビュー - トランザクション - ログ - トリガ - 索引 - ストアドプロシージャ - カーソル - 分割SQLSELECT - INSERT - UPDATE - MERGE - DELETE - JOIN - CREATE - DROP - COMMIT - ROLLBACK - TRUNCATE - ALTER - WHERE - SAVEPOINT構成要素並行性制御 - データ辞書 - JDBC - ODBC - データベース言語 - 問い合わせ言語 - クエリ最適化 - クエリ実行計画データベース製品: 関係データベース管理システムの比較 - データベース接続クライアント  「http://ja.wikipedia.org/w/index.php?title=PostgreSQL&oldid=48406652」から取得  カテゴリ: PostgreSQLデータベース管理システムオープンソース     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Afrikaans العربية Azərbaycanca Български Català Česky Dansk Deutsch Ελληνικά English Español Euskara فارسی Suomi Français עברית Magyar Bahasa Indonesia Italiano Қазақша 한국어 Lietuvių Latviešu മലയാളം Nederlands Norsk bokmål Polski Português Română Русский Srpskohrvatski / српскохрватски Slovenčina Српски / srpski Svenska தமிழ் ไทย Türkçe Українська Tiếng Việt 中文 リンクを編集        最終更新 2013年7月6日 (土) 11:23 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65815"),body:"Hibari (dbms)  出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Hibari開発元Hibari developers初版2010年7月最新版v0.1.10 / 2013年2月4日（4か月前） （2013-02-04）プログラミング言語Erlang対応OSクロスプラットフォーム対応言語日本語、英語サポート状況活発種別分散キー・バリューストア、 NoSQLライセンスApache License 2.0公式サイトhttps://github.com/hibari/hibariテンプレートを表示ポータル FLOSSHibari（ひばり）はデータの強い整合性と高可用性を保証するスケールアウト型分散キー・バリューストア。NoSQLデータベースに分類される。東京に本社を置くクラウディアン社（旧ジェミナイ・モバイル・テクノロジーズ）が、モバイル・メッセージングに適したデータベースとして2005年から開発を始め、2010年7月27日にオープンソースソフトウェアとして公開した。[1] [2]　日本の大手Webメールのストレージとして採用された実績があるHibariは漢字で「雲雀」と書き「クラウドの小鳥」を表す。クラウドコンピューティングに適し、SNS（ソーシャルネットワーク）のような、わずか１日でテラバイトもしくはペタバイト規模のデータを生み出すようなサービスで使用できる。目次1 特徴2 クライアントインターフェイス3 外部リンク4 参考文献特徴[編集]Hibariはノード間のデータ複製にチェイン・レプリケーション方式[3][4][5]を採用し、データの持続性や複製されたデータ間の強い整合性を保証する。他の多くの NoSQL と異なり、マイクロトランザクションと呼ばれる限られた範囲のキーに対するアトミックなトランザクションをサポートする。Hibariはデータ操作のレイテンシ（遅延時間）が短く、特にRead操作と200KB前後の大きなバリューの扱いにおいて、他の多くのスケールアウト型 NoSQLよりも高い性能を発揮する[6]。Hibariは一般的なIAサーバー（x86サーバー）だけでなく、ARMアーキテクチャのスケールアウト型サーバーなどでも動作する。サービスの稼働中にサーバーノードを追加することで、処理性能とデータ格納容量をリニアにスケールさせることができ、ある商用サービスでは1つのHibariクラスタで約60台のIAサーバーが用いられている。Hibariクラスタの上限台数ははっきりとしていないが、ノード間の通信帯域がボトルネックになるケースが多い。2013年時点の標準的なサーバーハードウエア構成では、事実上の上限は250台程度と考えられている。Hibariは分散システムに適したプログラミング言語Erlangで書かれており、高負荷時でも高い安定性を誇る。Hibariの各ノードは数年間無停止で稼働できることが実運用で確認されており、ソフトウェアのアップグレードもサービス無停止で行える。またJavaで書かれたNoSQLと異なり、64GB程度の大容量のRAMを搭載したサーバーでも、256MB程度の小容量のRAMを搭載した組み込み向けハードウェアでも良好に動作する。クライアントインターフェイス[編集]HibariはクライアントAPIとして Amazon S3、JSON-RPC、Universal Binary Protocol に対応し、Apache Thrift に対応する予定もある。またプログラミング言語 Erlang からのアクセスにも対応している。Hibariにアクセスできる言語には Java、C言語、C++、Python、Ruby などがある。外部リンク[編集]HibariプロジェクトホームページHibari アプリケーション開発者ガイド講義資料：実機によるRiakとHibariのNOSQLハンズオン参考文献[編集]^ 日経コンピュータ ニュース：ジェミナイ、独自開発キー・バリュー型データストア「Hibari」をオープンソース化^ クラウディアン プレスリリース：Big Dataに最適なデータベース、Hibari(雲雀)のオープンソース化について^ クラウディアン製品情報：Hibari NoSQLデータベース^ Chain Replication for Supporting. High Throughput and Availability（PDF形式）^ Chain Replication in Theory and in Practice（PDF形式）^ Hibari White Paper（PDF形式）  「http://ja.wikipedia.org/w/index.php?title=Hibari_(dbms)&oldid=46687164」から取得  カテゴリ: クラウドコンピューティングデータベース管理システムNoSQLデータベース分散処理     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   リンクを編集        最終更新 2013年3月16日 (土) 02:26 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65816"),body:"Apache CouchDB  出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Apache CouchDBCouchDB's Futon Administration Interface, User database作者Damien Katz, Jan Lehnardt, Noah Slater, Christopher Lenz, J. Chris Anderson, Paul Davis, Adam Kocoloski, Jason Davies, Benoît Chesneau, Filipe Manana, Robert Newson開発元Apache Software Foundation初版2005最新版1.2.0 / 2012年4月6日（14か月前） （2012-04-06）プログラミング言語Erlang対応OSクロスプラットフォーム対応言語Englishサポート状況Active種別ドキュメント指向データベースライセンスApache License 2.0公式サイトcouchdb.apache.orgテンプレートを表示Apache CouchDB とは、ドキュメント指向のオープンソースデータベース。主に、Erlangで書かれている。NoSQL のグループに属し、複数台にスケールするように設計されている。Apache CouchDB は Couchbase と Cloudant によってサポートされている。機能[編集]ドキュメントストレージACID セマンティックスMap/Reduce ビューとインデックス分散アーキテクチャとレプリケーションREST API結果整合性外部リンク[編集]公式ウェブサイト表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Apache_CouchDB&oldid=46753800」から取得  カテゴリ: NoSQLデータベースデータベース管理システムドキュメント指向データベースApacheソフトウェア財団     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   العربية Česky Deutsch English Español فارسی Français Polski Português Русский Українська リンクを編集        最終更新 2013年3月19日 (火) 22:48 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65817"),body:"Apache ZooKeeper  出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  ZooKeeper開発元Apacheソフトウェア財団最新版3.3.5 / 2012年3月20日（15か月前） （2012-03-20）プログラミング言語Java対応OSCross-platform種別Distributed computingライセンスApache License 2.0公式サイトhttp://hadoop.apache.org/zookeeper/テンプレートを表示Apache ZooKeeperは Apacheソフトウェア財団のオープンソースプロジェクトで、大規模分散システムでよく利用される、設定情報の集中管理や名前付けなどのサービスを提供するソフトウェアである。Hadoopのサブプロジェクトの一つである。ZooKeeperのアーキテクチャでは、高可用性を冗長サービスにより提供している。つまり、クライアントはあるZooKeeperノードへの問い合わせが失敗したら、他のノードに問い合わせることができる。データの更新は一つのマスターノードだけが行うようになっているので、データがノード間で矛盾した内容になることはない（ただし、最新のデータでない可能性はある）。更新を担当するマスターノードが何らかの理由で停止した場合には、各ノード間で選挙を行い、新たな更新ノードが選ばれる。ZooKeeperはデータを階層的な名前空間に保存しているが、これはファイルシステムやトライ木のデータ構造によく似ている。クライアントはこのノードに読み書きを行うことによって、設定情報共有などのサービスを提供する。[1]ZooKeeperはen:Rackspaceやen:Yahoo!などの企業で[2]、またSolrのようなオープンソースのエンタープライズサーチシステムで使用されている。目次1 典型的な用途2 関連項目3 参考文献4 外部リンク典型的な用途[編集]ディレクトリ・サービス構成管理同期_(計算機科学)リーダー選出メッセージキューen:Notification関連項目[編集]ポータル JavaHadoop参考文献[編集]^ ZooKeeper docs^ http://hadoop.apache.org/zookeeper/docs/current/zookeeperOver.html ZooKeeper Overview: A Distributed Coordination Service for Distributed Applications外部リンク[編集]ZooKeeper homepage日本語訳(あしたのオープンソース研究所)Article in highscalability.comYahoo! developer network videoSoftware Development Times article of ZooKeeper moving to ApacheEclipse ECF Discovery based on Apache ZooKeeper表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Apache_ZooKeeper&oldid=46767620」から取得  カテゴリ: Apacheソフトウェア財団オープンソースJava     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   English Español リンクを編集        最終更新 2013年3月20日 (水) 02:03 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65818"),body:"Apache HBase  出典: フリー百科事典『ウィキペディア（Wikipedia）』 （HBaseから転送）  移動: 案内、 検索  Apache HBase開発元Apache Software Foundation最新版0.94.1 / 2012年8月8日（9か月前） （2012-08-08）プログラミング言語Java対応OSクロスプラットフォームサポート状況Active種別列指向データベースマネジメントシステムライセンスApache License 2.0公式サイトhttp://hadoop.apache.org/hbase/テンプレートを表示Apache HBaseはオープンソースの、列指向、分散データベースであり、 GoogleのBigTableをモデルとし、Javaにより書かれている。Apacheソフトウェア財団のHadoopプロジェクトの一部として開発され、HDFS (Hadoop Distributed File System)の上で実行され、Hadoopに対しBigTableのような機能を提供する。HBaseはBigTable論文に従い圧縮、インメモリ処理の機能、および各列ごとにブルームフィルタを持っている。 [1] HBaseにおけるテーブルはHadoop上のMapReduceジョブの入出力として機能し、Java APIのほか、REST、Avro、ThriftといったゲートウェイAPIを通じアクセスが可能である。HBaseは、古典的なSQLデータベースを直接置き換えるものではないが、近年ではパフォーマンスが向上し、FacebookのMessaging Platformなど、データ駆動型のWebサイトでも使用されている。目次1 歴史2 参考文献3 関連項目4 外部リンク歴史[編集]HBaseはPowerset社において自然言語処理を行うため、大規模データの処理を行う必要があり、プロジェクトとして始まった。今はApacheのトップレベルプロジェクトであり、注目を集めている。[2]参考文献[編集]^ Chang, et al. (2006). Bigtable: A Distributed Storage System for Structured Data^ Powerset Blog関連項目[編集]BigTableHypertable - C++実装 [1]外部リンク[編集]HBase公式サイト日本語訳(あしたのオープンソース研究所)Hadoop公式サイト日本語訳(あしたのオープンソース研究所)Hbase解説表・話・編・歴Apacheソフトウェア財団Top level ProjectsApache HTTP Server - ActiveMQ - Ant - APR - Axis - Axis2 - Cassandra - Cayenne - Cocoon - Commons - CouchDB - CXF - Directory - DB - Felix - Forrest - Geronimo - Gump - Hadoop - HttpComponents - Jackrabbit - James - JMeter - Lenya - Maven - Mina - MyFaces - ODE - OFBiz - OpenEJB - OpenJPA - Pivot - POI - mod_perl - Roller - Santuario - ServiceMix - SpamAssassin - STDCXX - Struts - Subversion - Synapse - Tapestry - Tcl - Tiles - Tomcat - Turbine - Velocity - WebWork 2 - Wicket - WSIF - XMLBeansApache CommonsAttributes - BSF - BCEL - BeanUtils - Betwixt - Chain - CLI - Codec - Collections - Configuration - Daemon - DBCP - DBUtils - Digester - Discovery - EL - Email - FileUpload - IO - JCI - JCS - Jelly - Jexl - JXPath - Lang - Launcher - Logging - Math - Modeler - Net - Pool - Primitives - Proxy - SCXML - Transaction - Validator - VFSApache DBDerby - Torque - DdlUtils - JDOApache PortalsJetspeed 1 - Jetspeed 2 - Graffito - Pluto - WSRP4JApache LuceneLucene Java - Solr - Nutch - Lucene4c - LucyApache XMLXalan - XercesApache XML GraphicsBatik - FOP - XMLGraphicsCommonsApache LoggingLog4j - Log4Cxx - Log4Perl - Log4PLSQLApache HadoopHadoop - HDFS - Avro -ZooKeeperApache IncubatorXAP - River - Graffito - Tuscany - Log4Net - Abdera - CeltiXfire - FtpServer - Heraldry - Ivy - JuiCE - Kabuki - Lokahi - Lucene.Net - mod_ftp - NMaven - Woden - WSRP4J - Yoko - Hama - Log4PHP - Qpid - TripleSoup - UIMA - wadi - OpenOfficeApache Attic開発終了Harmony - AxKit - iBATIS - ORO - Jakarta ProjectLicense: Apache License - Website: www.apache.org  「http://ja.wikipedia.org/w/index.php?title=Apache_HBase&oldid=46782727」から取得  カテゴリ: NoSQLデータベースデータベース管理システムApacheソフトウェア財団     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   English فارسی Français Magyar Italiano Português Русский 中文 リンクを編集        最終更新 2013年3月20日 (水) 05:12 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
{ _id:ObjectId("51dbd3df8b6a6bae31d65819"),body:"Riak 出典: フリー百科事典『ウィキペディア（Wikipedia）』   移動: 案内、 検索  Riak開発元Basho Technologies初版2009最新版1.3.0 / 2013年2月21日（4か月前） （2013-02-21）プログラミング言語Erlang, C, C++, some JavaScript対応OSLinux, BSD, Mac OS X, SolarisプラットフォームIA-32, x86-64サポート状況Active種別DatabaseライセンスApache License 2.0公式サイトwiki.basho.comテンプレートを表示Riak[1] は Amazon Dynamo の論文 [2] に基づいて実装されている NoSQL データベース。Riak はバックエンドとなるシャードパーティションストレージが差し替え可能な構成であり、デフォルトのバックエンドストレージは Bitcask である[3]。また MapReduce 機構を持ちネイティブで JavaScript (SpiderMonkey ランタイム) と Erlang、言語ドライバの追加で Python, Java, PHP, Ruby のような様々な言語をサポートしている[4]。2012年2月21日、Basho は Riak v1.1 をアナウンス。Riak 1.1 では Riaknostic、エラーのロギングとレポートの強化、大規模クラスタに対する弾性の改善、Riak Control と呼ばれる新しい GUI とモニタリングインターフェースが導入された。2012年3月27日、Basho は Riak CS (Cloud Storage) をリリース。Riak CS は Riak 上でのマルチテナンシー、パフォーマンス計測、LOB のサポート、S3 互換 API を提供。Basho は 2013年2月21日に Riak 1.3 の一般的な有用性をアナウンス [5]。Riak はフォーチュン 50 カンパニーのうち 25% 以上を含む世界中の数千社で導入されている[6]。採用企業には Symantec, Best Buy, Workday, Yahoo! JAPAN, Voxer, Braintree, Bump, Boeing, Comcast, AOL, Ask.com, Yammer, Yandex, AT&T, Datapipe[7] などがある。References[編集]^ “Riak: An Open Source Scalable Data Store” (2010年11月28日). 2011年10月13日閲覧。^ Dynamo: Amazon’s Highly Available Key-value Store, SOSP 2007^ “Basho: Bitcask”. Riak Wiki. 2013年3月9日閲覧。^ “Riak Client Libraries and Community Code”. 2011年3月19日閲覧。^ “Riak Amps Up Multi-Data Center Replication with version 1.2”. 2013年2月21日閲覧。^ “GigaOM: Basho takes aim at more enterprises with upgrades”. 2013年3月9日閲覧。^ “Riak Customers”. Riak. 2013年2月21日閲覧。External links[編集]公式ウェブサイトOfficial wikiBasho websiteBashoジャパン株式会社 WebサイトGigaOM: Basho arms would-be Amazon killers with AWS-compatible storageNetCircle: Using Riak at NetCircleRiak at AOLRiak at Temetra for Smart MeteringUsing Riak for Ranking Collection at SEOmozUsing Riak at Github on Rackspace CloudSearching with RiakSearch at inagist.comRiak and Scala at YammerRiak in Production at VoxerRiak Benchmarks on Joyent CloudAirbrake migration from MongoDB to Riakこの項目は、ソフトウェアに関連した書きかけの項目です。この項目を加筆・訂正などしてくださる協力者を求めています（プロジェクト:コンピュータ/Portal:コンピュータ）。  「http://ja.wikipedia.org/w/index.php?title=Riak&oldid=47500121」から取得  カテゴリ: クラウドコンピューティングNoSQLデータベースJavaScript隠しカテゴリ: ソフトウェア関連のスタブ     案内メニュー   個人用ツール アカウント作成ログイン    名前空間  ページ ノート    変種        表示  閲覧 編集 履歴表示  操作     検索             案内   メインページ コミュニティ・ポータル 最近の出来事 新しいページ 最近の更新 おまかせ表示 練習用ページ アップロード (ウィキメディア・コモンズ)   ヘルプ   ヘルプ 井戸端 お知らせ バグの報告 寄付 ウィキペディアに関するお問い合わせ   ツールボックス   リンク元 関連ページの更新状況 ファイルをアップロード 特別ページ 印刷用バージョン この版への固定リンク ページ情報このページを引用   他言語版   Deutsch English Français Русский Українська リンクを編集        最終更新 2013年4月17日 (水) 06:54 （日時は個人設定で未設定ならばUTC）。 テキストはクリエイティブ・コモンズ 表示-継承ライセンスの下で利用可能です。追加の条件が適用される場合があります。詳細は利用規約を参照してください。   プライバシー・ポリシー ウィキペディアについて 免責事項 モバイルビュー             \n"}
